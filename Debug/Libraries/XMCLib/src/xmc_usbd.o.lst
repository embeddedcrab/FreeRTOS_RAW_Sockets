   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .eabi_attribute 28,1
   5              	 .fpu fpv4-sp-d16
   6              	 .eabi_attribute 23,1
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_usbd.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_USBD_lReadFifo:
  24              	.LFB170:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  61:../Libraries/XMCLib/src/xmc_usbd.c **** 
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../Libraries/XMCLib/src/xmc_usbd.c **** 
  68:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../Libraries/XMCLib/src/xmc_usbd.c **** 	
  70:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../Libraries/XMCLib/src/xmc_usbd.c **** 
  80:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  84:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  86:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  88:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  90:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  92:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  97:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  99:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 100:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 101:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 103:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 104:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 107:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 108:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 110:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 111:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 112:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 114:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 115:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 116:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 118:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 119:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 121:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 122:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 123:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 125:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 126:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 128:../Libraries/XMCLib/src/xmc_usbd.c **** 
 129:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 130:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 132:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** 
 150:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 151:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 153:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 154:../Libraries/XMCLib/src/xmc_usbd.c **** {
 155:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 171:../Libraries/XMCLib/src/xmc_usbd.c **** };
 172:../Libraries/XMCLib/src/xmc_usbd.c **** 
 173:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 174:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 180:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 181:../Libraries/XMCLib/src/xmc_usbd.c **** {
 182:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 188:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 189:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 192:../Libraries/XMCLib/src/xmc_usbd.c **** }
 193:../Libraries/XMCLib/src/xmc_usbd.c **** 
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 196:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 205:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 206:../Libraries/XMCLib/src/xmc_usbd.c **** {
  26              	 .loc 1 206 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	.LVL0:
  31 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 20
  34              	 .cfi_offset 4,-20
  35              	 .cfi_offset 5,-16
  36              	 .cfi_offset 6,-12
  37              	 .cfi_offset 7,-8
  38              	 .cfi_offset 14,-4
  39              	.LVL1:
 207:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
  40              	 .loc 1 211 0
  41 0002 224B     	 ldr r3,.L10
  42 0004 D3F8E071 	 ldr r7,[r3,#480]
  43              	.LVL2:
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
  44              	 .loc 1 214 0
  45 0008 03EB8003 	 add r3,r3,r0,lsl#2
  46 000c D3F8C431 	 ldr r3,[r3,#452]
  47 0010 1B68     	 ldr r3,[r3]
  48              	.LVL3:
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
  49              	 .loc 1 218 0
  50 0012 C3F30723 	 ubfx r3,r3,#8,#8
  51              	.LVL4:
  52 0016 23F07F03 	 bic r3,r3,#127
  53 001a 13F0FF0F 	 tst r3,#255
  54 001e 33D0     	 beq .L1
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 220:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 221:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
  55              	 .loc 1 222 0
  56 0020 3423     	 movs r3,#52
  57 0022 1A4A     	 ldr r2,.L10
  58 0024 03FB0023 	 mla r3,r3,r0,r2
  59              	.LVL5:
  60 0028 5B6A     	 ldr r3,[r3,#36]
  61              	.LVL6:
  62 002a 6BB3     	 cbz r3,.L1
  63              	.LVL7:
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 224:../Libraries/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 225:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 228:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
  64              	 .loc 1 229 0 discriminator 1
  65 002c 8B08     	 lsrs r3,r1,#2
  66              	.LVL8:
  67 002e 0BD0     	 beq .L3
  68              	 .loc 1 229 0 is_stmt 0
  69 0030 0022     	 movs r2,#0
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 231:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
  70              	 .loc 1 231 0 is_stmt 1
  71 0032 3424     	 movs r4,#52
  72 0034 154E     	 ldr r6,.L10
  73 0036 04FB0066 	 mla r6,r4,r0,r6
  74              	.LVL9:
  75              	.L4:
  76              	 .loc 1 231 0 is_stmt 0 discriminator 3
  77 003a 3D68     	 ldr r5,[r7]
  78 003c 746A     	 ldr r4,[r6,#36]
  79 003e 44F82250 	 str r5,[r4,r2,lsl#2]
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
  80              	 .loc 1 229 0 is_stmt 1 discriminator 3
  81 0042 0132     	 adds r2,r2,#1
  82              	.LVL10:
  83 0044 9A42     	 cmp r2,r3
  84 0046 F8D1     	 bne .L4
  85              	.LVL11:
  86              	.L3:
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
  87              	 .loc 1 216 0
  88 0048 9B00     	 lsls r3,r3,#2
  89              	.LVL12:
 232:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
  90              	 .loc 1 234 0
  91 004a 9942     	 cmp r1,r3
  92 004c 12D0     	 beq .L5
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
  93              	 .loc 1 236 0
  94 004e 3F68     	 ldr r7,[r7]
  95              	.LVL13:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
  96              	 .loc 1 237 0
  97 0050 10D9     	 bls .L5
  98 0052 0024     	 movs r4,#0
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 239:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
  99              	 .loc 1 239 0
 100 0054 3422     	 movs r2,#52
 101 0056 0D4E     	 ldr r6,.L10
 102 0058 02FB0066 	 mla r6,r2,r0,r6
 103 005c 4FF0FF0E 	 mov lr,#255
 104              	.LVL14:
 105              	.L6:
 106              	 .loc 1 239 0 is_stmt 0 discriminator 3
 107 0060 756A     	 ldr r5,[r6,#36]
 108 0062 0EFA04F2 	 lsl r2,lr,r4
 109 0066 3A40     	 ands r2,r2,r7
 110 0068 E240     	 lsrs r2,r2,r4
 111 006a EA54     	 strb r2,[r5,r3]
 112              	.LVL15:
 113 006c 0133     	 adds r3,r3,#1
 114              	.LVL16:
 115 006e 0834     	 adds r4,r4,#8
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 116              	 .loc 1 237 0 is_stmt 1 discriminator 3
 117 0070 8B42     	 cmp r3,r1
 118 0072 F5D1     	 bne .L6
 119              	.LVL17:
 120              	.L5:
 240:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 241:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 242:../Libraries/XMCLib/src/xmc_usbd.c **** 
 243:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 121              	 .loc 1 244 0
 122 0074 3422     	 movs r2,#52
 123 0076 054B     	 ldr r3,.L10
 124 0078 02FB0030 	 mla r0,r2,r0,r3
 125              	.LVL18:
 126 007c C36A     	 ldr r3,[r0,#44]
 127 007e 0B44     	 add r3,r3,r1
 128 0080 C362     	 str r3,[r0,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 129              	 .loc 1 245 0
 130 0082 436A     	 ldr r3,[r0,#36]
 131 0084 1944     	 add r1,r1,r3
 132              	.LVL19:
 133 0086 4162     	 str r1,[r0,#36]
 134              	.L1:
 135 0088 F0BD     	 pop {r4,r5,r6,r7,pc}
 136              	.L11:
 137 008a 00BF     	 .align 2
 138              	.L10:
 139 008c 00000000 	 .word xmc_device
 140              	 .cfi_endproc
 141              	.LFE170:
 143              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 144              	 .align 2
 145              	 .thumb
 146              	 .thumb_func
 148              	XMC_USBD_lFlushTXFifo:
 149              	.LFB172:
 246:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 249:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 250:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 258:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 259:../Libraries/XMCLib/src/xmc_usbd.c **** {
 260:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 273:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 276:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 280:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 282:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 283:../Libraries/XMCLib/src/xmc_usbd.c **** 
 284:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 289:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 291:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 293:../Libraries/XMCLib/src/xmc_usbd.c **** }
 294:../Libraries/XMCLib/src/xmc_usbd.c **** 
 295:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 296:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 302:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 303:../Libraries/XMCLib/src/xmc_usbd.c **** {
 150              	 .loc 1 303 0
 151              	 .cfi_startproc
 152              	 
 153              	 
 154              	 
 155              	.LVL20:
 156 0000 82B0     	 sub sp,sp,#8
 157              	.LCFI1:
 158              	 .cfi_def_cfa_offset 8
 304:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 159              	 .loc 1 306 0
 160 0002 0023     	 movs r3,#0
 161 0004 0193     	 str r3,[sp,#4]
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 162              	 .loc 1 308 0
 163 0006 019B     	 ldr r3,[sp,#4]
 164 0008 43F02003 	 orr r3,r3,#32
 165 000c 0193     	 str r3,[sp,#4]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 166              	 .loc 1 309 0
 167 000e 00F01F00 	 and r0,r0,#31
 168              	.LVL21:
 169 0012 019B     	 ldr r3,[sp,#4]
 170 0014 23F4F863 	 bic r3,r3,#1984
 171 0018 43EA8013 	 orr r3,r3,r0,lsl#6
 172 001c 0193     	 str r3,[sp,#4]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 173              	 .loc 1 310 0
 174 001e 0C4B     	 ldr r3,.L20
 175 0020 D3F8A031 	 ldr r3,[r3,#416]
 176 0024 019A     	 ldr r2,[sp,#4]
 177 0026 1A61     	 str r2,[r3,#16]
 178              	.LVL22:
 179 0028 4FF47A73 	 mov r3,#1000
 180              	.LVL23:
 181              	.L13:
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 182              	 .loc 1 311 0 discriminator 3
 183 002c 013B     	 subs r3,r3,#1
 184              	.LVL24:
 185 002e FDD1     	 bne .L13
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 314:../Libraries/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 186              	 .loc 1 314 0
 187 0030 074B     	 ldr r3,.L20
 188              	.LVL25:
 189 0032 D3F8A021 	 ldr r2,[r3,#416]
 190              	.L14:
 191              	 .loc 1 314 0 is_stmt 0 discriminator 1
 192 0036 1369     	 ldr r3,[r2,#16]
 193 0038 0193     	 str r3,[sp,#4]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 194              	 .loc 1 315 0 is_stmt 1 discriminator 1
 195 003a 019B     	 ldr r3,[sp,#4]
 196 003c 13F0200F 	 tst r3,#32
 197 0040 F9D1     	 bne .L14
 198 0042 40F2E933 	 movw r3,#1001
 199              	.L15:
 200              	.LVL26:
 316:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 201              	 .loc 1 317 0 discriminator 1
 202 0046 013B     	 subs r3,r3,#1
 203              	.LVL27:
 204 0048 FDD1     	 bne .L15
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 319:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 321:../Libraries/XMCLib/src/xmc_usbd.c **** }
 205              	 .loc 1 321 0
 206 004a 02B0     	 add sp,sp,#8
 207              	.LCFI2:
 208              	 .cfi_def_cfa_offset 0
 209              	 
 210 004c 7047     	 bx lr
 211              	.L21:
 212 004e 00BF     	 .align 2
 213              	.L20:
 214 0050 00000000 	 .word xmc_device
 215              	 .cfi_endproc
 216              	.LFE172:
 218              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 219              	 .align 2
 220              	 .thumb
 221              	 .thumb_func
 223              	XMC_USBD_lFlushRXFifo:
 224              	.LFB173:
 322:../Libraries/XMCLib/src/xmc_usbd.c **** 
 323:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 324:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 325:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 326:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 327:../Libraries/XMCLib/src/xmc_usbd.c **** {
 225              	 .loc 1 327 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229              	 
 230 0000 82B0     	 sub sp,sp,#8
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 328:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 329:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 330:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 331:../Libraries/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 233              	 .loc 1 331 0
 234 0002 0023     	 movs r3,#0
 235 0004 0193     	 str r3,[sp,#4]
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 236              	 .loc 1 332 0
 237 0006 019B     	 ldr r3,[sp,#4]
 238 0008 43F01003 	 orr r3,r3,#16
 239 000c 0193     	 str r3,[sp,#4]
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 240              	 .loc 1 334 0
 241 000e 0C4B     	 ldr r3,.L30
 242 0010 D3F8A021 	 ldr r2,[r3,#416]
 243 0014 0199     	 ldr r1,[sp,#4]
 244 0016 1161     	 str r1,[r2,#16]
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 337:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 338:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 245              	 .loc 1 338 0
 246 0018 D3F8A011 	 ldr r1,[r3,#416]
 327:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 247              	 .loc 1 327 0
 248 001c 4FF47A72 	 mov r2,#1000
 249              	.L24:
 250              	.LVL28:
 251 0020 1346     	 mov r3,r2
 252              	.LVL29:
 253              	.L23:
 337:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 254              	 .loc 1 337 0 discriminator 3
 255 0022 013B     	 subs r3,r3,#1
 256              	.LVL30:
 257 0024 FDD1     	 bne .L23
 258              	 .loc 1 338 0
 259 0026 0B69     	 ldr r3,[r1,#16]
 260              	.LVL31:
 261 0028 0193     	 str r3,[sp,#4]
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 262              	 .loc 1 339 0
 263 002a 019B     	 ldr r3,[sp,#4]
 264 002c 13F0100F 	 tst r3,#16
 265 0030 F6D1     	 bne .L24
 266 0032 40F2E933 	 movw r3,#1001
 267              	.L25:
 268              	.LVL32:
 340:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 269              	 .loc 1 341 0 discriminator 1
 270 0036 013B     	 subs r3,r3,#1
 271              	.LVL33:
 272 0038 FDD1     	 bne .L25
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbd.c **** }
 273              	 .loc 1 345 0
 274 003a 02B0     	 add sp,sp,#8
 275              	.LCFI4:
 276              	 .cfi_def_cfa_offset 0
 277              	 
 278 003c 7047     	 bx lr
 279              	.L31:
 280 003e 00BF     	 .align 2
 281              	.L30:
 282 0040 00000000 	 .word xmc_device
 283              	 .cfi_endproc
 284              	.LFE173:
 286              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 287              	 .align 2
 288              	 .thumb
 289              	 .thumb_func
 291              	XMC_USBD_lStartReadXfer:
 292              	.LFB176:
 346:../Libraries/XMCLib/src/xmc_usbd.c **** 
 347:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 348:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 349:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 350:../Libraries/XMCLib/src/xmc_usbd.c **** 
 351:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 353:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 354:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 358:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 361:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 366:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 369:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 371:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 373:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 374:../Libraries/XMCLib/src/xmc_usbd.c **** }
 375:../Libraries/XMCLib/src/xmc_usbd.c **** 
 376:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 377:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 378:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 379:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 382:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 383:../Libraries/XMCLib/src/xmc_usbd.c **** {
 384:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 385:../Libraries/XMCLib/src/xmc_usbd.c **** }
 386:../Libraries/XMCLib/src/xmc_usbd.c **** 
 387:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 388:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 389:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 390:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 398:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 399:../Libraries/XMCLib/src/xmc_usbd.c **** {
 293              	 .loc 1 399 0
 294              	 .cfi_startproc
 295              	 
 296              	 
 297              	 
 298              	.LVL34:
 299 0000 30B4     	 push {r4,r5}
 300              	.LCFI5:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 4,-8
 303              	 .cfi_offset 5,-4
 400:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 401:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 402:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 304              	 .loc 1 403 0
 305 0002 0021     	 movs r1,#0
 306              	.LVL35:
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 307              	 .loc 1 404 0
 308 0004 046B     	 ldr r4,[r0,#48]
 309 0006 826A     	 ldr r2,[r0,#40]
 310 0008 8368     	 ldr r3,[r0,#8]
 311 000a C3F31203 	 ubfx r3,r3,#0,#19
 312 000e A51A     	 subs r5,r4,r2
 313 0010 9D42     	 cmp r5,r3
 405:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 406:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 314              	 .loc 1 406 0
 315 0012 86BF     	 itte hi
 316 0014 9B18     	 addhi r3,r3,r2
 317 0016 8362     	 strhi r3,[r0,#40]
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 409:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 410:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 318              	 .loc 1 410 0
 319 0018 8462     	 strls r4,[r0,#40]
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 320              	 .loc 1 412 0
 321 001a 0378     	 ldrb r3,[r0]
 322 001c 13F00F0F 	 tst r3,#15
 323 0020 07D1     	 bne .L35
 324              	.LVL36:
 325              	.LBB2:
 413:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 414:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 415:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 416:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 326              	 .loc 1 417 0
 327 0022 0123     	 movs r3,#1
 328 0024 63F3D441 	 bfi r1,r3,#19,#2
 329              	.LVL37:
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 330              	 .loc 1 418 0
 331 0028 41F0C041 	 orr r1,r1,#1610612736
 332              	.LVL38:
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 333              	 .loc 1 419 0
 334 002c 64F30601 	 bfi r1,r4,#0,#7
 335              	.LVL39:
 336              	.LBE2:
 337 0030 14E0     	 b .L36
 338              	.LVL40:
 339              	.L35:
 420:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 421:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 422:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 423:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 340              	 .loc 1 424 0
 341 0032 836A     	 ldr r3,[r0,#40]
 342 0034 2BB9     	 cbnz r3,.L37
 425:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 343              	 .loc 1 426 0
 344 0036 6FF31201 	 bfc r1,#0,#19
 345              	.LVL41:
 427:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 346              	 .loc 1 427 0
 347 003a 0123     	 movs r3,#1
 348 003c 63F3DC41 	 bfi r1,r3,#19,#10
 349 0040 0CE0     	 b .L36
 350              	.LVL42:
 351              	.L37:
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 429:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 430:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 431:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 352              	 .loc 1 432 0
 353 0042 C26A     	 ldr r2,[r0,#44]
 354 0044 9B1A     	 subs r3,r3,r2
 355 0046 4268     	 ldr r2,[r0,#4]
 356 0048 C2F3C624 	 ubfx r4,r2,#11,#7
 357 004c 1A19     	 adds r2,r3,r4
 358 004e 013A     	 subs r2,r2,#1
 359 0050 B2FBF4F2 	 udiv r2,r2,r4
 360 0054 62F3DC41 	 bfi r1,r2,#19,#10
 361              	.LVL43:
 433:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 362              	 .loc 1 433 0
 363 0058 63F31201 	 bfi r1,r3,#0,#19
 364              	.L36:
 434:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 435:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 365              	 .loc 1 436 0
 366 005c 114B     	 ldr r3,.L40
 367 005e 1B68     	 ldr r3,[r3]
 368 0060 5B7B     	 ldrb r3,[r3,#13]
 369 0062 4BB9     	 cbnz r3,.L38
 437:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 438:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 439:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 370              	 .loc 1 439 0
 371 0064 0378     	 ldrb r3,[r0]
 372 0066 03F00F02 	 and r2,r3,#15
 373 006a 0F4B     	 ldr r3,.L40+4
 374 006c 03EB8203 	 add r3,r3,r2,lsl#2
 375 0070 D3F8C431 	 ldr r3,[r3,#452]
 376 0074 426A     	 ldr r2,[r0,#36]
 377 0076 5A61     	 str r2,[r3,#20]
 378              	.L38:
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 379              	 .loc 1 442 0
 380 0078 0B4A     	 ldr r2,.L40+4
 381 007a 0378     	 ldrb r3,[r0]
 382 007c 03F00F03 	 and r3,r3,#15
 383 0080 02EB8303 	 add r3,r2,r3,lsl#2
 384 0084 D3F8C431 	 ldr r3,[r3,#452]
 385 0088 1961     	 str r1,[r3,#16]
 443:../Libraries/XMCLib/src/xmc_usbd.c ****  
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 386              	 .loc 1 444 0
 387 008a 0378     	 ldrb r3,[r0]
 388 008c 03F00F03 	 and r3,r3,#15
 389 0090 02EB8302 	 add r2,r2,r3,lsl#2
 390 0094 D2F8C421 	 ldr r2,[r2,#452]
 391 0098 1368     	 ldr r3,[r2]
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 392              	 .loc 1 446 0
 393 009a 43F00443 	 orr r3,r3,#-2080374784
 394              	.LVL44:
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 395              	 .loc 1 447 0
 396 009e 1360     	 str r3,[r2]
 448:../Libraries/XMCLib/src/xmc_usbd.c **** }
 397              	 .loc 1 448 0
 398 00a0 30BC     	 pop {r4,r5}
 399              	.LCFI6:
 400              	 .cfi_restore 5
 401              	 .cfi_restore 4
 402              	 .cfi_def_cfa_offset 0
 403 00a2 7047     	 bx lr
 404              	.L41:
 405              	 .align 2
 406              	.L40:
 407 00a4 00000000 	 .word usbd_init
 408 00a8 00000000 	 .word xmc_device
 409              	 .cfi_endproc
 410              	.LFE176:
 412              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 413              	 .align 2
 414              	 .thumb
 415              	 .thumb_func
 417              	XMC_USBD_lStartWriteXfer:
 418              	.LFB177:
 449:../Libraries/XMCLib/src/xmc_usbd.c **** 
 450:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 451:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 452:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 453:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 458:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 459:../Libraries/XMCLib/src/xmc_usbd.c **** {
 419              	 .loc 1 459 0
 420              	 .cfi_startproc
 421              	 
 422              	 
 423              	 
 424              	.LVL45:
 425 0000 70B4     	 push {r4,r5,r6}
 426              	.LCFI7:
 427              	 .cfi_def_cfa_offset 12
 428              	 .cfi_offset 4,-12
 429              	 .cfi_offset 5,-8
 430              	 .cfi_offset 6,-4
 460:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 461:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 462:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 431              	 .loc 1 463 0
 432 0002 0024     	 movs r4,#0
 433              	.LVL46:
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 434              	 .loc 1 464 0
 435 0004 0378     	 ldrb r3,[r0]
 436 0006 03F00F03 	 and r3,r3,#15
 437 000a 6A33     	 adds r3,r3,#106
 438 000c 304A     	 ldr r2,.L51
 439 000e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 440 0012 1968     	 ldr r1,[r3]
 441              	.LVL47:
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 442              	 .loc 1 466 0
 443 0014 056B     	 ldr r5,[r0,#48]
 444 0016 826A     	 ldr r2,[r0,#40]
 445 0018 8368     	 ldr r3,[r0,#8]
 446 001a C3F31203 	 ubfx r3,r3,#0,#19
 447 001e AE1A     	 subs r6,r5,r2
 448 0020 9E42     	 cmp r6,r3
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 468:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 449              	 .loc 1 468 0
 450 0022 32BF     	 itee cc
 451 0024 8562     	 strcc r5,[r0,#40]
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 471:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 472:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 452              	 .loc 1 472 0
 453 0026 9B18     	 addcs r3,r3,r2
 454 0028 8362     	 strcs r3,[r0,#40]
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 455              	 .loc 1 474 0
 456 002a 836A     	 ldr r3,[r0,#40]
 457 002c 2BB9     	 cbnz r3,.L45
 475:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 476:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 458              	 .loc 1 476 0
 459 002e 6FF31204 	 bfc r4,#0,#19
 460              	.LVL48:
 477:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 461              	 .loc 1 477 0
 462 0032 0123     	 movs r3,#1
 463 0034 63F3DC44 	 bfi r4,r3,#19,#10
 464 0038 36E0     	 b .L46
 465              	.LVL49:
 466              	.L45:
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 479:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 480:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 467              	 .loc 1 481 0
 468 003a 0278     	 ldrb r2,[r0]
 469 003c 12F00F0F 	 tst r2,#15
 470 0040 07D1     	 bne .L47
 482:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 471              	 .loc 1 483 0
 472 0042 0122     	 movs r2,#1
 473 0044 62F3DC44 	 bfi r4,r2,#19,#10
 474              	.LVL50:
 484:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 485:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 475              	 .loc 1 485 0
 476 0048 C26A     	 ldr r2,[r0,#44]
 477 004a 9B1A     	 subs r3,r3,r2
 478 004c 63F31204 	 bfi r4,r3,#0,#19
 479 0050 0FE0     	 b .L48
 480              	.LVL51:
 481              	.L47:
 486:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 487:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 488:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 482              	 .loc 1 489 0
 483 0052 C26A     	 ldr r2,[r0,#44]
 484 0054 9D1A     	 subs r5,r3,r2
 485 0056 65F31204 	 bfi r4,r5,#0,#19
 486              	.LVL52:
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 487              	 .loc 1 490 0
 488 005a 4568     	 ldr r5,[r0,#4]
 489 005c C5F3C625 	 ubfx r5,r5,#11,#7
 490 0060 9A1A     	 subs r2,r3,r2
 491 0062 6B1E     	 subs r3,r5,#1
 492 0064 9BB2     	 uxth r3,r3
 493 0066 13FA82F3 	 uxtah r3,r3,r2
 494 006a 93FBF5F3 	 sdiv r3,r3,r5
 495 006e 63F3DC44 	 bfi r4,r3,#19,#10
 496              	.L48:
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 497              	 .loc 1 493 0
 498 0072 184B     	 ldr r3,.L51+4
 499 0074 1B68     	 ldr r3,[r3]
 500 0076 5A7B     	 ldrb r2,[r3,#13]
 501 0078 42B9     	 cbnz r2,.L49
 494:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 495:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 496:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 502              	 .loc 1 496 0
 503 007a 0278     	 ldrb r2,[r0]
 504 007c 02F00F02 	 and r2,r2,#15
 505 0080 6A32     	 adds r2,r2,#106
 506 0082 134D     	 ldr r5,.L51
 507 0084 55F82220 	 ldr r2,[r5,r2,lsl#2]
 508 0088 456A     	 ldr r5,[r0,#36]
 509 008a 5561     	 str r5,[r2,#20]
 510              	.L49:
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 511              	 .loc 1 498 0
 512 008c 5B7B     	 ldrb r3,[r3,#13]
 513 008e 012B     	 cmp r3,#1
 514 0090 0AD1     	 bne .L46
 499:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 500:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 501:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 515              	 .loc 1 501 0
 516 0092 0F4B     	 ldr r3,.L51
 517 0094 D3F8A461 	 ldr r6,[r3,#420]
 518 0098 726B     	 ldr r2,[r6,#52]
 519 009a 0578     	 ldrb r5,[r0]
 520 009c 05F00F05 	 and r5,r5,#15
 521 00a0 0123     	 movs r3,#1
 522 00a2 AB40     	 lsls r3,r3,r5
 523 00a4 1343     	 orrs r3,r3,r2
 524 00a6 7363     	 str r3,[r6,#52]
 525              	.L46:
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 503:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 504:../Libraries/XMCLib/src/xmc_usbd.c **** 
 505:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 526              	 .loc 1 506 0
 527 00a8 094A     	 ldr r2,.L51
 528 00aa 0378     	 ldrb r3,[r0]
 529 00ac 03F00F03 	 and r3,r3,#15
 530 00b0 6A33     	 adds r3,r3,#106
 531 00b2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 532 00b6 1C61     	 str r4,[r3,#16]
 507:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 533              	 .loc 1 508 0
 534 00b8 41F00441 	 orr r1,r1,#-2080374784
 535              	.LVL53:
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 536              	 .loc 1 509 0
 537 00bc 0378     	 ldrb r3,[r0]
 538 00be 03F00F03 	 and r3,r3,#15
 539 00c2 6A33     	 adds r3,r3,#106
 540 00c4 52F82330 	 ldr r3,[r2,r3,lsl#2]
 541              	.LVL54:
 542 00c8 1960     	 str r1,[r3]
 510:../Libraries/XMCLib/src/xmc_usbd.c **** }
 543              	 .loc 1 510 0
 544 00ca 70BC     	 pop {r4,r5,r6}
 545              	.LCFI8:
 546              	 .cfi_restore 6
 547              	 .cfi_restore 5
 548              	 .cfi_restore 4
 549              	 .cfi_def_cfa_offset 0
 550              	.LVL55:
 551 00cc 7047     	 bx lr
 552              	.L52:
 553 00ce 00BF     	 .align 2
 554              	.L51:
 555 00d0 00000000 	 .word xmc_device
 556 00d4 00000000 	 .word usbd_init
 557              	 .cfi_endproc
 558              	.LFE177:
 560              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 561              	 .align 2
 562              	 .global XMC_USBD_GetCapabilities
 563              	 .thumb
 564              	 .thumb_func
 566              	XMC_USBD_GetCapabilities:
 567              	.LFB193:
 511:../Libraries/XMCLib/src/xmc_usbd.c **** 
 512:../Libraries/XMCLib/src/xmc_usbd.c **** 
 513:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 514:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 515:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 516:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 520:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 521:../Libraries/XMCLib/src/xmc_usbd.c **** {
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 523:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 524:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 528:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 533:../Libraries/XMCLib/src/xmc_usbd.c **** 
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 536:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 537:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 540:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 541:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 543:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 554:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 556:../Libraries/XMCLib/src/xmc_usbd.c **** 
 557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 567:../Libraries/XMCLib/src/xmc_usbd.c **** 
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 570:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 571:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 572:../Libraries/XMCLib/src/xmc_usbd.c **** 
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 574:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 576:../Libraries/XMCLib/src/xmc_usbd.c **** 
 577:../Libraries/XMCLib/src/xmc_usbd.c **** 
 578:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 582:../Libraries/XMCLib/src/xmc_usbd.c **** 
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 585:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 586:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 588:../Libraries/XMCLib/src/xmc_usbd.c **** 
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 593:../Libraries/XMCLib/src/xmc_usbd.c **** 
 594:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 596:../Libraries/XMCLib/src/xmc_usbd.c **** }
 597:../Libraries/XMCLib/src/xmc_usbd.c **** 
 598:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 599:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 600:../Libraries/XMCLib/src/xmc_usbd.c **** *
 601:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 602:../Libraries/XMCLib/src/xmc_usbd.c **** */
 603:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 604:../Libraries/XMCLib/src/xmc_usbd.c **** {
 605:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 610:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 612:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 613:../Libraries/XMCLib/src/xmc_usbd.c **** 
 614:../Libraries/XMCLib/src/xmc_usbd.c **** }
 615:../Libraries/XMCLib/src/xmc_usbd.c **** 
 616:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 617:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 618:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 619:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 621:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 622:../Libraries/XMCLib/src/xmc_usbd.c **** {
 623:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 624:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 625:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 627:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 630:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 631:../Libraries/XMCLib/src/xmc_usbd.c **** 
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 634:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 635:../Libraries/XMCLib/src/xmc_usbd.c **** 
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 637:../Libraries/XMCLib/src/xmc_usbd.c **** 
 638:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 642:../Libraries/XMCLib/src/xmc_usbd.c **** 
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 645:../Libraries/XMCLib/src/xmc_usbd.c **** }
 646:../Libraries/XMCLib/src/xmc_usbd.c **** 
 647:../Libraries/XMCLib/src/xmc_usbd.c **** 
 648:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 649:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 650:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 651:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 654:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 655:../Libraries/XMCLib/src/xmc_usbd.c **** {
 656:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 657:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 658:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 666:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 675:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 676:../Libraries/XMCLib/src/xmc_usbd.c ****  
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 679:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 680:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 683:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 684:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 688:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 690:../Libraries/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 693:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 697:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 699:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 700:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 702:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 704:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 707:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 708:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 709:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 711:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 713:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 716:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 717:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 719:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 722:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 723:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 724:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 725:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 726:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 728:../Libraries/XMCLib/src/xmc_usbd.c **** 
 729:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 730:../Libraries/XMCLib/src/xmc_usbd.c **** 
 731:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 732:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 733:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 734:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 735:../Libraries/XMCLib/src/xmc_usbd.c **** 
 736:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 738:../Libraries/XMCLib/src/xmc_usbd.c **** }
 739:../Libraries/XMCLib/src/xmc_usbd.c **** 
 740:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 741:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 742:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 743:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 746:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 747:../Libraries/XMCLib/src/xmc_usbd.c **** {
 748:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 749:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 750:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 758:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   
 763:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 765:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 769:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 770:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 773:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 774:../Libraries/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 777:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 779:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 780:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 783:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 785:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 786:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 787:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 790:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 791:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 793:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 795:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 796:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 798:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 801:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 802:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 803:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 805:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 808:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 811:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 812:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 813:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 814:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 815:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 816:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 817:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 818:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 820:../Libraries/XMCLib/src/xmc_usbd.c **** 
 821:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 822:../Libraries/XMCLib/src/xmc_usbd.c **** 
 823:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 824:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 826:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 827:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 828:../Libraries/XMCLib/src/xmc_usbd.c **** }
 829:../Libraries/XMCLib/src/xmc_usbd.c **** 
 830:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 831:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 832:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 833:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 835:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 836:../Libraries/XMCLib/src/xmc_usbd.c **** {
 837:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 838:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 839:../Libraries/XMCLib/src/xmc_usbd.c **** 
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 841:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 842:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 843:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 844:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 845:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 846:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 854:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 856:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 857:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 858:../Libraries/XMCLib/src/xmc_usbd.c **** }
 859:../Libraries/XMCLib/src/xmc_usbd.c **** 
 860:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 861:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 862:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 863:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 866:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 867:../Libraries/XMCLib/src/xmc_usbd.c **** {
 868:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 869:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 870:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 877:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 880:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 882:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 883:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 889:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 890:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 892:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 893:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 896:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 898:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 901:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 903:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 906:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 909:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 910:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 912:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 913:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 916:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 917:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 920:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 921:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 924:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 925:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 927:../Libraries/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 928:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 929:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 931:../Libraries/XMCLib/src/xmc_usbd.c **** 
 932:../Libraries/XMCLib/src/xmc_usbd.c **** }
 933:../Libraries/XMCLib/src/xmc_usbd.c **** 
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 936:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 937:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 942:../Libraries/XMCLib/src/xmc_usbd.c **** {
 943:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 944:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 945:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 946:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 948:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 949:../Libraries/XMCLib/src/xmc_usbd.c **** }
 950:../Libraries/XMCLib/src/xmc_usbd.c **** 
 951:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 952:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 953:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 954:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 955:../Libraries/XMCLib/src/xmc_usbd.c **** {
 956:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 957:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 958:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 960:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 961:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 962:../Libraries/XMCLib/src/xmc_usbd.c **** }
 963:../Libraries/XMCLib/src/xmc_usbd.c **** 
 964:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 965:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 966:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 967:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 968:../Libraries/XMCLib/src/xmc_usbd.c **** {
 969:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 973:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 975:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 978:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 981:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 984:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 987:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 990:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 993:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 996:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 999:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
1000:../Libraries/XMCLib/src/xmc_usbd.c **** 		default:
1001:../Libraries/XMCLib/src/xmc_usbd.c **** 		break;
1002:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1003:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
1004:../Libraries/XMCLib/src/xmc_usbd.c **** }
1005:../Libraries/XMCLib/src/xmc_usbd.c **** 
1006:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1007:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1008:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1009:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1010:../Libraries/XMCLib/src/xmc_usbd.c **** {
1011:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
1012:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1013:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
1014:../Libraries/XMCLib/src/xmc_usbd.c **** }
1015:../Libraries/XMCLib/src/xmc_usbd.c **** 
1016:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1017:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1018:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1019:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1020:../Libraries/XMCLib/src/xmc_usbd.c **** {
1021:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1022:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1023:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
1024:../Libraries/XMCLib/src/xmc_usbd.c **** }
1025:../Libraries/XMCLib/src/xmc_usbd.c **** 
1026:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1027:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1028:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1029:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1030:../Libraries/XMCLib/src/xmc_usbd.c **** {
1031:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1032:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1033:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
1034:../Libraries/XMCLib/src/xmc_usbd.c **** }
1035:../Libraries/XMCLib/src/xmc_usbd.c **** 
1036:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1037:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1038:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1039:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1040:../Libraries/XMCLib/src/xmc_usbd.c **** {
1041:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1042:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
1043:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
1044:../Libraries/XMCLib/src/xmc_usbd.c **** }
1045:../Libraries/XMCLib/src/xmc_usbd.c **** 
1046:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1047:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1048:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1049:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1050:../Libraries/XMCLib/src/xmc_usbd.c **** {
1051:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1052:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
1053:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
1054:../Libraries/XMCLib/src/xmc_usbd.c **** }
1055:../Libraries/XMCLib/src/xmc_usbd.c **** 
1056:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1057:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1058:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1059:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1060:../Libraries/XMCLib/src/xmc_usbd.c **** {
 568              	 .loc 1 1060 0
 569              	 .cfi_startproc
 570              	 
 571              	 
 572              	 
 573              	.LVL56:
1061:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
1062:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
1063:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
1064:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
1073:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 574              	 .loc 1 1077 0
 575 0000 1F20     	 movs r0,#31
 576 0002 6FF34510 	 bfc r0,#5,#1
 577 0006 40F4E070 	 orr r0,r0,#448
1078:../Libraries/XMCLib/src/xmc_usbd.c **** }
 578              	 .loc 1 1078 0
 579 000a C0F30800 	 ubfx r0,r0,#0,#9
 580 000e 7047     	 bx lr
 581              	 .cfi_endproc
 582              	.LFE193:
 584              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 585              	 .align 2
 586              	 .global XMC_USBD_DeviceConnect
 587              	 .thumb
 588              	 .thumb_func
 590              	XMC_USBD_DeviceConnect:
 591              	.LFB196:
1079:../Libraries/XMCLib/src/xmc_usbd.c **** 
1080:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1081:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1082:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1083:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1084:../Libraries/XMCLib/src/xmc_usbd.c **** {
1085:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1086:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1087:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1092:../Libraries/XMCLib/src/xmc_usbd.c **** 
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1094:../Libraries/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1095:../Libraries/XMCLib/src/xmc_usbd.c ****   
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
1097:../Libraries/XMCLib/src/xmc_usbd.c ****   
1098:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
1099:../Libraries/XMCLib/src/xmc_usbd.c **** 
1100:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1102:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
1104:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1106:../Libraries/XMCLib/src/xmc_usbd.c **** 
1107:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
1120:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1123:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
1126:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1127:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
1129:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
1132:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1133:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1134:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1135:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1142:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1143:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1145:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1146:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1147:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
1150:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
1155:../Libraries/XMCLib/src/xmc_usbd.c **** 
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
1174:../Libraries/XMCLib/src/xmc_usbd.c ****  
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1177:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1189:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1195:../Libraries/XMCLib/src/xmc_usbd.c **** }
1196:../Libraries/XMCLib/src/xmc_usbd.c **** 
1197:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1198:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1199:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1200:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1201:../Libraries/XMCLib/src/xmc_usbd.c **** {
1202:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1203:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1204:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1210:../Libraries/XMCLib/src/xmc_usbd.c **** }
1211:../Libraries/XMCLib/src/xmc_usbd.c **** 
1212:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1213:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1214:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1215:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1216:../Libraries/XMCLib/src/xmc_usbd.c **** {
 592              	 .loc 1 1216 0
 593              	 .cfi_startproc
 594              	 
 595              	 
 596              	 
1217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1218:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 597              	 .loc 1 1219 0
 598 0000 044B     	 ldr r3,.L55
 599 0002 D3F8A421 	 ldr r2,[r3,#420]
 600 0006 5368     	 ldr r3,[r2,#4]
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 601              	 .loc 1 1220 0
 602 0008 6FF34103 	 bfc r3,#1,#1
 603              	.LVL57:
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 604              	 .loc 1 1221 0
 605 000c 5360     	 str r3,[r2,#4]
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1223:../Libraries/XMCLib/src/xmc_usbd.c **** }
 606              	 .loc 1 1223 0
 607 000e 0020     	 movs r0,#0
 608 0010 7047     	 bx lr
 609              	.L56:
 610 0012 00BF     	 .align 2
 611              	.L55:
 612 0014 00000000 	 .word xmc_device
 613              	 .cfi_endproc
 614              	.LFE196:
 616              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 617              	 .align 2
 618              	 .global XMC_USBD_DeviceDisconnect
 619              	 .thumb
 620              	 .thumb_func
 622              	XMC_USBD_DeviceDisconnect:
 623              	.LFB197:
1224:../Libraries/XMCLib/src/xmc_usbd.c **** 
1225:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1226:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1227:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1228:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1229:../Libraries/XMCLib/src/xmc_usbd.c **** {
 624              	 .loc 1 1229 0
 625              	 .cfi_startproc
 626              	 
 627              	 
 628              	 
1230:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1231:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 629              	 .loc 1 1231 0
 630 0000 044B     	 ldr r3,.L58
 631 0002 D3F8A421 	 ldr r2,[r3,#420]
 632 0006 5368     	 ldr r3,[r2,#4]
1232:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 633              	 .loc 1 1232 0
 634 0008 43F00203 	 orr r3,r3,#2
 635              	.LVL58:
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 636              	 .loc 1 1233 0
 637 000c 5360     	 str r3,[r2,#4]
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1235:../Libraries/XMCLib/src/xmc_usbd.c **** }
 638              	 .loc 1 1235 0
 639 000e 0020     	 movs r0,#0
 640 0010 7047     	 bx lr
 641              	.L59:
 642 0012 00BF     	 .align 2
 643              	.L58:
 644 0014 00000000 	 .word xmc_device
 645              	 .cfi_endproc
 646              	.LFE197:
 648              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 649              	 .align 2
 650              	 .global XMC_USBD_EndpointReadStart
 651              	 .thumb
 652              	 .thumb_func
 654              	XMC_USBD_EndpointReadStart:
 655              	.LFB199:
1236:../Libraries/XMCLib/src/xmc_usbd.c **** 
1237:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1238:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1239:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1240:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1241:../Libraries/XMCLib/src/xmc_usbd.c **** {
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
1243:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
1248:../Libraries/XMCLib/src/xmc_usbd.c **** }
1249:../Libraries/XMCLib/src/xmc_usbd.c **** 
1250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1251:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1252:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1253:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1254:../Libraries/XMCLib/src/xmc_usbd.c **** {
 656              	 .loc 1 1254 0
 657              	 .cfi_startproc
 658              	 
 659              	 
 660              	.LVL59:
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 661              	 .loc 1 1255 0
 662 0000 00F00F00 	 and r0,r0,#15
 663              	.LVL60:
1256:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1257:../Libraries/XMCLib/src/xmc_usbd.c **** 	
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 664              	 .loc 1 1258 0
 665 0004 3423     	 movs r3,#52
 666 0006 134A     	 ldr r2,.L66
 667 0008 03FB0023 	 mla r3,r3,r0,r2
 668              	.LVL61:
 669 000c 5B68     	 ldr r3,[r3,#4]
 670              	.LVL62:
 671 000e 13F0100F 	 tst r3,#16
 672 0012 1AD1     	 bne .L62
 673              	 .loc 1 1258 0 is_stmt 0 discriminator 1
 674 0014 3423     	 movs r3,#52
 675 0016 03FB0023 	 mla r3,r3,r0,r2
 676              	.LVL63:
 677 001a 1B79     	 ldrb r3,[r3,#4]
 678              	.LVL64:
 679 001c 13F0040F 	 tst r3,#4
 680 0020 15D0     	 beq .L63
1254:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 681              	 .loc 1 1254 0 is_stmt 1
 682 0022 10B5     	 push {r4,lr}
 683              	.LCFI9:
 684              	 .cfi_def_cfa_offset 8
 685              	 .cfi_offset 4,-8
 686              	 .cfi_offset 14,-4
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1260:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1263:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1264:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1265:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 687              	 .loc 1 1265 0
 688 0024 3422     	 movs r2,#52
 689 0026 0B4B     	 ldr r3,.L66
 690 0028 02FB0030 	 mla r0,r2,r0,r3
 691              	.LVL65:
 692 002c 4369     	 ldr r3,[r0,#20]
 693              	.LVL66:
 694 002e 9942     	 cmp r1,r3
 695 0030 28BF     	 it cs
 696 0032 1946     	 movcs r1,r3
 697              	.LVL67:
1266:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1270:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 698              	 .loc 1 1270 0
 699 0034 0163     	 str r1,[r0,#48]
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 700              	 .loc 1 1271 0
 701 0036 0024     	 movs r4,#0
 702 0038 C462     	 str r4,[r0,#44]
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 703              	 .loc 1 1272 0
 704 003a 8462     	 str r4,[r0,#40]
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 705              	 .loc 1 1273 0
 706 003c C368     	 ldr r3,[r0,#12]
 707              	.LVL68:
 708 003e 4362     	 str r3,[r0,#36]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 709              	 .loc 1 1274 0
 710 0040 0461     	 str r4,[r0,#16]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 711              	 .loc 1 1275 0
 712 0042 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 713              	.LVL69:
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
 714              	 .loc 1 1276 0
 715 0046 2046     	 mov r0,r4
 716 0048 10BD     	 pop {r4,pc}
 717              	.LVL70:
 718              	.L62:
 719              	.LCFI10:
 720              	 .cfi_def_cfa_offset 0
 721              	 .cfi_restore 4
 722              	 .cfi_restore 14
1260:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 723              	 .loc 1 1260 0
 724 004a 0120     	 movs r0,#1
 725              	.LVL71:
 726 004c 7047     	 bx lr
 727              	.LVL72:
 728              	.L63:
 729 004e 0120     	 movs r0,#1
 730              	.LVL73:
 731 0050 7047     	 bx lr
 732              	.L67:
 733 0052 00BF     	 .align 2
 734              	.L66:
 735 0054 00000000 	 .word xmc_device
 736              	 .cfi_endproc
 737              	.LFE199:
 739              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 740              	 .align 2
 741              	 .global XMC_USBD_DeviceSetAddress
 742              	 .thumb
 743              	 .thumb_func
 745              	XMC_USBD_DeviceSetAddress:
 746              	.LFB202:
1277:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1278:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1279:../Libraries/XMCLib/src/xmc_usbd.c **** }
1280:../Libraries/XMCLib/src/xmc_usbd.c **** 
1281:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1282:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1283:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1284:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1285:../Libraries/XMCLib/src/xmc_usbd.c **** {
1286:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
1288:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1289:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1295:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1298:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1299:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
1302:../Libraries/XMCLib/src/xmc_usbd.c **** }
1303:../Libraries/XMCLib/src/xmc_usbd.c **** 
1304:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1305:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1306:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1307:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1308:../Libraries/XMCLib/src/xmc_usbd.c **** {
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
1310:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1313:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
1316:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1317:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
1322:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1323:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
1327:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
1336:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1337:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1338:../Libraries/XMCLib/src/xmc_usbd.c **** }
1339:../Libraries/XMCLib/src/xmc_usbd.c **** 
1340:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1341:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1342:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1343:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1344:../Libraries/XMCLib/src/xmc_usbd.c **** {
 747              	 .loc 1 1344 0
 748              	 .cfi_startproc
 749              	 
 750              	 
 751              	 
 752              	.LVL74:
1345:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1346:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 753              	 .loc 1 1346 0
 754 0000 044B     	 ldr r3,.L70
 755 0002 D3F8A431 	 ldr r3,[r3,#420]
 756 0006 1A68     	 ldr r2,[r3]
 757              	.LVL75:
1347:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 758              	 .loc 1 1347 0
 759 0008 11B9     	 cbnz r1,.L69
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1349:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 760              	 .loc 1 1349 0
 761 000a 60F30A12 	 bfi r2,r0,#4,#7
1350:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 762              	 .loc 1 1350 0
 763 000e 1A60     	 str r2,[r3]
 764              	.L69:
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1352:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
1353:../Libraries/XMCLib/src/xmc_usbd.c **** }
 765              	 .loc 1 1353 0
 766 0010 0020     	 movs r0,#0
 767              	.LVL76:
 768 0012 7047     	 bx lr
 769              	.L71:
 770              	 .align 2
 771              	.L70:
 772 0014 00000000 	 .word xmc_device
 773              	 .cfi_endproc
 774              	.LFE202:
 776              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 777              	 .align 2
 778              	 .global XMC_USBD_EndpointStall
 779              	 .thumb
 780              	 .thumb_func
 782              	XMC_USBD_EndpointStall:
 783              	.LFB203:
1354:../Libraries/XMCLib/src/xmc_usbd.c **** 
1355:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1356:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1357:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1358:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 784              	 .loc 1 1359 0
 785              	 .cfi_startproc
 786              	 
 787              	 
 788              	 
 789              	.LVL77:
1360:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1361:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 790              	 .loc 1 1361 0
 791 0000 00F00F02 	 and r2,r0,#15
 792              	.LVL78:
1362:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 793              	 .loc 1 1362 0
 794 0004 49B3     	 cbz r1,.L73
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 795              	 .loc 1 1364 0
 796 0006 10F0800F 	 tst r0,#128
 797 000a 0ED0     	 beq .L74
1365:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1366:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 798              	 .loc 1 1367 0
 799 000c 2A49     	 ldr r1,.L79
 800              	.LVL79:
 801 000e 3423     	 movs r3,#52
 802 0010 03FB02F3 	 mul r3,r3,r2
 803 0014 CB5C     	 ldrb r3,[r1,r3]
 804 0016 03F00F03 	 and r3,r3,#15
 805 001a 6A33     	 adds r3,r3,#106
 806 001c 51F82310 	 ldr r1,[r1,r3,lsl#2]
 807 0020 0B68     	 ldr r3,[r1]
1368:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 808              	 .loc 1 1368 0
 809 0022 43F40013 	 orr r3,r3,#2097152
 810              	.LVL80:
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 811              	 .loc 1 1369 0
 812 0026 0B60     	 str r3,[r1]
 813 0028 0EE0     	 b .L75
 814              	.LVL81:
 815              	.L74:
1370:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1371:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1372:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1373:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1374:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 816              	 .loc 1 1374 0
 817 002a 234B     	 ldr r3,.L79
 818 002c 3421     	 movs r1,#52
 819              	.LVL82:
 820 002e 01FB02F1 	 mul r1,r1,r2
 821 0032 595C     	 ldrb r1,[r3,r1]
 822 0034 01F00F01 	 and r1,r1,#15
 823 0038 03EB8103 	 add r3,r3,r1,lsl#2
 824 003c D3F8C411 	 ldr r1,[r3,#452]
 825 0040 0B68     	 ldr r3,[r1]
1375:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 826              	 .loc 1 1375 0
 827 0042 43F40013 	 orr r3,r3,#2097152
 828              	.LVL83:
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 829              	 .loc 1 1376 0
 830 0046 0B60     	 str r3,[r1]
 831              	.L75:
1377:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1378:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 832              	 .loc 1 1378 0
 833 0048 3423     	 movs r3,#52
 834              	.LVL84:
 835 004a 1B49     	 ldr r1,.L79
 836 004c 03FB0212 	 mla r2,r3,r2,r1
 837              	.LVL85:
 838 0050 1379     	 ldrb r3,[r2,#4]
 839 0052 43F02003 	 orr r3,r3,#32
 840 0056 1371     	 strb r3,[r2,#4]
 841 0058 2CE0     	 b .L76
 842              	.LVL86:
 843              	.L73:
1379:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1380:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1381:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1382:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 844              	 .loc 1 1383 0
 845 005a 10F0800F 	 tst r0,#128
 846 005e 10D0     	 beq .L77
1384:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 847              	 .loc 1 1385 0
 848 0060 1549     	 ldr r1,.L79
 849              	.LVL87:
 850 0062 3423     	 movs r3,#52
 851 0064 03FB02F3 	 mul r3,r3,r2
 852 0068 CB5C     	 ldrb r3,[r1,r3]
 853 006a 03F00F03 	 and r3,r3,#15
 854 006e 6A33     	 adds r3,r3,#106
 855 0070 51F82310 	 ldr r1,[r1,r3,lsl#2]
 856 0074 0B68     	 ldr r3,[r1]
1386:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 857              	 .loc 1 1386 0
 858 0076 23F08153 	 bic r3,r3,#270532608
 859              	.LVL88:
1387:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 860              	 .loc 1 1387 0
 861 007a 43F08053 	 orr r3,r3,#268435456
 862              	.LVL89:
1388:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 863              	 .loc 1 1388 0
 864 007e 0B60     	 str r3,[r1]
 865 0080 10E0     	 b .L78
 866              	.LVL90:
 867              	.L77:
1389:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1390:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1391:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 868              	 .loc 1 1392 0
 869 0082 0D4B     	 ldr r3,.L79
 870 0084 3421     	 movs r1,#52
 871              	.LVL91:
 872 0086 01FB02F1 	 mul r1,r1,r2
 873 008a 595C     	 ldrb r1,[r3,r1]
 874 008c 01F00F01 	 and r1,r1,#15
 875 0090 03EB8103 	 add r3,r3,r1,lsl#2
 876 0094 D3F8C411 	 ldr r1,[r3,#452]
 877 0098 0B68     	 ldr r3,[r1]
1393:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 878              	 .loc 1 1393 0
 879 009a 23F08153 	 bic r3,r3,#270532608
 880              	.LVL92:
1394:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 881              	 .loc 1 1394 0
 882 009e 43F08053 	 orr r3,r3,#268435456
 883              	.LVL93:
1395:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 884              	 .loc 1 1395 0
 885 00a2 0B60     	 str r3,[r1]
 886              	.L78:
1396:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
 887              	 .loc 1 1397 0
 888 00a4 3421     	 movs r1,#52
 889 00a6 044B     	 ldr r3,.L79
 890              	.LVL94:
 891 00a8 01FB0232 	 mla r2,r1,r2,r3
 892              	.LVL95:
 893 00ac 1379     	 ldrb r3,[r2,#4]
 894 00ae 6FF34513 	 bfc r3,#5,#1
 895 00b2 1371     	 strb r3,[r2,#4]
 896              	.L76:
1398:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1399:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
1400:../Libraries/XMCLib/src/xmc_usbd.c **** }
 897              	 .loc 1 1400 0
 898 00b4 0020     	 movs r0,#0
 899              	.LVL96:
 900 00b6 7047     	 bx lr
 901              	.L80:
 902              	 .align 2
 903              	.L79:
 904 00b8 00000000 	 .word xmc_device
 905              	 .cfi_endproc
 906              	.LFE203:
 908              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 909              	 .align 2
 910              	 .global XMC_USBD_EndpointAbort
 911              	 .thumb
 912              	 .thumb_func
 914              	XMC_USBD_EndpointAbort:
 915              	.LFB204:
1401:../Libraries/XMCLib/src/xmc_usbd.c **** 
1402:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1403:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1404:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1405:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 916              	 .loc 1 1405 0
 917              	 .cfi_startproc
 918              	 
 919              	 
 920              	 
 921              	.LVL97:
 922 0000 10B4     	 push {r4}
 923              	.LCFI11:
 924              	 .cfi_def_cfa_offset 4
 925              	 .cfi_offset 4,-4
1406:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 926              	 .loc 1 1406 0
 927 0002 00F00F00 	 and r0,r0,#15
 928              	.LVL98:
1407:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 929              	 .loc 1 1407 0
 930 0006 3423     	 movs r3,#52
 931 0008 03FB00F3 	 mul r3,r3,r0
 932 000c 154A     	 ldr r2,.L85
 933 000e D35C     	 ldrb r3,[r2,r3]
 934 0010 13F0800F 	 tst r3,#128
 935 0014 0CD0     	 beq .L82
1408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 936              	 .loc 1 1409 0
 937 0016 1146     	 mov r1,r2
 938 0018 3423     	 movs r3,#52
 939 001a 03FB00F3 	 mul r3,r3,r0
 940 001e D418     	 adds r4,r2,r3
 941              	.LVL99:
 942 0020 6268     	 ldr r2,[r4,#4]
 943 0022 22F00802 	 bic r2,r2,#8
 944 0026 6260     	 str r2,[r4,#4]
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 945              	 .loc 1 1411 0
 946 0028 CB5C     	 ldrb r3,[r1,r3]
 947 002a 13F0800F 	 tst r3,#128
 948 002e 07D1     	 bne .L83
 949              	.LVL100:
 950              	.L82:
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 951              	 .loc 1 1413 0
 952 0030 3423     	 movs r3,#52
 953 0032 0C4A     	 ldr r2,.L85
 954 0034 03FB0023 	 mla r3,r3,r0,r2
 955 0038 5A68     	 ldr r2,[r3,#4]
 956 003a 22F01002 	 bic r2,r2,#16
 957 003e 5A60     	 str r2,[r3,#4]
 958              	.L83:
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 959              	 .loc 1 1415 0
 960 0040 3422     	 movs r2,#52
 961 0042 084B     	 ldr r3,.L85
 962 0044 02FB0033 	 mla r3,r2,r0,r3
 963 0048 1A79     	 ldrb r2,[r3,#4]
 964 004a 6FF34512 	 bfc r2,#5,#1
 965 004e 1A71     	 strb r2,[r3,#4]
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 966              	 .loc 1 1416 0
 967 0050 0020     	 movs r0,#0
 968              	.LVL101:
 969 0052 1861     	 str r0,[r3,#16]
1417:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 970              	 .loc 1 1417 0
 971 0054 9861     	 str r0,[r3,#24]
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 972              	 .loc 1 1418 0
 973 0056 9862     	 str r0,[r3,#40]
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 974              	 .loc 1 1419 0
 975 0058 D862     	 str r0,[r3,#44]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 976              	 .loc 1 1420 0
 977 005a 1863     	 str r0,[r3,#48]
1421:../Libraries/XMCLib/src/xmc_usbd.c **** 
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1423:../Libraries/XMCLib/src/xmc_usbd.c **** }
 978              	 .loc 1 1423 0
 979 005c 5DF8044B 	 ldr r4,[sp],#4
 980              	.LCFI12:
 981              	 .cfi_restore 4
 982              	 .cfi_def_cfa_offset 0
 983 0060 7047     	 bx lr
 984              	.L86:
 985 0062 00BF     	 .align 2
 986              	.L85:
 987 0064 00000000 	 .word xmc_device
 988              	 .cfi_endproc
 989              	.LFE204:
 991              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 992              	 .align 2
 993              	 .global XMC_USBD_EndpointUnconfigure
 994              	 .thumb
 995              	 .thumb_func
 997              	XMC_USBD_EndpointUnconfigure:
 998              	.LFB206:
1424:../Libraries/XMCLib/src/xmc_usbd.c **** 
1425:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1426:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1427:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1428:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1429:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1430:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1431:../Libraries/XMCLib/src/xmc_usbd.c **** {
1432:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1433:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1443:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1458:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1459:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
1460:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1469:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1472:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1475:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1478:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1481:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1482:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1483:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1484:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1485:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1486:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
1488:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1489:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
1491:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
1493:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
1497:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
1498:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
1500:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
1504:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1507:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
1510:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1513:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1516:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1519:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1522:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1525:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1526:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1527:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1528:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1529:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1530:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
1532:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1533:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
1535:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
1538:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
1539:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
1541:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1542:../Libraries/XMCLib/src/xmc_usbd.c **** }
1543:../Libraries/XMCLib/src/xmc_usbd.c **** 
1544:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1545:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1546:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1547:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** {
 999              	 .loc 1 1548 0
 1000              	 .cfi_startproc
 1001              	 
 1002              	 
 1003              	.LVL102:
 1004 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1005              	.LCFI13:
 1006              	 .cfi_def_cfa_offset 20
 1007              	 .cfi_offset 4,-20
 1008              	 .cfi_offset 5,-16
 1009              	 .cfi_offset 6,-12
 1010              	 .cfi_offset 7,-8
 1011              	 .cfi_offset 14,-4
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 1012              	 .loc 1 1549 0
 1013 0002 00F00F00 	 and r0,r0,#15
 1014              	.LVL103:
1550:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1551:../Libraries/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1552:../Libraries/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1553:../Libraries/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
 1015              	 .loc 1 1554 0
 1016 0006 0025     	 movs r5,#0
 1017              	.LVL104:
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 1018              	 .loc 1 1555 0
 1019 0008 414A     	 ldr r2,.L94
 1020 000a D2F8A431 	 ldr r3,[r2,#420]
 1021 000e DE69     	 ldr r6,[r3,#28]
 1022              	.LVL105:
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 1023              	 .loc 1 1556 0
 1024 0010 3423     	 movs r3,#52
 1025 0012 03FB00F3 	 mul r3,r3,r0
 1026 0016 D118     	 adds r1,r2,r3
 1027              	.LVL106:
 1028 0018 D35C     	 ldrb r3,[r2,r3]
 1029 001a 03F00F03 	 and r3,r3,#15
 1030              	.LVL107:
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 1031              	 .loc 1 1558 0
 1032 001e 0A79     	 ldrb r2,[r1,#4]
 1033 0020 12F0040F 	 tst r2,#4
 1034 0024 71D0     	 beq .L92
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 1035              	 .loc 1 1556 0
 1036 0026 0127     	 movs r7,#1
 1037 0028 9F40     	 lsls r7,r7,r3
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1560:../Libraries/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 1038              	 .loc 1 1565 0
 1039 002a 6FF3CF35 	 bfc r5,#15,#1
 1040              	.LVL108:
1566:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 1041              	 .loc 1 1567 0
 1042 002e 45F09045 	 orr r5,r5,#1207959552
 1043              	.LVL109:
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 1044              	 .loc 1 1568 0
 1045 0032 6FF35555 	 bfc r5,#21,#1
 1046              	.LVL110:
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 1047              	 .loc 1 1569 0
 1048 0036 DFF8D8E0 	 ldr lr,.L94
 1049 003a 3421     	 movs r1,#52
 1050              	.LVL111:
 1051 003c 01FB00F1 	 mul r1,r1,r0
 1052 0040 0EEB0102 	 add r2,lr,r1
 1053              	.LVL112:
 1054 0044 1479     	 ldrb r4,[r2,#4]
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 1055              	 .loc 1 1570 0
 1056 0046 04F0FB04 	 and r4,r4,#251
 1057 004a 6FF34514 	 bfc r4,#5,#1
 1058 004e 1471     	 strb r4,[r2,#4]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 1059              	 .loc 1 1571 0
 1060 0050 5468     	 ldr r4,[r2,#4]
 1061 0052 24F01004 	 bic r4,r4,#16
 1062 0056 5460     	 str r4,[r2,#4]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 1063              	 .loc 1 1572 0
 1064 0058 5468     	 ldr r4,[r2,#4]
 1065 005a 24F00804 	 bic r4,r4,#8
 1066 005e 5460     	 str r4,[r2,#4]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 1067              	 .loc 1 1574 0
 1068 0060 1EF80120 	 ldrb r2,[lr,r1]
 1069              	.LVL113:
 1070 0064 12F0800F 	 tst r2,#128
 1071 0068 06D1     	 bne .L89
 1072              	 .loc 1 1574 0 is_stmt 0 discriminator 1
 1073 006a 3422     	 movs r2,#52
 1074 006c 02FB00E2 	 mla r2,r2,r0,lr
 1075              	.LVL114:
 1076 0070 1279     	 ldrb r2,[r2,#4]
 1077              	.LVL115:
 1078 0072 12F0030F 	 tst r2,#3
 1079 0076 16D1     	 bne .L90
 1080              	.L89:
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1576:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 1081              	 .loc 1 1577 0 is_stmt 1
 1082 0078 254A     	 ldr r2,.L94
 1083 007a 6A33     	 adds r3,r3,#106
 1084 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1085 0080 1D60     	 str r5,[r3]
 1086              	.LVL116:
1578:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1579:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 1087              	 .loc 1 1579 0
 1088 0082 26EA0703 	 bic r3,r6,r7
 1089 0086 63F30F06 	 bfi r6,r3,#0,#16
1580:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 1090              	 .loc 1 1581 0
 1091 008a 3423     	 movs r3,#52
 1092 008c 03FB00F3 	 mul r3,r3,r0
 1093 0090 D35C     	 ldrb r3,[r2,r3]
 1094 0092 13F0800F 	 tst r3,#128
 1095 0096 06D0     	 beq .L90
 1096              	 .loc 1 1581 0 is_stmt 0 discriminator 1
 1097 0098 3423     	 movs r3,#52
 1098 009a 03FB0023 	 mla r3,r3,r0,r2
 1099 009e 1B79     	 ldrb r3,[r3,#4]
 1100 00a0 13F0030F 	 tst r3,#3
 1101 00a4 1DD1     	 bne .L91
 1102              	.L90:
1582:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 1103              	 .loc 1 1583 0 is_stmt 1
 1104 00a6 1A4B     	 ldr r3,.L94
 1105 00a8 3422     	 movs r2,#52
 1106 00aa 02FB00F2 	 mul r2,r2,r0
 1107 00ae 9A5C     	 ldrb r2,[r3,r2]
 1108 00b0 02F00F02 	 and r2,r2,#15
 1109 00b4 03EB8203 	 add r3,r3,r2,lsl#2
 1110 00b8 D3F8C431 	 ldr r3,[r3,#452]
 1111 00bc 1D60     	 str r5,[r3]
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 1112              	 .loc 1 1584 0
 1113 00be C6F30F43 	 ubfx r3,r6,#16,#16
 1114 00c2 23EA0703 	 bic r3,r3,r7
 1115 00c6 63F31F46 	 bfi r6,r3,#16,#16
1585:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1116              	 .loc 1 1585 0
 1117 00ca 124B     	 ldr r3,.L94+4
 1118 00cc 1B68     	 ldr r3,[r3]
 1119 00ce 5B7B     	 ldrb r3,[r3,#13]
 1120 00d0 012B     	 cmp r3,#1
 1121 00d2 06D1     	 bne .L91
1586:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 1122              	 .loc 1 1587 0
 1123 00d4 0E4B     	 ldr r3,.L94
 1124 00d6 D3F8A421 	 ldr r2,[r3,#420]
 1125 00da 536B     	 ldr r3,[r2,#52]
 1126 00dc 23EA0707 	 bic r7,r3,r7
 1127 00e0 5763     	 str r7,[r2,#52]
 1128              	.L91:
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1589:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 1129              	 .loc 1 1590 0
 1130 00e2 0B4B     	 ldr r3,.L94
 1131 00e4 D3F8A421 	 ldr r2,[r3,#420]
 1132 00e8 D661     	 str r6,[r2,#28]
 1133              	.LVL117:
1591:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 1134              	 .loc 1 1591 0
 1135 00ea 3422     	 movs r2,#52
 1136 00ec 02FB0030 	 mla r0,r2,r0,r3
 1137              	.LVL118:
 1138 00f0 8188     	 ldrh r1,[r0,#4]
 1139              	.LBB5:
 1140              	.LBB6:
 384:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1141              	 .loc 1 384 0
 1142 00f2 C1F38311 	 ubfx r1,r1,#6,#4
 1143 00f6 0122     	 movs r2,#1
 1144 00f8 8A40     	 lsls r2,r2,r1
 1145 00fa B3F8FC11 	 ldrh r1,[r3,#508]
 1146 00fe 21EA0202 	 bic r2,r1,r2
 1147 0102 A3F8FC21 	 strh r2,[r3,#508]
 1148              	.LBE6:
 1149              	.LBE5:
1592:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 1150              	 .loc 1 1592 0
 1151 0106 0020     	 movs r0,#0
 1152 0108 F0BD     	 pop {r4,r5,r6,r7,pc}
 1153              	.LVL119:
 1154              	.L92:
1560:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1155              	 .loc 1 1560 0
 1156 010a 0120     	 movs r0,#1
 1157              	.LVL120:
1593:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1158              	 .loc 1 1595 0
 1159 010c F0BD     	 pop {r4,r5,r6,r7,pc}
 1160              	.LVL121:
 1161              	.L95:
 1162 010e 00BF     	 .align 2
 1163              	.L94:
 1164 0110 00000000 	 .word xmc_device
 1165 0114 00000000 	 .word usbd_init
 1166              	 .cfi_endproc
 1167              	.LFE206:
 1169              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 1170              	 .align 2
 1171              	 .global XMC_USBD_GetFrameNumber
 1172              	 .thumb
 1173              	 .thumb_func
 1175              	XMC_USBD_GetFrameNumber:
 1176              	.LFB207:
1596:../Libraries/XMCLib/src/xmc_usbd.c **** 
1597:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1598:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1599:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1600:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1177              	 .loc 1 1601 0
 1178              	 .cfi_startproc
 1179              	 
 1180              	 
 1181              	 
1602:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1603:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1604:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 1182              	 .loc 1 1604 0
 1183 0000 034B     	 ldr r3,.L97
 1184 0002 D3F8A431 	 ldr r3,[r3,#420]
 1185 0006 9868     	 ldr r0,[r3,#8]
 1186              	.LVL122:
1605:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1607:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1187              	 .loc 1 1607 0
 1188 0008 C0F30D20 	 ubfx r0,r0,#8,#14
 1189              	.LVL123:
 1190 000c 7047     	 bx lr
 1191              	.L98:
 1192 000e 00BF     	 .align 2
 1193              	.L97:
 1194 0010 00000000 	 .word xmc_device
 1195              	 .cfi_endproc
 1196              	.LFE207:
 1198              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 1199              	 .align 2
 1200              	 .global XMC_USBD_IsEnumDone
 1201              	 .thumb
 1202              	 .thumb_func
 1204              	XMC_USBD_IsEnumDone:
 1205              	.LFB208:
1608:../Libraries/XMCLib/src/xmc_usbd.c **** 
1609:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1610:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1611:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1612:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1613:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1614:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1615:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1206              	 .loc 1 1615 0
 1207              	 .cfi_startproc
 1208              	 
 1209              	 
 1210              	 
1616:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 1211              	 .loc 1 1616 0
 1212 0000 044B     	 ldr r3,.L100
 1213 0002 93F8FE01 	 ldrb r0,[r3,#510]
 1214 0006 00F00500 	 and r0,r0,#5
1617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1215              	 .loc 1 1617 0
 1216 000a 0528     	 cmp r0,#5
 1217 000c 14BF     	 ite ne
 1218 000e 0020     	 movne r0,#0
 1219 0010 0120     	 moveq r0,#1
 1220 0012 7047     	 bx lr
 1221              	.L101:
 1222              	 .align 2
 1223              	.L100:
 1224 0014 00000000 	 .word xmc_device
 1225              	 .cfi_endproc
 1226              	.LFE208:
 1228              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 1229              	 .align 2
 1230              	 .global XMC_USBD_Uninitialize
 1231              	 .thumb
 1232              	 .thumb_func
 1234              	XMC_USBD_Uninitialize:
 1235              	.LFB195:
1201:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
 1236              	 .loc 1 1201 0
 1237              	 .cfi_startproc
 1238              	 
 1239              	 
 1240 0000 08B5     	 push {r3,lr}
 1241              	.LCFI14:
 1242              	 .cfi_def_cfa_offset 8
 1243              	 .cfi_offset 3,-8
 1244              	 .cfi_offset 14,-4
1204:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 1245              	 .loc 1 1204 0
 1246 0002 0748     	 ldr r0,.L104
 1247 0004 D0F8A421 	 ldr r2,[r0,#420]
 1248 0008 5368     	 ldr r3,[r2,#4]
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1249              	 .loc 1 1205 0
 1250 000a 43F00203 	 orr r3,r3,#2
 1251              	.LVL124:
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
 1252              	 .loc 1 1206 0
 1253 000e 5360     	 str r3,[r2,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1254              	 .loc 1 1208 0
 1255 0010 0021     	 movs r1,#0
 1256 0012 4FF40272 	 mov r2,#520
 1257 0016 FFF7FEFF 	 bl memset
 1258              	.LVL125:
1210:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1259              	 .loc 1 1210 0
 1260 001a 0020     	 movs r0,#0
 1261 001c 08BD     	 pop {r3,pc}
 1262              	.L105:
 1263 001e 00BF     	 .align 2
 1264              	.L104:
 1265 0020 00000000 	 .word xmc_device
 1266              	 .cfi_endproc
 1267              	.LFE195:
 1269              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 1270              	 .align 2
 1271              	 .global XMC_USBD_EndpointConfigure
 1272              	 .thumb
 1273              	 .thumb_func
 1275              	XMC_USBD_EndpointConfigure:
 1276              	.LFB205:
1431:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 1277              	 .loc 1 1431 0
 1278              	 .cfi_startproc
 1279              	 
 1280              	 
 1281              	.LVL126:
 1282 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1283              	.LCFI15:
 1284              	 .cfi_def_cfa_offset 24
 1285              	 .cfi_offset 4,-24
 1286              	 .cfi_offset 5,-20
 1287              	 .cfi_offset 6,-16
 1288              	 .cfi_offset 7,-12
 1289              	 .cfi_offset 8,-8
 1290              	 .cfi_offset 14,-4
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 1291              	 .loc 1 1434 0
 1292 0004 DFF890C2 	 ldr ip,.L143
 1293 0008 DCF8A431 	 ldr r3,[ip,#420]
 1294 000c DF69     	 ldr r7,[r3,#28]
 1295              	.LVL127:
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 1296              	 .loc 1 1435 0
 1297 000e 00F00F06 	 and r6,r0,#15
 1298              	.LVL128:
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
 1299              	 .loc 1 1436 0
 1300 0012 4FF0340E 	 mov lr,#52
 1301 0016 0EFB06FE 	 mul lr,lr,r6
 1302 001a 0EEB0C05 	 add r5,lr,ip
 1303              	.LVL129:
 1304 001e 0024     	 movs r4,#0
 1305 0020 4EF80C40 	 str r4,[lr,ip]
 1306 0024 6C60     	 str r4,[r5,#4]
 1307 0026 05F10803 	 add r3,r5,#8
 1308 002a 43F8044B 	 str r4,[r3],#4
 1309 002e 43F8044B 	 str r4,[r3],#4
 1310 0032 43F8044B 	 str r4,[r3],#4
 1311 0036 43F8044B 	 str r4,[r3],#4
 1312 003a 43F8044B 	 str r4,[r3],#4
 1313 003e 43F8044B 	 str r4,[r3],#4
 1314 0042 43F8044B 	 str r4,[r3],#4
 1315 0046 43F8044B 	 str r4,[r3],#4
 1316 004a 43F8044B 	 str r4,[r3],#4
 1317 004e 43F8044B 	 str r4,[r3],#4
 1318 0052 1C60     	 str r4,[r3]
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 1319              	 .loc 1 1438 0
 1320 0054 0EF80C00 	 strb r0,[lr,ip]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 1321              	 .loc 1 1439 0
 1322 0058 0423     	 movs r3,#4
 1323 005a 2B71     	 strb r3,[r5,#4]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 1324              	 .loc 1 1440 0
 1325 005c 6B68     	 ldr r3,[r5,#4]
 1326 005e 62F3D123 	 bfi r3,r2,#11,#7
 1327 0062 6B60     	 str r3,[r5,#4]
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1328              	 .loc 1 1441 0
 1329 0064 30B1     	 cbz r0,.L107
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1330              	 .loc 1 1443 0
 1331 0066 A868     	 ldr r0,[r5,#8]
 1332              	.LVL130:
 1333 0068 4FF6C074 	 movw r4,#65472
 1334 006c 64F31200 	 bfi r0,r4,#0,#19
 1335 0070 A860     	 str r0,[r5,#8]
 1336 0072 08E0     	 b .L108
 1337              	.LVL131:
 1338              	.L107:
1447:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1339              	 .loc 1 1447 0
 1340 0074 3423     	 movs r3,#52
 1341 0076 8848     	 ldr r0,.L143
 1342              	.LVL132:
 1343 0078 03FB0603 	 mla r3,r3,r6,r0
 1344 007c 9868     	 ldr r0,[r3,#8]
 1345 007e 4024     	 movs r4,#64
 1346 0080 64F31200 	 bfi r0,r4,#0,#19
 1347 0084 9860     	 str r0,[r3,#8]
 1348              	.LVL133:
 1349              	.L108:
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 1350              	 .loc 1 1450 0
 1351 0086 DFF810C2 	 ldr ip,.L143
 1352 008a 3423     	 movs r3,#52
 1353 008c 03FB06F3 	 mul r3,r3,r6
 1354 0090 0CEB0300 	 add r0,ip,r3
 1355 0094 1CF80340 	 ldrb r4,[ip,r3]
 1356 0098 04F00F04 	 and r4,r4,#15
 1357 009c DFF804E2 	 ldr lr,.L143+12
 1358 00a0 2502     	 lsls r5,r4,#8
 1359              	.LVL134:
 1360 00a2 0EEB0508 	 add r8,lr,r5
 1361 00a6 C0F81C80 	 str r8,[r0,#28]
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
 1362              	 .loc 1 1451 0
 1363 00aa 0EF5E06E 	 add lr,lr,#1792
 1364 00ae 7544     	 add r5,r5,lr
 1365 00b0 C560     	 str r5,[r0,#12]
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 1366              	 .loc 1 1453 0
 1367 00b2 7A4D     	 ldr r5,.L143+4
 1368 00b4 55F82450 	 ldr r5,[r5,r4,lsl#2]
 1369 00b8 0562     	 str r5,[r0,#32]
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
 1370              	 .loc 1 1454 0
 1371 00ba 794D     	 ldr r5,.L143+8
 1372 00bc 55F82450 	 ldr r5,[r5,r4,lsl#2]
 1373 00c0 4561     	 str r5,[r0,#20]
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1374              	 .loc 1 1456 0
 1375 00c2 1CF80330 	 ldrb r3,[ip,r3]
 1376 00c6 13F0800F 	 tst r3,#128
 1377 00ca 03D1     	 bne .L109
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1378              	 .loc 1 1456 0 is_stmt 0 discriminator 1
 1379 00cc 0029     	 cmp r1,#0
 1380 00ce 00F0AF80 	 beq .L110
 1381 00d2 C9E0     	 b .L140
 1382              	.L109:
 1383              	.LBB11:
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1384              	 .loc 1 1459 0 is_stmt 1
 1385 00d4 04F16A03 	 add r3,r4,#106
 1386 00d8 6F48     	 ldr r0,.L143
 1387 00da 50F82330 	 ldr r3,[r0,r3,lsl#2]
 1388 00de 1D68     	 ldr r5,[r3]
 1389              	.LVL135:
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1390              	 .loc 1 1461 0
 1391 00e0 45F40045 	 orr r5,r5,#32768
 1392              	.LVL136:
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
 1393              	 .loc 1 1463 0
 1394 00e4 61F39345 	 bfi r5,r1,#18,#2
 1395              	.LVL137:
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1396              	 .loc 1 1465 0
 1397 00e8 C1B9     	 cbnz r1,.L112
 1398              	.L134:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1399              	 .loc 1 1467 0
 1400 00ea 102A     	 cmp r2,#16
 1401 00ec 0ED0     	 beq .L114
 1402 00ee 02D8     	 bhi .L115
 1403 00f0 082A     	 cmp r2,#8
 1404 00f2 0FD0     	 beq .L116
 1405 00f4 14E0     	 b .L113
 1406              	.L115:
 1407 00f6 202A     	 cmp r2,#32
 1408 00f8 04D0     	 beq .L117
 1409 00fa 402A     	 cmp r2,#64
 1410 00fc 10D1     	 bne .L113
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1411              	 .loc 1 1470 0
 1412 00fe 6FF30A05 	 bfc r5,#0,#11
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 1413              	 .loc 1 1471 0
 1414 0102 0DE0     	 b .L113
 1415              	.L117:
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1416              	 .loc 1 1473 0
 1417 0104 0123     	 movs r3,#1
 1418 0106 63F30A05 	 bfi r5,r3,#0,#11
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 1419              	 .loc 1 1474 0
 1420 010a 09E0     	 b .L113
 1421              	.L114:
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1422              	 .loc 1 1476 0
 1423 010c 0223     	 movs r3,#2
 1424 010e 63F30A05 	 bfi r5,r3,#0,#11
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 1425              	 .loc 1 1477 0
 1426 0112 05E0     	 b .L113
 1427              	.L116:
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1428              	 .loc 1 1479 0
 1429 0114 0323     	 movs r3,#3
 1430 0116 63F30A05 	 bfi r5,r3,#0,#11
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 1431              	 .loc 1 1480 0
 1432 011a 01E0     	 b .L113
 1433              	.L112:
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 1434              	 .loc 1 1487 0
 1435 011c 62F30A05 	 bfi r5,r2,#0,#11
 1436              	.L113:
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
 1437              	 .loc 1 1490 0 discriminator 2
 1438 0120 45F08055 	 orr r5,r5,#268435456
 1439              	.LVL138:
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
 1440              	 .loc 1 1492 0 discriminator 2
 1441 0124 6FF35555 	 bfc r5,#21,#1
 1442              	.LVL139:
 1443              	.LBB12:
 1444              	.LBB13:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1445              	 .loc 1 363 0 discriminator 2
 1446 0128 5B4B     	 ldr r3,.L143
 1447 012a B3F8FCE1 	 ldrh lr,[r3,#508]
 1448 012e 1EF0010F 	 tst lr,#1
 1449 0132 09D1     	 bne .L137
 361:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 1450              	 .loc 1 361 0
 1451 0134 0023     	 movs r3,#0
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 1452              	 .loc 1 360 0
 1453 0136 0120     	 movs r0,#1
 1454 0138 0FE0     	 b .L135
 1455              	.LVL140:
 1456              	.L122:
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1457              	 .loc 1 365 0
 1458 013a 4000     	 lsls r0,r0,#1
 1459              	.LVL141:
 1460 013c 80B2     	 uxth r0,r0
 1461              	.LVL142:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1462              	 .loc 1 366 0
 1463 013e 0133     	 adds r3,r3,#1
 1464              	.LVL143:
 1465 0140 DBB2     	 uxtb r3,r3
 1466              	.LVL144:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1467              	 .loc 1 363 0
 1468 0142 072B     	 cmp r3,#7
 1469 0144 02D1     	 bne .L119
 1470 0146 05E0     	 b .L121
 1471              	.LVL145:
 1472              	.L137:
 1473 0148 0123     	 movs r3,#1
 1474 014a 0220     	 movs r0,#2
 1475              	.LVL146:
 1476              	.L119:
 1477 014c 10EA0E0F 	 tst r0,lr
 1478 0150 F3D1     	 bne .L122
 1479 0152 02E0     	 b .L135
 1480              	.L121:
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1481              	 .loc 1 368 0
 1482 0154 10EA0E0F 	 tst r0,lr
 1483 0158 06D1     	 bne .L138
 1484              	.LVL147:
 1485              	.L135:
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 1486              	 .loc 1 370 0
 1487 015a 40EA0E00 	 orr r0,r0,lr
 1488 015e DFF838E1 	 ldr lr,.L143
 1489 0162 AEF8FC01 	 strh r0,[lr,#508]
 1490              	.LVL148:
 1491 0166 00E0     	 b .L123
 1492              	.LVL149:
 1493              	.L138:
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 1494              	 .loc 1 362 0
 1495 0168 0023     	 movs r3,#0
 1496              	.LVL150:
 1497              	.L123:
 1498              	.LBE13:
 1499              	.LBE12:
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 1500              	 .loc 1 1494 0
 1501 016a 03F00F03 	 and r3,r3,#15
 1502              	.LVL151:
 1503 016e DFF828E1 	 ldr lr,.L143
 1504 0172 3420     	 movs r0,#52
 1505 0174 00FB06F0 	 mul r0,r0,r6
 1506 0178 0EEB000C 	 add ip,lr,r0
 1507 017c BCF80480 	 ldrh r8,[ip,#4]
 1508 0180 63F38918 	 bfi r8,r3,#6,#4
 1509 0184 ACF80480 	 strh r8,[ip,#4]
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 1510              	 .loc 1 1495 0
 1511 0188 63F39955 	 bfi r5,r3,#22,#4
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 1512              	 .loc 1 1496 0
 1513 018c 6A34     	 adds r4,r4,#106
 1514 018e 5EF82430 	 ldr r3,[lr,r4,lsl#2]
 1515 0192 1D60     	 str r5,[r3]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1516              	 .loc 1 1497 0
 1517 0194 1EF80000 	 ldrb r0,[lr,r0]
 1518 0198 00F00F04 	 and r4,r0,#15
 1519 019c 0123     	 movs r3,#1
 1520 019e A340     	 lsls r3,r3,r4
 1521 01a0 3B43     	 orrs r3,r3,r7
 1522 01a2 63F30F07 	 bfi r7,r3,#0,#16
 1523              	.LBE11:
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1524              	 .loc 1 1499 0
 1525 01a6 10F0800F 	 tst r0,#128
 1526 01aa 02D0     	 beq .L124
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1527              	 .loc 1 1499 0 is_stmt 0 discriminator 1
 1528 01ac 0029     	 cmp r1,#0
 1529 01ae 4AD0     	 beq .L125
 1530 01b0 6BE0     	 b .L126
 1531              	.L124:
 1532              	.LBB14:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1533              	 .loc 1 1503 0 is_stmt 1
 1534 01b2 394B     	 ldr r3,.L143
 1535 01b4 3420     	 movs r0,#52
 1536 01b6 00FB06F0 	 mul r0,r0,r6
 1537 01ba 185C     	 ldrb r0,[r3,r0]
 1538 01bc 00F00F00 	 and r0,r0,#15
 1539 01c0 03EB8003 	 add r3,r3,r0,lsl#2
 1540 01c4 D3F8C401 	 ldr r0,[r3,#452]
 1541 01c8 0368     	 ldr r3,[r0]
 1542              	.LVL152:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1543              	 .loc 1 1505 0
 1544 01ca 43F40043 	 orr r3,r3,#32768
 1545              	.LVL153:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 1546              	 .loc 1 1507 0
 1547 01ce 61F39343 	 bfi r3,r1,#18,#2
 1548              	.LVL154:
1509:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 1549              	 .loc 1 1509 0
 1550 01d2 C1B9     	 cbnz r1,.L127
 1551              	.LVL155:
 1552              	.L136:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1553              	 .loc 1 1511 0
 1554 01d4 102A     	 cmp r2,#16
 1555 01d6 0ED0     	 beq .L129
 1556 01d8 02D8     	 bhi .L130
 1557 01da 082A     	 cmp r2,#8
 1558 01dc 0FD0     	 beq .L131
 1559 01de 14E0     	 b .L128
 1560              	.L130:
 1561 01e0 202A     	 cmp r2,#32
 1562 01e2 04D0     	 beq .L132
 1563 01e4 402A     	 cmp r2,#64
 1564 01e6 10D1     	 bne .L128
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1565              	 .loc 1 1514 0
 1566 01e8 6FF30A03 	 bfc r3,#0,#11
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 1567              	 .loc 1 1515 0
 1568 01ec 0DE0     	 b .L128
 1569              	.L132:
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1570              	 .loc 1 1517 0
 1571 01ee 0122     	 movs r2,#1
 1572              	.LVL156:
 1573 01f0 62F30A03 	 bfi r3,r2,#0,#11
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 1574              	 .loc 1 1518 0
 1575 01f4 09E0     	 b .L128
 1576              	.LVL157:
 1577              	.L129:
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1578              	 .loc 1 1520 0
 1579 01f6 0222     	 movs r2,#2
 1580              	.LVL158:
 1581 01f8 62F30A03 	 bfi r3,r2,#0,#11
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 1582              	 .loc 1 1521 0
 1583 01fc 05E0     	 b .L128
 1584              	.LVL159:
 1585              	.L131:
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1586              	 .loc 1 1523 0
 1587 01fe 0322     	 movs r2,#3
 1588              	.LVL160:
 1589 0200 62F30A03 	 bfi r3,r2,#0,#11
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 1590              	 .loc 1 1524 0
 1591 0204 01E0     	 b .L128
 1592              	.LVL161:
 1593              	.L127:
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 1594              	 .loc 1 1531 0
 1595 0206 62F30A03 	 bfi r3,r2,#0,#11
 1596              	.LVL162:
 1597              	.L128:
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
 1598              	 .loc 1 1534 0 discriminator 4
 1599 020a 43F08053 	 orr r3,r3,#268435456
 1600              	.LVL163:
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 1601              	 .loc 1 1536 0 discriminator 4
 1602 020e 6FF35553 	 bfc r3,#21,#1
 1603              	.LVL164:
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 1604              	 .loc 1 1537 0 discriminator 4
 1605 0212 0360     	 str r3,[r0]
1538:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1606              	 .loc 1 1538 0 discriminator 4
 1607 0214 3423     	 movs r3,#52
 1608              	.LVL165:
 1609 0216 03FB06F6 	 mul r6,r3,r6
 1610              	.LVL166:
 1611 021a 1F4B     	 ldr r3,.L143
 1612 021c 9A5D     	 ldrb r2,[r3,r6]
 1613 021e 02F00F02 	 and r2,r2,#15
 1614 0222 0123     	 movs r3,#1
 1615 0224 9340     	 lsls r3,r3,r2
 1616 0226 43EA1743 	 orr r3,r3,r7,lsr#16
 1617 022a 63F31F47 	 bfi r7,r3,#16,#16
 1618 022e 2CE0     	 b .L126
 1619              	.LVL167:
 1620              	.L110:
 1621              	.LBE14:
 1622              	.LBB15:
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1623              	 .loc 1 1459 0
 1624 0230 04F16A03 	 add r3,r4,#106
 1625 0234 1848     	 ldr r0,.L143
 1626 0236 50F82330 	 ldr r3,[r0,r3,lsl#2]
 1627 023a 1D68     	 ldr r5,[r3]
 1628              	.LVL168:
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1629              	 .loc 1 1461 0
 1630 023c 45F40045 	 orr r5,r5,#32768
 1631              	.LVL169:
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
 1632              	 .loc 1 1463 0
 1633 0240 6FF39345 	 bfc r5,#18,#2
 1634              	.LVL170:
 1635 0244 51E7     	 b .L134
 1636              	.L125:
 1637              	.LBE15:
 1638              	.LBB16:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1639              	 .loc 1 1503 0
 1640 0246 144B     	 ldr r3,.L143
 1641 0248 3421     	 movs r1,#52
 1642              	.LVL171:
 1643 024a 01FB06F1 	 mul r1,r1,r6
 1644 024e 595C     	 ldrb r1,[r3,r1]
 1645 0250 01F00F01 	 and r1,r1,#15
 1646 0254 03EB8103 	 add r3,r3,r1,lsl#2
 1647 0258 D3F8C401 	 ldr r0,[r3,#452]
 1648 025c 0368     	 ldr r3,[r0]
 1649              	.LVL172:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1650              	 .loc 1 1505 0
 1651 025e 43F40043 	 orr r3,r3,#32768
 1652              	.LVL173:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 1653              	 .loc 1 1507 0
 1654 0262 6FF39343 	 bfc r3,#18,#2
 1655              	.LVL174:
 1656 0266 B5E7     	 b .L136
 1657              	.LVL175:
 1658              	.L140:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1659              	 .loc 1 1503 0
 1660 0268 0B4B     	 ldr r3,.L143
 1661 026a 3420     	 movs r0,#52
 1662 026c 00FB06F0 	 mul r0,r0,r6
 1663 0270 185C     	 ldrb r0,[r3,r0]
 1664 0272 00F00F00 	 and r0,r0,#15
 1665 0276 03EB8003 	 add r3,r3,r0,lsl#2
 1666 027a D3F8C401 	 ldr r0,[r3,#452]
 1667 027e 0368     	 ldr r3,[r0]
 1668              	.LVL176:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1669              	 .loc 1 1505 0
 1670 0280 43F40043 	 orr r3,r3,#32768
 1671              	.LVL177:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 1672              	 .loc 1 1507 0
 1673 0284 61F39343 	 bfi r3,r1,#18,#2
 1674              	.LVL178:
 1675 0288 BDE7     	 b .L127
 1676              	.LVL179:
 1677              	.L126:
 1678              	.LBE16:
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1679              	 .loc 1 1540 0
 1680 028a 034B     	 ldr r3,.L143
 1681 028c D3F8A431 	 ldr r3,[r3,#420]
 1682 0290 DF61     	 str r7,[r3,#28]
1542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1683              	 .loc 1 1542 0
 1684 0292 0020     	 movs r0,#0
 1685 0294 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1686              	.LVL180:
 1687              	.L144:
 1688              	 .align 2
 1689              	.L143:
 1690 0298 00000000 	 .word xmc_device
 1691 029c 00000000 	 .word .LANCHOR1
 1692 02a0 00000000 	 .word .LANCHOR2
 1693 02a4 00000000 	 .word .LANCHOR0
 1694              	 .cfi_endproc
 1695              	.LFE205:
 1697              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 1698              	 .align 2
 1699              	 .global XMC_USBD_EndpointRead
 1700              	 .thumb
 1701              	 .thumb_func
 1703              	XMC_USBD_EndpointRead:
 1704              	.LFB200:
1285:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 1705              	 .loc 1 1285 0
 1706              	 .cfi_startproc
 1707              	 
 1708              	 
 1709              	.LVL181:
 1710 0000 70B5     	 push {r4,r5,r6,lr}
 1711              	.LCFI16:
 1712              	 .cfi_def_cfa_offset 16
 1713              	 .cfi_offset 4,-16
 1714              	 .cfi_offset 5,-12
 1715              	 .cfi_offset 6,-8
 1716              	 .cfi_offset 14,-4
 1717 0002 0646     	 mov r6,r0
 1718              	.LVL182:
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1719              	 .loc 1 1287 0
 1720 0004 3423     	 movs r3,#52
 1721 0006 0F4C     	 ldr r4,.L149
 1722 0008 03FB0044 	 mla r4,r3,r0,r4
 1723              	.LVL183:
 1724 000c 2569     	 ldr r5,[r4,#16]
 1725 000e 9542     	 cmp r5,r2
 1726 0010 28BF     	 it cs
 1727 0012 1546     	 movcs r5,r2
 1728              	.LVL184:
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 1729              	 .loc 1 1291 0
 1730 0014 E268     	 ldr r2,[r4,#12]
 1731 0016 A369     	 ldr r3,[r4,#24]
 1732 0018 0846     	 mov r0,r1
 1733              	.LVL185:
 1734 001a D118     	 adds r1,r2,r3
 1735              	.LVL186:
 1736 001c 2A46     	 mov r2,r5
 1737 001e FFF7FEFF 	 bl memcpy
 1738              	.LVL187:
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 1739              	 .loc 1 1292 0
 1740 0022 2369     	 ldr r3,[r4,#16]
 1741 0024 5B1B     	 subs r3,r3,r5
 1742 0026 2361     	 str r3,[r4,#16]
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1743              	 .loc 1 1293 0
 1744 0028 1BB1     	 cbz r3,.L146
1295:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1745              	 .loc 1 1295 0
 1746 002a A369     	 ldr r3,[r4,#24]
 1747 002c 2B44     	 add r3,r3,r5
 1748 002e A361     	 str r3,[r4,#24]
 1749 0030 05E0     	 b .L147
 1750              	.L146:
1299:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1751              	 .loc 1 1299 0
 1752 0032 3422     	 movs r2,#52
 1753 0034 034B     	 ldr r3,.L149
 1754 0036 02FB0636 	 mla r6,r2,r6,r3
 1755 003a 0023     	 movs r3,#0
 1756 003c B361     	 str r3,[r6,#24]
 1757              	.L147:
1302:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1758              	 .loc 1 1302 0
 1759 003e 2846     	 mov r0,r5
 1760 0040 70BD     	 pop {r4,r5,r6,pc}
 1761              	.LVL188:
 1762              	.L150:
 1763 0042 00BF     	 .align 2
 1764              	.L149:
 1765 0044 00000000 	 .word xmc_device
 1766              	 .cfi_endproc
 1767              	.LFE200:
 1769              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 1770              	 .align 2
 1771              	 .global XMC_USBD_EndpointWrite
 1772              	 .thumb
 1773              	 .thumb_func
 1775              	XMC_USBD_EndpointWrite:
 1776              	.LFB201:
1308:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 1777              	 .loc 1 1308 0
 1778              	 .cfi_startproc
 1779              	 
 1780              	 
 1781              	.LVL189:
 1782 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1783              	.LCFI17:
 1784              	 .cfi_def_cfa_offset 24
 1785              	 .cfi_offset 3,-24
 1786              	 .cfi_offset 4,-20
 1787              	 .cfi_offset 5,-16
 1788              	 .cfi_offset 6,-12
 1789              	 .cfi_offset 7,-8
 1790              	 .cfi_offset 14,-4
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
 1791              	 .loc 1 1309 0
 1792 0002 00F00F00 	 and r0,r0,#15
 1793              	.LVL190:
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1794              	 .loc 1 1311 0
 1795 0006 3423     	 movs r3,#52
 1796 0008 164C     	 ldr r4,.L156
 1797 000a 03FB0043 	 mla r3,r3,r0,r4
 1798              	.LVL191:
 1799 000e 1B79     	 ldrb r3,[r3,#4]
 1800              	.LVL192:
 1801 0010 13F0040F 	 tst r3,#4
 1802 0014 21D0     	 beq .L153
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1803              	 .loc 1 1315 0
 1804 0016 3423     	 movs r3,#52
 1805 0018 03FB0043 	 mla r3,r3,r0,r4
 1806              	.LVL193:
 1807 001c 5B68     	 ldr r3,[r3,#4]
 1808              	.LVL194:
 1809 001e 13F0080F 	 tst r3,#8
 1810 0022 1CD1     	 bne .L154
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1811              	 .loc 1 1321 0
 1812 0024 3424     	 movs r4,#52
 1813 0026 0F4B     	 ldr r3,.L156
 1814 0028 04FB0034 	 mla r4,r4,r0,r3
 1815              	.LVL195:
 1816 002c 256A     	 ldr r5,[r4,#32]
 1817 002e 9542     	 cmp r5,r2
 1818 0030 28BF     	 it cs
 1819 0032 1546     	 movcs r5,r2
 1820              	.LVL196:
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 1821              	 .loc 1 1326 0
 1822 0034 E069     	 ldr r0,[r4,#28]
 1823 0036 2A46     	 mov r2,r5
 1824 0038 FFF7FEFF 	 bl memcpy
 1825              	.LVL197:
1327:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 1826              	 .loc 1 1327 0
 1827 003c E369     	 ldr r3,[r4,#28]
 1828 003e 6362     	 str r3,[r4,#36]
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
 1829              	 .loc 1 1328 0
 1830 0040 2563     	 str r5,[r4,#48]
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 1831              	 .loc 1 1330 0
 1832 0042 0023     	 movs r3,#0
 1833 0044 A362     	 str r3,[r4,#40]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 1834              	 .loc 1 1331 0
 1835 0046 E362     	 str r3,[r4,#44]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 1836              	 .loc 1 1332 0
 1837 0048 6368     	 ldr r3,[r4,#4]
 1838 004a 43F00803 	 orr r3,r3,#8
 1839 004e 6360     	 str r3,[r4,#4]
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 1840              	 .loc 1 1334 0
 1841 0050 2046     	 mov r0,r4
 1842 0052 FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 1843              	.LVL198:
1335:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1844              	 .loc 1 1335 0
 1845 0056 206B     	 ldr r0,[r4,#48]
 1846              	.LVL199:
 1847 0058 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1848              	.LVL200:
 1849              	.L153:
1313:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1850              	 .loc 1 1313 0
 1851 005a 0120     	 movs r0,#1
 1852              	.LVL201:
 1853 005c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1854              	.LVL202:
 1855              	.L154:
1317:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1856              	 .loc 1 1317 0
 1857 005e 0020     	 movs r0,#0
 1858              	.LVL203:
1338:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1859              	 .loc 1 1338 0
 1860 0060 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1861              	.L157:
 1862 0062 00BF     	 .align 2
 1863              	.L156:
 1864 0064 00000000 	 .word xmc_device
 1865              	 .cfi_endproc
 1866              	.LFE201:
 1868              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
 1869              	 .align 2
 1870              	 .global XMC_USBD_lDeviceActive
 1871              	 .thumb
 1872              	 .thumb_func
 1874              	XMC_USBD_lDeviceActive:
 1875              	.LFB169:
 181:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 1876              	 .loc 1 181 0
 1877              	 .cfi_startproc
 1878              	 
 1879              	 
 1880              	 
 1881              	.LVL204:
 1882 0000 70B4     	 push {r4,r5,r6}
 1883              	.LCFI18:
 1884              	 .cfi_def_cfa_offset 12
 1885              	 .cfi_offset 4,-12
 1886              	 .cfi_offset 5,-8
 1887              	 .cfi_offset 6,-4
 1888              	.LVL205:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1889              	 .loc 1 184 0
 1890 0002 057B     	 ldrb r5,[r0,#12]
 1891 0004 CDB1     	 cbz r5,.L162
 1892 0006 0023     	 movs r3,#0
 1893 0008 1846     	 mov r0,r3
 1894              	.LVL206:
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1895              	 .loc 1 186 0
 1896 000a 0D4C     	 ldr r4,.L166
 1897 000c 3421     	 movs r1,#52
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1898              	 .loc 1 188 0
 1899 000e 0126     	 movs r6,#1
 1900              	.LVL207:
 1901              	.L161:
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1902              	 .loc 1 186 0
 1903 0010 01FB0342 	 mla r2,r1,r3,r4
 1904 0014 5268     	 ldr r2,[r2,#4]
 1905 0016 12F0080F 	 tst r2,#8
 1906 001a 08D1     	 bne .L163
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1907              	 .loc 1 186 0 is_stmt 0 discriminator 1
 1908 001c 01FB0342 	 mla r2,r1,r3,r4
 1909 0020 5268     	 ldr r2,[r2,#4]
 1910 0022 C2F30012 	 ubfx r2,r2,#4,#1
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1911              	 .loc 1 188 0 is_stmt 1 discriminator 1
 1912 0026 002A     	 cmp r2,#0
 1913 0028 18BF     	 it ne
 1914 002a 0120     	 movne r0,#1
 1915              	.LVL208:
 1916 002c 00E0     	 b .L160
 1917              	.LVL209:
 1918              	.L163:
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1919              	 .loc 1 188 0 is_stmt 0
 1920 002e 3046     	 mov r0,r6
 1921              	.LVL210:
 1922              	.L160:
 1923 0030 0133     	 adds r3,r3,#1
 1924              	.LVL211:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1925              	 .loc 1 184 0 is_stmt 1 discriminator 2
 1926 0032 DAB2     	 uxtb r2,r3
 1927 0034 AA42     	 cmp r2,r5
 1928 0036 EBD3     	 bcc .L161
 1929 0038 00E0     	 b .L159
 1930              	.LVL212:
 1931              	.L162:
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 1932              	 .loc 1 183 0
 1933 003a 0020     	 movs r0,#0
 1934              	.LVL213:
 1935              	.L159:
 192:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1936              	 .loc 1 192 0
 1937 003c 70BC     	 pop {r4,r5,r6}
 1938              	.LCFI19:
 1939              	 .cfi_restore 6
 1940              	 .cfi_restore 5
 1941              	 .cfi_restore 4
 1942              	 .cfi_def_cfa_offset 0
 1943 003e 7047     	 bx lr
 1944              	.L167:
 1945              	 .align 2
 1946              	.L166:
 1947 0040 00000000 	 .word xmc_device
 1948              	 .cfi_endproc
 1949              	.LFE169:
 1951              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 1952              	 .align 2
 1953              	 .global XMC_USBD_DeviceGetState
 1954              	 .thumb
 1955              	 .thumb_func
 1957              	XMC_USBD_DeviceGetState:
 1958              	.LFB198:
1241:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 1959              	 .loc 1 1241 0
 1960              	 .cfi_startproc
 1961              	 
 1962              	 
 1963              	.LVL214:
 1964 0000 70B5     	 push {r4,r5,r6,lr}
 1965              	.LCFI20:
 1966              	 .cfi_def_cfa_offset 16
 1967              	 .cfi_offset 4,-16
 1968              	 .cfi_offset 5,-12
 1969              	 .cfi_offset 6,-8
 1970              	 .cfi_offset 14,-4
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 1971              	 .loc 1 1242 0
 1972 0002 0024     	 movs r4,#0
 1973              	.LVL215:
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 1974              	 .loc 1 1244 0
 1975 0004 0A4E     	 ldr r6,.L170
 1976 0006 96F8FE51 	 ldrb r5,[r6,#510]
 1977 000a 05F00105 	 and r5,r5,#1
 1978              	.LVL216:
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 1979              	 .loc 1 1245 0
 1980 000e FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 1981              	.LVL217:
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 1982              	 .loc 1 1246 0
 1983 0012 96F8FE31 	 ldrb r3,[r6,#510]
1247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1984              	 .loc 1 1247 0
 1985 0016 C3F38003 	 ubfx r3,r3,#2,#1
 1986 001a 63F30004 	 bfi r4,r3,#0,#1
 1987              	.LVL218:
 1988 001e 65F34104 	 bfi r4,r5,#1,#1
 1989 0022 60F38204 	 bfi r4,r0,#2,#1
 1990 0026 0123     	 movs r3,#1
 1991 0028 63F3C404 	 bfi r4,r3,#3,#2
1248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1992              	 .loc 1 1248 0
 1993 002c 2046     	 mov r0,r4
 1994              	.LVL219:
 1995 002e 70BD     	 pop {r4,r5,r6,pc}
 1996              	.LVL220:
 1997              	.L171:
 1998              	 .align 2
 1999              	.L170:
 2000 0030 00000000 	 .word xmc_device
 2001              	 .cfi_endproc
 2002              	.LFE198:
 2004              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2005              	 .align 2
 2006              	 .global XMC_USBD_Enable
 2007              	 .thumb
 2008              	 .thumb_func
 2010              	XMC_USBD_Enable:
 2011              	.LFB185:
 942:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 2012              	 .loc 1 942 0
 2013              	 .cfi_startproc
 2014              	 
 2015              	 
 2016 0000 08B5     	 push {r3,lr}
 2017              	.LCFI21:
 2018              	 .cfi_def_cfa_offset 8
 2019              	 .cfi_offset 3,-8
 2020              	 .cfi_offset 14,-4
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2021              	 .loc 1 947 0
 2022 0002 0348     	 ldr r0,.L174
 2023 0004 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 2024              	.LVL221:
 948:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2025              	 .loc 1 948 0
 2026 0008 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 2027              	.LVL222:
 2028 000c 08BD     	 pop {r3,pc}
 2029              	.L175:
 2030 000e 00BF     	 .align 2
 2031              	.L174:
 2032 0010 80000020 	 .word 536871040
 2033              	 .cfi_endproc
 2034              	.LFE185:
 2036              	 .section .text.XMC_USBD_Init,"ax",%progbits
 2037              	 .align 2
 2038              	 .global XMC_USBD_Init
 2039              	 .thumb
 2040              	 .thumb_func
 2042              	XMC_USBD_Init:
 2043              	.LFB194:
1084:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
 2044              	 .loc 1 1084 0
 2045              	 .cfi_startproc
 2046              	 
 2047              	 
 2048              	.LVL223:
 2049 0000 38B5     	 push {r3,r4,r5,lr}
 2050              	.LCFI22:
 2051              	 .cfi_def_cfa_offset 16
 2052              	 .cfi_offset 3,-16
 2053              	 .cfi_offset 4,-12
 2054              	 .cfi_offset 5,-8
 2055              	 .cfi_offset 14,-4
 2056 0002 0446     	 mov r4,r0
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2057              	 .loc 1 1096 0
 2058 0004 FFF7FEFF 	 bl XMC_USBD_Enable
 2059              	.LVL224:
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2060              	 .loc 1 1098 0
 2061 0008 3F4B     	 ldr r3,.L189
 2062 000a 1C60     	 str r4,[r3]
 2063              	.LVL225:
 2064 000c 3F48     	 ldr r0,.L189+4
 2065 000e 031F     	 subs r3,r0,#4
 2066 0010 3F49     	 ldr r1,.L189+8
 2067 0012 1830     	 adds r0,r0,#24
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 2068              	 .loc 1 1103 0
 2069 0014 4022     	 movs r2,#64
 2070              	.LVL226:
 2071              	.L177:
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 2072              	 .loc 1 1103 0 is_stmt 0 discriminator 3
 2073 0016 43F8042F 	 str r2,[r3,#4]!
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2074              	 .loc 1 1104 0 is_stmt 1 discriminator 3
 2075 001a 41F8042F 	 str r2,[r1,#4]!
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2076              	 .loc 1 1101 0 discriminator 3
 2077 001e 8342     	 cmp r3,r0
 2078 0020 F9D1     	 bne .L177
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2079              	 .loc 1 1108 0
 2080 0022 3C4D     	 ldr r5,.L189+12
 2081 0024 2846     	 mov r0,r5
 2082 0026 0021     	 movs r1,#0
 2083 0028 4FF40272 	 mov r2,#520
 2084 002c FFF7FEFF 	 bl memset
 2085              	.LVL227:
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 2086              	 .loc 1 1111 0
 2087 0030 6368     	 ldr r3,[r4,#4]
 2088 0032 C5F80032 	 str r3,[r5,#512]
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 2089              	 .loc 1 1112 0
 2090 0036 A368     	 ldr r3,[r4,#8]
 2091 0038 C5F80432 	 str r3,[r5,#516]
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
 2092              	 .loc 1 1113 0
 2093 003c 2068     	 ldr r0,[r4]
 2094              	.LVL228:
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 2095              	 .loc 1 1115 0
 2096 003e C5F8A001 	 str r0,[r5,#416]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 2097              	 .loc 1 1116 0
 2098 0042 00F50063 	 add r3,r0,#2048
 2099 0046 C5F8A431 	 str r3,[r5,#420]
 2100              	.LVL229:
 2101 004a 00F51062 	 add r2,r0,#2304
 2102 004e 05F5D273 	 add r3,r5,#420
 2103 0052 05F5E075 	 add r5,r5,#448
 2104              	.LVL230:
 2105              	.L178:
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
 2106              	 .loc 1 1119 0 discriminator 3
 2107 0056 43F8042F 	 str r2,[r3,#4]!
 2108 005a 2032     	 adds r2,r2,#32
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2109              	 .loc 1 1117 0 discriminator 3
 2110 005c AB42     	 cmp r3,r5
 2111 005e FAD1     	 bne .L178
 2112 0060 00F53062 	 add r2,r0,#2816
 2113 0064 2C4B     	 ldr r3,.L189+16
 2114 0066 03F11C01 	 add r1,r3,#28
 2115              	.L179:
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 2116              	 .loc 1 1124 0 discriminator 3
 2117 006a 43F8042F 	 str r2,[r3,#4]!
 2118 006e 2032     	 adds r2,r2,#32
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2119              	 .loc 1 1122 0 discriminator 3
 2120 0070 8B42     	 cmp r3,r1
 2121 0072 FAD1     	 bne .L179
 2122 0074 00F58052 	 add r2,r0,#4096
 2123 0078 284B     	 ldr r3,.L189+20
 2124 007a 03F11C01 	 add r1,r3,#28
 2125              	.L180:
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 2126              	 .loc 1 1130 0 discriminator 3
 2127 007e 43F8042F 	 str r2,[r3,#4]!
 2128 0082 02F58052 	 add r2,r2,#4096
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2129              	 .loc 1 1128 0 discriminator 3
 2130 0086 8B42     	 cmp r3,r1
 2131 0088 F9D1     	 bne .L180
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 2132              	 .loc 1 1137 0
 2133 008a 8368     	 ldr r3,[r0,#8]
 2134              	.LVL231:
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2135              	 .loc 1 1139 0
 2136 008c 43F08103 	 orr r3,r3,#129
 2137              	.LVL232:
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2138              	 .loc 1 1140 0
 2139 0090 627B     	 ldrb r2,[r4,#13]
 2140 0092 12B9     	 cbnz r2,.L181
 2141              	.LVL233:
1143:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2142              	 .loc 1 1143 0
 2143 0094 43F02003 	 orr r3,r3,#32
 2144              	.LVL234:
 2145 0098 01E0     	 b .L182
 2146              	.L181:
1147:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2147              	 .loc 1 1147 0
 2148 009a 6FF34513 	 bfc r3,#5,#1
 2149              	.LVL235:
 2150              	.L182:
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
 2151              	 .loc 1 1149 0
 2152 009e 8360     	 str r3,[r0,#8]
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 2153              	 .loc 1 1151 0
 2154 00a0 1C4D     	 ldr r5,.L189+12
 2155 00a2 D5F8A021 	 ldr r2,[r5,#416]
 2156 00a6 D368     	 ldr r3,[r2,#12]
 2157              	.LVL236:
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 2158              	 .loc 1 1153 0
 2159 00a8 43F08043 	 orr r3,r3,#1073741824
 2160              	.LVL237:
 2161 00ac 43F48073 	 orr r3,r3,#256
 2162              	.LVL238:
1154:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2163              	 .loc 1 1154 0
 2164 00b0 D360     	 str r3,[r2,#12]
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 2165              	 .loc 1 1158 0
 2166 00b2 D5F8A421 	 ldr r2,[r5,#420]
 2167 00b6 1368     	 ldr r3,[r2]
 2168              	.LVL239:
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 2169              	 .loc 1 1159 0
 2170 00b8 43F00303 	 orr r3,r3,#3
 2171              	.LVL240:
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 2172              	 .loc 1 1160 0
 2173 00bc 6FF3D753 	 bfc r3,#23,#1
 2174              	.LVL241:
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
 2175              	 .loc 1 1161 0
 2176 00c0 1360     	 str r3,[r2]
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 2177              	 .loc 1 1163 0
 2178 00c2 D5F8A421 	 ldr r2,[r5,#420]
 2179 00c6 5368     	 ldr r3,[r2,#4]
 2180              	.LVL242:
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
 2181              	 .loc 1 1164 0
 2182 00c8 43F00203 	 orr r3,r3,#2
 2183              	.LVL243:
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 2184              	 .loc 1 1166 0
 2185 00cc 5360     	 str r3,[r2,#4]
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 2186              	 .loc 1 1168 0
 2187 00ce 1020     	 movs r0,#16
 2188              	.LVL244:
 2189 00d0 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 2190              	.LVL245:
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
 2191              	 .loc 1 1169 0
 2192 00d4 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 2193              	.LVL246:
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 2194              	 .loc 1 1172 0
 2195 00d8 D5F8A031 	 ldr r3,[r5,#416]
 2196 00dc 0022     	 movs r2,#0
 2197 00de 9A61     	 str r2,[r3,#24]
1173:../Libraries/XMCLib/src/xmc_usbd.c ****  
 2198              	 .loc 1 1173 0
 2199 00e0 D5F8A031 	 ldr r3,[r5,#416]
 2200 00e4 4FF0FF32 	 mov r2,#-1
 2201 00e8 5A61     	 str r2,[r3,#20]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2202              	 .loc 1 1186 0
 2203 00ea 0D4B     	 ldr r3,.L189+24
 2204              	.LVL247:
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2205              	 .loc 1 1187 0
 2206 00ec 627B     	 ldrb r2,[r4,#13]
 2207 00ee 012A     	 cmp r2,#1
 2208              	.LVL248:
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2209              	 .loc 1 1189 0
 2210 00f0 08BF     	 it eq
 2211 00f2 43F01003 	 orreq r3,r3,#16
 2212              	.LVL249:
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 2213              	 .loc 1 1192 0
 2214 00f6 43F44023 	 orr r3,r3,#786432
 2215              	.LVL250:
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 2216              	 .loc 1 1193 0
 2217 00fa 064A     	 ldr r2,.L189+12
 2218 00fc D2F8A021 	 ldr r2,[r2,#416]
 2219              	.LVL251:
 2220 0100 9361     	 str r3,[r2,#24]
1195:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2221              	 .loc 1 1195 0
 2222 0102 0020     	 movs r0,#0
 2223 0104 38BD     	 pop {r3,r4,r5,pc}
 2224              	.LVL252:
 2225              	.L190:
 2226 0106 00BF     	 .align 2
 2227              	.L189:
 2228 0108 00000000 	 .word usbd_init
 2229 010c 00000000 	 .word .LANCHOR2
 2230 0110 FCFFFFFF 	 .word .LANCHOR1-4
 2231 0114 00000000 	 .word xmc_device
 2232 0118 C0010000 	 .word xmc_device+448
 2233 011c DC010000 	 .word xmc_device+476
 2234 0120 0E3C00C0 	 .word -1073726450
 2235              	 .cfi_endproc
 2236              	.LFE194:
 2238              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2239              	 .align 2
 2240              	 .global XMC_USBD_Disable
 2241              	 .thumb
 2242              	 .thumb_func
 2244              	XMC_USBD_Disable:
 2245              	.LFB186:
 955:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 2246              	 .loc 1 955 0
 2247              	 .cfi_startproc
 2248              	 
 2249              	 
 2250 0000 08B5     	 push {r3,lr}
 2251              	.LCFI23:
 2252              	 .cfi_def_cfa_offset 8
 2253              	 .cfi_offset 3,-8
 2254              	 .cfi_offset 14,-4
 957:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 2255              	 .loc 1 957 0
 2256 0002 0348     	 ldr r0,.L193
 2257 0004 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 2258              	.LVL253:
 961:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2259              	 .loc 1 961 0
 2260 0008 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 2261              	.LVL254:
 2262 000c 08BD     	 pop {r3,pc}
 2263              	.L194:
 2264 000e 00BF     	 .align 2
 2265              	.L193:
 2266 0010 80000020 	 .word 536871040
 2267              	 .cfi_endproc
 2268              	.LFE186:
 2270              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2271              	 .align 2
 2272              	 .global XMC_USBD_ClearEvent
 2273              	 .thumb
 2274              	 .thumb_func
 2276              	XMC_USBD_ClearEvent:
 2277              	.LFB187:
 968:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 2278              	 .loc 1 968 0
 2279              	 .cfi_startproc
 2280              	 
 2281              	 
 2282              	 
 2283              	.LVL255:
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 2284              	 .loc 1 970 0
 2285 0000 0023     	 movs r3,#0
 2286              	.LVL256:
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2287              	 .loc 1 971 0
 2288 0002 0D28     	 cmp r0,#13
 2289 0004 21D8     	 bhi .L196
 2290 0006 DFE800F0 	 tbb [pc,r0]
 2291              	.L198:
 2292 000a 07       	 .byte (.L197-.L198)/2
 2293 000b 20       	 .byte (.L196-.L198)/2
 2294 000c 20       	 .byte (.L196-.L198)/2
 2295 000d 20       	 .byte (.L196-.L198)/2
 2296 000e 0A       	 .byte (.L199-.L198)/2
 2297 000f 20       	 .byte (.L196-.L198)/2
 2298 0010 0D       	 .byte (.L200-.L198)/2
 2299 0011 10       	 .byte (.L201-.L198)/2
 2300 0012 13       	 .byte (.L202-.L198)/2
 2301 0013 16       	 .byte (.L203-.L198)/2
 2302 0014 18       	 .byte (.L204-.L198)/2
 2303 0015 1B       	 .byte (.L205-.L198)/2
 2304 0016 20       	 .byte (.L196-.L198)/2
 2305 0017 1E       	 .byte (.L206-.L198)/2
 2306              	 .p2align 1
 2307              	.L197:
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2308              	 .loc 1 974 0
 2309 0018 4FF08043 	 mov r3,#1073741824
 975:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 2310              	 .loc 1 975 0
 2311 001c 15E0     	 b .L196
 2312              	.L199:
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2313              	 .loc 1 977 0
 2314 001e 4FF48053 	 mov r3,#4096
 978:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 2315              	 .loc 1 978 0
 2316 0022 12E0     	 b .L196
 2317              	.L200:
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2318              	 .loc 1 980 0
 2319 0024 4FF40063 	 mov r3,#2048
 981:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 2320              	 .loc 1 981 0
 2321 0028 0FE0     	 b .L196
 2322              	.L201:
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2323              	 .loc 1 983 0
 2324 002a 4FF00043 	 mov r3,#-2147483648
 984:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 2325              	 .loc 1 984 0
 2326 002e 0CE0     	 b .L196
 2327              	.L202:
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2328              	 .loc 1 986 0
 2329 0030 4FF00043 	 mov r3,#-2147483648
 987:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 2330              	 .loc 1 987 0
 2331 0034 09E0     	 b .L196
 2332              	.L203:
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2333              	 .loc 1 989 0
 2334 0036 0823     	 movs r3,#8
 990:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 2335              	 .loc 1 990 0
 2336 0038 07E0     	 b .L196
 2337              	.L204:
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2338              	 .loc 1 992 0
 2339 003a 4FF48063 	 mov r3,#1024
 993:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 2340              	 .loc 1 993 0
 2341 003e 04E0     	 b .L196
 2342              	.L205:
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2343              	 .loc 1 995 0
 2344 0040 4FF40053 	 mov r3,#8192
 996:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 2345              	 .loc 1 996 0
 2346 0044 01E0     	 b .L196
 2347              	.L206:
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2348              	 .loc 1 998 0
 2349 0046 4FF40023 	 mov r3,#524288
 2350              	.L196:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2351              	 .loc 1 1003 0
 2352 004a 024A     	 ldr r2,.L207
 2353 004c D2F8A021 	 ldr r2,[r2,#416]
 2354              	.LVL257:
 2355 0050 5361     	 str r3,[r2,#20]
 2356 0052 7047     	 bx lr
 2357              	.L208:
 2358              	 .align 2
 2359              	.L207:
 2360 0054 00000000 	 .word xmc_device
 2361              	 .cfi_endproc
 2362              	.LFE187:
 2364              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2365              	 .align 2
 2366              	 .global XMC_USBD_ClearEventINEP
 2367              	 .thumb
 2368              	 .thumb_func
 2370              	XMC_USBD_ClearEventINEP:
 2371              	.LFB189:
1020:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
 2372              	 .loc 1 1020 0
 2373              	 .cfi_startproc
 2374              	 
 2375              	 
 2376              	 
 2377              	.LVL258:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2378              	 .loc 1 1023 0
 2379 0000 6A31     	 adds r1,r1,#106
 2380              	.LVL259:
 2381 0002 024B     	 ldr r3,.L210
 2382 0004 53F82130 	 ldr r3,[r3,r1,lsl#2]
 2383 0008 9860     	 str r0,[r3,#8]
 2384 000a 7047     	 bx lr
 2385              	.L211:
 2386              	 .align 2
 2387              	.L210:
 2388 000c 00000000 	 .word xmc_device
 2389              	 .cfi_endproc
 2390              	.LFE189:
 2392              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2393              	 .align 2
 2394              	 .global XMC_USBD_ClearEventOUTEP
 2395              	 .thumb
 2396              	 .thumb_func
 2398              	XMC_USBD_ClearEventOUTEP:
 2399              	.LFB190:
1030:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
 2400              	 .loc 1 1030 0
 2401              	 .cfi_startproc
 2402              	 
 2403              	 
 2404              	 
 2405              	.LVL260:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2406              	 .loc 1 1033 0
 2407 0000 034B     	 ldr r3,.L213
 2408 0002 03EB8101 	 add r1,r3,r1,lsl#2
 2409              	.LVL261:
 2410 0006 D1F8C431 	 ldr r3,[r1,#452]
 2411 000a 9860     	 str r0,[r3,#8]
 2412 000c 7047     	 bx lr
 2413              	.L214:
 2414 000e 00BF     	 .align 2
 2415              	.L213:
 2416 0010 00000000 	 .word xmc_device
 2417              	 .cfi_endproc
 2418              	.LFE190:
 2420              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2421              	 .align 2
 2422              	 .global XMC_USBD_EnableEventOUTEP
 2423              	 .thumb
 2424              	 .thumb_func
 2426              	XMC_USBD_EnableEventOUTEP:
 2427              	.LFB191:
1040:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
 2428              	 .loc 1 1040 0
 2429              	 .cfi_startproc
 2430              	 
 2431              	 
 2432              	 
 2433              	.LVL262:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2434              	 .loc 1 1043 0
 2435 0000 034B     	 ldr r3,.L216
 2436 0002 D3F8A421 	 ldr r2,[r3,#420]
 2437 0006 5369     	 ldr r3,[r2,#20]
 2438 0008 1843     	 orrs r0,r0,r3
 2439              	.LVL263:
 2440 000a 5061     	 str r0,[r2,#20]
 2441 000c 7047     	 bx lr
 2442              	.L217:
 2443 000e 00BF     	 .align 2
 2444              	.L216:
 2445 0010 00000000 	 .word xmc_device
 2446              	 .cfi_endproc
 2447              	.LFE191:
 2449              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2450              	 .align 2
 2451              	 .global XMC_USBD_EnableEventINEP
 2452              	 .thumb
 2453              	 .thumb_func
 2455              	XMC_USBD_EnableEventINEP:
 2456              	.LFB192:
1050:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
 2457              	 .loc 1 1050 0
 2458              	 .cfi_startproc
 2459              	 
 2460              	 
 2461              	 
 2462              	.LVL264:
1053:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2463              	 .loc 1 1053 0
 2464 0000 034B     	 ldr r3,.L219
 2465 0002 D3F8A421 	 ldr r2,[r3,#420]
 2466 0006 1369     	 ldr r3,[r2,#16]
 2467 0008 1843     	 orrs r0,r0,r3
 2468              	.LVL265:
 2469 000a 1061     	 str r0,[r2,#16]
 2470 000c 7047     	 bx lr
 2471              	.L220:
 2472 000e 00BF     	 .align 2
 2473              	.L219:
 2474 0010 00000000 	 .word xmc_device
 2475              	 .cfi_endproc
 2476              	.LFE192:
 2478              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2479              	 .align 2
 2480              	 .global XMC_USBD_IRQHandler
 2481              	 .thumb
 2482              	 .thumb_func
 2484              	XMC_USBD_IRQHandler:
 2485              	.LFB184:
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2486              	 .loc 1 867 0
 2487              	 .cfi_startproc
 2488              	 
 2489              	 
 2490              	.LVL266:
 2491 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 2492              	.LCFI24:
 2493              	 .cfi_def_cfa_offset 36
 2494              	 .cfi_offset 4,-36
 2495              	 .cfi_offset 5,-32
 2496              	 .cfi_offset 6,-28
 2497              	 .cfi_offset 7,-24
 2498              	 .cfi_offset 8,-20
 2499              	 .cfi_offset 9,-16
 2500              	 .cfi_offset 10,-12
 2501              	 .cfi_offset 11,-8
 2502              	 .cfi_offset 14,-4
 2503 0004 85B0     	 sub sp,sp,#20
 2504              	.LCFI25:
 2505              	 .cfi_def_cfa_offset 56
 2506 0006 0746     	 mov r7,r0
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2507              	 .loc 1 871 0
 2508 0008 974B     	 ldr r3,.L268
 2509 000a D3F8A031 	 ldr r3,[r3,#416]
 2510 000e 9C69     	 ldr r4,[r3,#24]
 2511              	.LVL267:
 872:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 2512              	 .loc 1 872 0
 2513 0010 5B69     	 ldr r3,[r3,#20]
 2514 0012 03EA0409 	 and r9,r3,r4
 2515              	.LVL268:
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2516              	 .loc 1 874 0
 2517 0016 5FFA89F5 	 uxtb r5,r9
 2518 001a 15F0080F 	 tst r5,#8
 2519 001e 07D0     	 beq .L222
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2520              	 .loc 1 876 0
 2521 0020 914B     	 ldr r3,.L268
 2522 0022 D3F80032 	 ldr r3,[r3,#512]
 2523 0026 0920     	 movs r0,#9
 2524              	.LVL269:
 2525 0028 9847     	 blx r3
 2526              	.LVL270:
 877:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2527              	 .loc 1 877 0
 2528 002a 0920     	 movs r0,#9
 2529 002c FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2530              	.LVL271:
 2531              	.L222:
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2532              	 .loc 1 879 0
 2533 0030 7B7B     	 ldrb r3,[r7,#13]
 2534 0032 012B     	 cmp r3,#1
 2535 0034 25D1     	 bne .L223
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2536              	 .loc 1 881 0
 2537 0036 15F0100F 	 tst r5,#16
 2538 003a 22D0     	 beq .L223
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2539              	 .loc 1 884 0
 2540 003c 6FF30414 	 bfc r4,#4,#1
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2541              	 .loc 1 885 0
 2542 0040 894B     	 ldr r3,.L268
 2543 0042 D3F8A021 	 ldr r2,[r3,#416]
 2544 0046 9461     	 str r4,[r2,#24]
 2545              	.LBB42:
 2546              	.LBB43:
 838:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2547              	 .loc 1 838 0
 2548 0048 D3F8A031 	 ldr r3,[r3,#416]
 2549 004c 196A     	 ldr r1,[r3,#32]
 2550              	.LVL272:
 840:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 2551              	 .loc 1 840 0
 2552 004e C1F34343 	 ubfx r3,r1,#17,#4
 2553 0052 022B     	 cmp r3,#2
 2554 0054 02D0     	 beq .L225
 2555 0056 062B     	 cmp r3,#6
 2556 0058 07D0     	 beq .L226
 2557 005a 0CE0     	 b .L224
 2558              	.L225:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2559              	 .loc 1 847 0
 2560 005c 01F00F00 	 and r0,r1,#15
 2561 0060 C1F30A11 	 ubfx r1,r1,#4,#11
 2562              	.LVL273:
 2563 0064 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 2564              	.LVL274:
 2565 0068 05E0     	 b .L224
 2566              	.LVL275:
 2567              	.L226:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2568              	 .loc 1 850 0
 2569 006a 01F00F00 	 and r0,r1,#15
 2570 006e C1F30A11 	 ubfx r1,r1,#4,#11
 2571              	.LVL276:
 2572 0072 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 2573              	.LVL277:
 2574              	.L224:
 2575              	.LBE43:
 2576              	.LBE42:
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2577              	 .loc 1 887 0
 2578 0076 44F01004 	 orr r4,r4,#16
 2579              	.LVL278:
 888:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2580              	 .loc 1 888 0
 2581 007a 7B4B     	 ldr r3,.L268
 2582 007c D3F8A031 	 ldr r3,[r3,#416]
 2583              	.LVL279:
 2584 0080 9C61     	 str r4,[r3,#24]
 2585              	.L223:
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2586              	 .loc 1 891 0
 2587 0082 C9F30724 	 ubfx r4,r9,#8,#8
 2588              	.LVL280:
 2589 0086 14F0040F 	 tst r4,#4
 2590 008a 02D0     	 beq .L227
 893:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2591              	 .loc 1 893 0
 2592 008c 0A20     	 movs r0,#10
 2593 008e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2594              	.LVL281:
 2595              	.L227:
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2596              	 .loc 1 895 0
 2597 0092 14F0080F 	 tst r4,#8
 2598 0096 07D0     	 beq .L228
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2599              	 .loc 1 897 0
 2600 0098 734B     	 ldr r3,.L268
 2601 009a D3F80032 	 ldr r3,[r3,#512]
 2602 009e 0620     	 movs r0,#6
 2603 00a0 9847     	 blx r3
 2604              	.LVL282:
 898:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2605              	 .loc 1 898 0
 2606 00a2 0620     	 movs r0,#6
 2607 00a4 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2608              	.LVL283:
 2609              	.L228:
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2610              	 .loc 1 900 0
 2611 00a8 4FEA1965 	 lsr r5,r9,#24
 2612 00ac 15F0800F 	 tst r5,#128
 2613 00b0 07D0     	 beq .L229
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2614              	 .loc 1 902 0
 2615 00b2 6D4B     	 ldr r3,.L268
 2616 00b4 D3F80032 	 ldr r3,[r3,#512]
 2617 00b8 0820     	 movs r0,#8
 2618 00ba 9847     	 blx r3
 2619              	.LVL284:
 903:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2620              	 .loc 1 903 0
 2621 00bc 0820     	 movs r0,#8
 2622 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2623              	.LVL285:
 2624              	.L229:
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2625              	 .loc 1 905 0
 2626 00c2 15F0400F 	 tst r5,#64
 2627 00c6 0DD0     	 beq .L230
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2628              	 .loc 1 907 0
 2629 00c8 674B     	 ldr r3,.L268
 2630 00ca 93F8FE21 	 ldrb r2,[r3,#510]
 2631 00ce 42F00402 	 orr r2,r2,#4
 2632 00d2 83F8FE21 	 strb r2,[r3,#510]
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2633              	 .loc 1 908 0
 2634 00d6 D3F80032 	 ldr r3,[r3,#512]
 2635 00da 0020     	 movs r0,#0
 2636 00dc 9847     	 blx r3
 2637              	.LVL286:
 909:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2638              	 .loc 1 909 0
 2639 00de 0020     	 movs r0,#0
 2640 00e0 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2641              	.LVL287:
 2642              	.L230:
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2643              	 .loc 1 911 0
 2644 00e4 14F0100F 	 tst r4,#16
 2645 00e8 64D0     	 beq .L231
 2646              	.LVL288:
 2647              	.LBB44:
 2648              	.LBB45:
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 2649              	 .loc 1 530 0
 2650 00ea 5F48     	 ldr r0,.L268
 2651 00ec D0F8A421 	 ldr r2,[r0,#420]
 2652 00f0 5368     	 ldr r3,[r2,#4]
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 2653              	 .loc 1 531 0
 2654 00f2 43F00103 	 orr r3,r3,#1
 2655              	.LVL289:
 532:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2656              	 .loc 1 532 0
 2657 00f6 5360     	 str r3,[r2,#4]
 2658              	.LVL290:
 2659 00f8 00F5E072 	 add r2,r0,#448
 2660 00fc 00F5EE70 	 add r0,r0,#476
 2661              	.LVL291:
 2662              	.L232:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 2663              	 .loc 1 537 0
 2664 0100 52F8041F 	 ldr r1,[r2,#4]!
 2665              	.LVL292:
 2666 0104 0B68     	 ldr r3,[r1]
 2667              	.LVL293:
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 2668              	 .loc 1 538 0
 2669 0106 43F00063 	 orr r3,r3,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 2670              	 .loc 1 539 0
 2671 010a 6FF35553 	 bfc r3,#21,#1
 2672              	.LVL294:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2673              	 .loc 1 540 0
 2674 010e 0B60     	 str r3,[r1]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2675              	 .loc 1 535 0
 2676 0110 8242     	 cmp r2,r0
 2677 0112 F5D1     	 bne .L232
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 2678              	 .loc 1 545 0
 2679 0114 544A     	 ldr r2,.L268
 2680 0116 D2F8A031 	 ldr r3,[r2,#416]
 2681              	.LVL295:
 2682 011a 4021     	 movs r1,#64
 2683 011c 5962     	 str r1,[r3,#36]
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 2684              	 .loc 1 547 0
 2685 011e 0023     	 movs r3,#0
 2686              	.LVL296:
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 2687              	 .loc 1 548 0
 2688 0120 C0F21003 	 movt r3,16
 2689              	.LVL297:
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 2690              	 .loc 1 549 0
 2691 0124 61F30F03 	 bfi r3,r1,#0,#16
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 2692              	 .loc 1 550 0
 2693 0128 D2F8A021 	 ldr r2,[r2,#416]
 2694 012c 9362     	 str r3,[r2,#40]
 2695              	.LVL298:
 2696 012e 4FF4A075 	 mov r5,#320
 2697 0132 0021     	 movs r1,#0
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2698              	 .loc 1 554 0
 2699 0134 4C4E     	 ldr r6,.L268
 2700              	.LVL299:
 2701              	.L233:
 2702 0136 AA08     	 lsrs r2,r5,#2
 2703 0138 42F48012 	 orr r2,r2,#1048576
 2704 013c 01F14000 	 add r0,r1,#64
 2705 0140 D6F8A031 	 ldr r3,[r6,#416]
 2706              	.LVL300:
 2707 0144 03EB8003 	 add r3,r3,r0,lsl#2
 2708 0148 5A60     	 str r2,[r3,#4]
 2709              	.LVL301:
 2710 014a 0131     	 adds r1,r1,#1
 2711              	.LVL302:
 2712 014c 4035     	 adds r5,r5,#64
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2713              	 .loc 1 552 0
 2714 014e 0629     	 cmp r1,#6
 2715 0150 F1D1     	 bne .L233
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 2716              	 .loc 1 558 0
 2717 0152 1020     	 movs r0,#16
 2718 0154 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 2719              	.LVL303:
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 2720              	 .loc 1 559 0
 2721 0158 0020     	 movs r0,#0
 2722 015a FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 2723              	.LVL304:
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 2724              	 .loc 1 560 0
 2725 015e FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 2726              	.LVL305:
 566:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2727              	 .loc 1 566 0
 2728 0162 414D     	 ldr r5,.L268
 2729 0164 D5F8A431 	 ldr r3,[r5,#420]
 2730 0168 4FF00112 	 mov r2,#65537
 2731              	.LVL306:
 2732 016c DA61     	 str r2,[r3,#28]
 570:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 2733              	 .loc 1 570 0
 2734 016e 0F20     	 movs r0,#15
 2735 0170 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 2736              	.LVL307:
 574:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 2737              	 .loc 1 574 0
 2738 0174 0F20     	 movs r0,#15
 2739 0176 FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 2740              	.LVL308:
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 2741              	 .loc 1 579 0
 2742 017a D5F8A421 	 ldr r2,[r5,#420]
 2743 017e 1368     	 ldr r3,[r2]
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 2744              	 .loc 1 580 0
 2745 0180 6FF30A13 	 bfc r3,#4,#7
 2746              	.LVL309:
 581:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2747              	 .loc 1 581 0
 2748 0184 1360     	 str r3,[r2]
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2749              	 .loc 1 583 0
 2750 0186 7B7B     	 ldrb r3,[r7,#13]
 2751              	.LVL310:
 2752 0188 012B     	 cmp r3,#1
 2753 018a 03D1     	 bne .L234
 586:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2754              	 .loc 1 586 0
 2755 018c D5F8A431 	 ldr r3,[r5,#420]
 2756 0190 0022     	 movs r2,#0
 2757 0192 5A63     	 str r2,[r3,#52]
 2758              	.L234:
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 2759              	 .loc 1 589 0
 2760 0194 344B     	 ldr r3,.L268
 2761 0196 5A68     	 ldr r2,[r3,#4]
 2762 0198 22F01002 	 bic r2,r2,#16
 2763 019c 5A60     	 str r2,[r3,#4]
 590:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2764              	 .loc 1 590 0
 2765 019e 5A68     	 ldr r2,[r3,#4]
 2766 01a0 22F00802 	 bic r2,r2,#8
 2767 01a4 5A60     	 str r2,[r3,#4]
 592:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2768              	 .loc 1 592 0
 2769 01a6 D3F80032 	 ldr r3,[r3,#512]
 2770 01aa 0420     	 movs r0,#4
 2771 01ac 9847     	 blx r3
 2772              	.LVL311:
 595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2773              	 .loc 1 595 0
 2774 01ae 0420     	 movs r0,#4
 2775 01b0 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2776              	.LVL312:
 2777              	.L231:
 2778              	.LBE45:
 2779              	.LBE44:
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2780              	 .loc 1 915 0
 2781 01b4 14F0200F 	 tst r4,#32
 2782 01b8 1AD0     	 beq .L235
 2783              	.LBB46:
 2784              	.LBB47:
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 2785              	 .loc 1 628 0
 2786 01ba 2B4C     	 ldr r4,.L268
 2787 01bc D4F8A821 	 ldr r2,[r4,#424]
 2788 01c0 1368     	 ldr r3,[r2]
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 2789              	 .loc 1 629 0
 2790 01c2 6FF30A03 	 bfc r3,#0,#11
 2791              	.LVL313:
 630:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2792              	 .loc 1 630 0
 2793 01c6 1360     	 str r3,[r2]
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 2794              	 .loc 1 633 0
 2795 01c8 94F8FE31 	 ldrb r3,[r4,#510]
 2796              	.LVL314:
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2797              	 .loc 1 634 0
 2798 01cc 43F00503 	 orr r3,r3,#5
 2799 01d0 84F8FE31 	 strb r3,[r4,#510]
 636:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2800              	 .loc 1 636 0
 2801 01d4 D4F80032 	 ldr r3,[r4,#512]
 2802 01d8 0220     	 movs r0,#2
 2803 01da 9847     	 blx r3
 2804              	.LVL315:
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 2805              	 .loc 1 639 0
 2806 01dc D4F8A021 	 ldr r2,[r4,#416]
 2807 01e0 D368     	 ldr r3,[r2,#12]
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 2808              	 .loc 1 640 0
 2809 01e2 0921     	 movs r1,#9
 2810 01e4 61F38D23 	 bfi r3,r1,#10,#4
 2811              	.LVL316:
 641:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2812              	 .loc 1 641 0
 2813 01e8 D360     	 str r3,[r2,#12]
 644:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2814              	 .loc 1 644 0
 2815 01ea 0B20     	 movs r0,#11
 2816 01ec FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2817              	.LVL317:
 2818              	.L235:
 2819              	.LBE47:
 2820              	.LBE46:
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2821              	 .loc 1 919 0
 2822 01f0 C9F30743 	 ubfx r3,r9,#16,#8
 2823 01f4 0093     	 str r3,[sp]
 2824 01f6 13F0040F 	 tst r3,#4
 2825 01fa 00F0B680 	 beq .L236
 2826              	.LVL318:
 2827              	.LBB48:
 2828              	.LBB49:
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2829              	 .loc 1 759 0
 2830 01fe 1A4B     	 ldr r3,.L268
 2831 0200 D3F8A431 	 ldr r3,[r3,#420]
 2832 0204 9A69     	 ldr r2,[r3,#24]
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2833              	 .loc 1 761 0
 2834 0206 1B69     	 ldr r3,[r3,#16]
 2835 0208 1946     	 mov r1,r3
 2836              	.LVL319:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2837              	 .loc 1 767 0
 2838 020a 1FFA82FA 	 uxth r10,r2
 2839 020e BAF1000F 	 cmp r10,#0
 2840 0212 00F0A780 	 beq .L237
 2841 0216 5346     	 mov r3,r10
 2842 0218 0022     	 movs r2,#0
 2843              	.LVL320:
 2844 021a 0192     	 str r2,[sp,#4]
 2845 021c 1546     	 mov r5,r2
 2846 021e 1646     	 mov r6,r2
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2847              	 .loc 1 774 0
 2848 0220 DFF84480 	 ldr r8,.L268
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2849              	 .loc 1 776 0
 2850 0224 4FF0340B 	 mov fp,#52
 2851 0228 CDF80890 	 str r9,[sp,#8]
 2852 022c 8946     	 mov r9,r1
 2853              	.LVL321:
 2854              	.L248:
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2855              	 .loc 1 771 0
 2856 022e 13F0010F 	 tst r3,#1
 2857 0232 00F08E80 	 beq .L238
 2858              	.LVL322:
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2859              	 .loc 1 774 0
 2860 0236 06F16A03 	 add r3,r6,#106
 2861              	.LVL323:
 2862 023a 58F82320 	 ldr r2,[r8,r3,lsl#2]
 2863 023e 9468     	 ldr r4,[r2,#8]
 2864              	.LVL324:
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2865              	 .loc 1 776 0
 2866 0240 D8F8A431 	 ldr r3,[r8,#420]
 2867 0244 5B6B     	 ldr r3,[r3,#52]
 2868 0246 0BFB06F1 	 mul r1,fp,r6
 2869 024a 18F80110 	 ldrb r1,[r8,r1]
 2870 024e 01F00F01 	 and r1,r1,#15
 2871 0252 CB40     	 lsrs r3,r3,r1
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2872              	 .loc 1 777 0
 2873 0254 DB01     	 lsls r3,r3,#7
 2874 0256 DBB2     	 uxtb r3,r3
 2875 0258 43EA0903 	 orr r3,r3,r9
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 2876              	 .loc 1 775 0
 2877 025c 1C40     	 ands r4,r4,r3
 2878              	.LVL325:
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2879              	 .loc 1 778 0
 2880 025e 7B7B     	 ldrb r3,[r7,#13]
 2881 0260 23B9     	 cbnz r3,.L239
 780:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 2882              	 .loc 1 780 0
 2883 0262 1369     	 ldr r3,[r2,#16]
 2884 0264 0193     	 str r3,[sp,#4]
 2885              	.LVL326:
 2886 0266 3DE0     	 b .L240
 2887              	.L269:
 2888              	 .align 2
 2889              	.L268:
 2890 0268 00000000 	 .word xmc_device
 2891              	.LVL327:
 2892              	.L239:
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2893              	 .loc 1 782 0
 2894 026c 012B     	 cmp r3,#1
 2895 026e 39D1     	 bne .L240
 2896              	.LVL328:
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2897              	 .loc 1 784 0
 2898 0270 14F0800F 	 tst r4,#128
 2899 0274 36D0     	 beq .L240
 2900              	.LVL329:
 2901              	.LBB50:
 2902              	.LBB51:
 2903              	.LBB52:
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 2904              	 .loc 1 266 0
 2905 0276 0BFB06F3 	 mul r3,fp,r6
 2906 027a 08EB0302 	 add r2,r8,r3
 2907 027e 18F80330 	 ldrb r3,[r8,r3]
 2908 0282 03F00F03 	 and r3,r3,#15
 2909 0286 03F17801 	 add r1,r3,#120
 2910 028a 58F821E0 	 ldr lr,[r8,r1,lsl#2]
 2911              	.LVL330:
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 2912              	 .loc 1 267 0
 2913 028e 6A33     	 adds r3,r3,#106
 2914 0290 58F82330 	 ldr r3,[r8,r3,lsl#2]
 2915 0294 9B69     	 ldr r3,[r3,#24]
 2916              	.LVL331:
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 2917              	 .loc 1 269 0
 2918 0296 916A     	 ldr r1,[r2,#40]
 2919 0298 D26A     	 ldr r2,[r2,#44]
 2920              	.LVL332:
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2921              	 .loc 1 270 0
 2922 029a 8A1A     	 subs r2,r1,r2
 2923              	.LVL333:
 2924 029c 0392     	 str r2,[sp,#12]
 2925 029e 18D0     	 beq .L241
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 2926              	 .loc 1 277 0
 2927 02a0 D01C     	 adds r0,r2,#3
 2928 02a2 8008     	 lsrs r0,r0,#2
 2929              	.LVL334:
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2930              	 .loc 1 278 0
 2931 02a4 9BB2     	 uxth r3,r3
 2932              	.LVL335:
 2933 02a6 9842     	 cmp r0,r3
 2934 02a8 02D9     	 bls .L242
 2935              	.LVL336:
 281:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2936              	 .loc 1 281 0
 2937 02aa 9A00     	 lsls r2,r3,#2
 2938              	.LVL337:
 2939 02ac 0392     	 str r2,[sp,#12]
 2940              	.LVL338:
 280:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 2941              	 .loc 1 280 0
 2942 02ae 1846     	 mov r0,r3
 2943              	.LVL339:
 2944              	.L242:
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2945              	 .loc 1 285 0
 2946 02b0 78B1     	 cbz r0,.L241
 2947 02b2 0021     	 movs r1,#0
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 2948              	 .loc 1 287 0
 2949 02b4 0BFB068C 	 mla ip,fp,r6,r8
 2950              	.LVL340:
 2951              	.L243:
 2952 02b8 DCF82420 	 ldr r2,[ip,#36]
 2953 02bc 1268     	 ldr r2,[r2]
 2954 02be CEF80020 	 str r2,[lr]
 288:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2955              	 .loc 1 288 0
 2956 02c2 0131     	 adds r1,r1,#1
 2957              	.LVL341:
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2958              	 .loc 1 285 0
 2959 02c4 DCF82420 	 ldr r2,[ip,#36]
 2960 02c8 0432     	 adds r2,r2,#4
 2961 02ca CCF82420 	 str r2,[ip,#36]
 2962 02ce 8142     	 cmp r1,r0
 2963 02d0 F2D1     	 bne .L243
 2964              	.LVL342:
 2965              	.L241:
 2966              	.LBE52:
 2967              	.LBE51:
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2968              	 .loc 1 788 0
 2969 02d2 0BFB0683 	 mla r3,fp,r6,r8
 2970              	.LVL343:
 2971 02d6 DA6A     	 ldr r2,[r3,#44]
 2972 02d8 0398     	 ldr r0,[sp,#12]
 2973 02da 0244     	 add r2,r2,r0
 2974 02dc DA62     	 str r2,[r3,#44]
 789:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2975              	 .loc 1 789 0
 2976 02de 5A6A     	 ldr r2,[r3,#36]
 2977 02e0 0244     	 add r2,r2,r0
 2978 02e2 5A62     	 str r2,[r3,#36]
 2979              	.LVL344:
 2980              	.L240:
 2981              	.LBE50:
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2982              	 .loc 1 792 0
 2983 02e4 14F0010F 	 tst r4,#1
 2984 02e8 2FD0     	 beq .L244
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2985              	 .loc 1 794 0
 2986 02ea 7B7B     	 ldrb r3,[r7,#13]
 2987 02ec 63B9     	 cbnz r3,.L245
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 2988              	 .loc 1 797 0
 2989 02ee 019B     	 ldr r3,[sp,#4]
 2990 02f0 23F06043 	 bic r3,r3,#-536870912
 2991 02f4 43B9     	 cbnz r3,.L245
 2992              	.LBB53:
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2993              	 .loc 1 799 0
 2994 02f6 0BFB0683 	 mla r3,fp,r6,r8
 2995 02fa 986A     	 ldr r0,[r3,#40]
 2996 02fc DA6A     	 ldr r2,[r3,#44]
 2997 02fe 821A     	 subs r2,r0,r2
 2998              	.LVL345:
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2999              	 .loc 1 800 0
 3000 0300 D862     	 str r0,[r3,#44]
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 3001              	 .loc 1 801 0
 3002 0302 596A     	 ldr r1,[r3,#36]
 3003 0304 0A44     	 add r2,r2,r1
 3004              	.LVL346:
 3005 0306 5A62     	 str r2,[r3,#36]
 3006              	.LVL347:
 3007              	.L245:
 3008              	.LBE53:
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 3009              	 .loc 1 804 0
 3010 0308 0BFB0683 	 mla r3,fp,r6,r8
 3011 030c 1A6B     	 ldr r2,[r3,#48]
 3012 030e 9B6A     	 ldr r3,[r3,#40]
 3013 0310 9A42     	 cmp r2,r3
 3014 0312 16D1     	 bne .L246
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3015              	 .loc 1 806 0
 3016 0314 0BFB0682 	 mla r2,fp,r6,r8
 3017 0318 5368     	 ldr r3,[r2,#4]
 3018 031a 23F00803 	 bic r3,r3,#8
 3019 031e 5360     	 str r3,[r2,#4]
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 3020              	 .loc 1 807 0
 3021 0320 7B7B     	 ldrb r3,[r7,#13]
 3022 0322 012B     	 cmp r3,#1
 3023 0324 06D1     	 bne .L247
 811:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 3024              	 .loc 1 811 0
 3025 0326 D8F8A411 	 ldr r1,[r8,#420]
 3026 032a 4A6B     	 ldr r2,[r1,#52]
 3027 032c B340     	 lsls r3,r3,r6
 3028 032e 22EA0303 	 bic r3,r2,r3
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 3029              	 .loc 1 810 0
 3030 0332 4B63     	 str r3,[r1,#52]
 3031              	.L247:
 813:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3032              	 .loc 1 813 0
 3033 0334 D8F80432 	 ldr r3,[r8,#516]
 3034 0338 45F08000 	 orr r0,r5,#128
 3035 033c 0221     	 movs r1,#2
 3036 033e 9847     	 blx r3
 3037              	.LVL348:
 3038 0340 03E0     	 b .L244
 3039              	.L246:
 818:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3040              	 .loc 1 818 0
 3041 0342 0BFB0680 	 mla r0,fp,r6,r8
 3042 0346 FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 3043              	.LVL349:
 3044              	.L244:
 3045              	.LBB54:
 3046              	.LBB55:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3047              	 .loc 1 1023 0
 3048 034a 6A36     	 adds r6,r6,#106
 3049              	.LVL350:
 3050 034c 58F82630 	 ldr r3,[r8,r6,lsl#2]
 3051 0350 9C60     	 str r4,[r3,#8]
 3052              	.LVL351:
 3053              	.L238:
 3054              	.LBE55:
 3055              	.LBE54:
 825:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3056              	 .loc 1 825 0
 3057 0352 0135     	 adds r5,r5,#1
 3058              	.LVL352:
 3059 0354 EDB2     	 uxtb r5,r5
 3060              	.LVL353:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3061              	 .loc 1 767 0
 3062 0356 2E46     	 mov r6,r5
 3063 0358 5AFA05F3 	 asrs r3,r10,r5
 3064 035c 7FF467AF 	 bne .L248
 3065 0360 DDF80890 	 ldr r9,[sp,#8]
 3066              	.LVL354:
 3067              	.L237:
 827:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3068              	 .loc 1 827 0
 3069 0364 0E20     	 movs r0,#14
 3070 0366 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 3071              	.LVL355:
 3072              	.L236:
 3073              	.LBE49:
 3074              	.LBE48:
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3075              	 .loc 1 923 0
 3076 036a 009B     	 ldr r3,[sp]
 3077 036c 13F0080F 	 tst r3,#8
 3078 0370 00F09880 	 beq .L249
 3079              	.LVL356:
 3080              	.LBB56:
 3081              	.LBB57:
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   
 3082              	 .loc 1 667 0
 3083 0374 594B     	 ldr r3,.L270
 3084 0376 D3F8A421 	 ldr r2,[r3,#420]
 3085 037a 9369     	 ldr r3,[r2,#24]
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   
 3086              	 .loc 1 669 0
 3087 037c D169     	 ldr r1,[r2,#28]
 3088              	.LVL357:
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   
 3089              	 .loc 1 671 0
 3090 037e 5269     	 ldr r2,[r2,#20]
 3091 0380 0092     	 str r2,[sp]
 3092              	.LVL358:
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 3093              	 .loc 1 673 0
 3094 0382 C3F30F43 	 ubfx r3,r3,#16,#16
 3095 0386 03EA1143 	 and r3,r3,r1,lsr#16
 3096              	.LVL359:
 675:../Libraries/XMCLib/src/xmc_usbd.c ****  
 3097              	 .loc 1 675 0
 3098 038a 0022     	 movs r2,#0
 3099              	.LVL360:
 3100 038c 0192     	 str r2,[sp,#4]
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3101              	 .loc 1 677 0
 3102 038e 9846     	 mov r8,r3
 3103 0390 002B     	 cmp r3,#0
 3104 0392 00F08480 	 beq .L250
 3105 0396 1446     	 mov r4,r2
 3106 0398 1546     	 mov r5,r2
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3107              	 .loc 1 685 0
 3108 039a 504E     	 ldr r6,.L270
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 3109              	 .loc 1 718 0
 3110 039c 4FF0340B 	 mov fp,#52
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3111              	 .loc 1 722 0
 3112 03a0 CDF80890 	 str r9,[sp,#8]
 3113 03a4 BA46     	 mov r10,r7
 3114              	.LVL361:
 3115              	.L259:
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3116              	 .loc 1 681 0
 3117 03a6 13F0010F 	 tst r3,#1
 3118 03aa 70D0     	 beq .L251
 3119              	.LVL362:
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3120              	 .loc 1 685 0
 3121 03ac 06EB8503 	 add r3,r6,r5,lsl#2
 3122              	.LVL363:
 3123 03b0 D3F8C431 	 ldr r3,[r3,#452]
 3124 03b4 9F68     	 ldr r7,[r3,#8]
 3125 03b6 009A     	 ldr r2,[sp]
 3126              	.LVL364:
 3127 03b8 1740     	 ands r7,r7,r2
 3128              	.LVL365:
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3129              	 .loc 1 686 0
 3130 03ba 9AF80D20 	 ldrb r2,[r10,#13]
 3131 03be 0AB9     	 cbnz r2,.L252
 688:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 3132              	 .loc 1 688 0
 3133 03c0 1B69     	 ldr r3,[r3,#16]
 3134              	.LVL366:
 3135 03c2 0193     	 str r3,[sp,#4]
 3136              	.L252:
 3137              	.LVL367:
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3138              	 .loc 1 691 0
 3139 03c4 5FFA87F9 	 uxtb r9,r7
 3140 03c8 19F0080F 	 tst r9,#8
 3141 03cc 2CD0     	 beq .L253
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3142              	 .loc 1 694 0
 3143 03ce 0BFB0563 	 mla r3,fp,r5,r6
 3144              	.LVL368:
 3145 03d2 1A79     	 ldrb r2,[r3,#4]
 3146 03d4 6FF34512 	 bfc r2,#5,#1
 3147 03d8 1A71     	 strb r2,[r3,#4]
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 3148              	 .loc 1 695 0
 3149 03da 9AF80D30 	 ldrb r3,[r10,#13]
 3150 03de 43B9     	 cbnz r3,.L254
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 3151              	 .loc 1 698 0
 3152 03e0 0BFB0562 	 mla r2,fp,r5,r6
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3153              	 .loc 1 699 0
 3154 03e4 019B     	 ldr r3,[sp,#4]
 3155              	.LVL369:
 3156 03e6 C3F34173 	 ubfx r3,r3,#29,#2
 3157              	.LVL370:
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 3158              	 .loc 1 698 0
 3159 03ea DB00     	 lsls r3,r3,#3
 3160 03ec C3F11803 	 rsb r3,r3,#24
 3161 03f0 1361     	 str r3,[r2,#16]
 3162              	.L254:
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 3163              	 .loc 1 701 0
 3164 03f2 9AF80D30 	 ldrb r3,[r10,#13]
 3165 03f6 012B     	 cmp r3,#1
 3166 03f8 05D1     	 bne .L255
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 3167              	 .loc 1 703 0
 3168 03fa 0BFB0563 	 mla r3,fp,r5,r6
 3169 03fe D96A     	 ldr r1,[r3,#44]
 3170 0400 1A69     	 ldr r2,[r3,#16]
 3171 0402 0A44     	 add r2,r2,r1
 3172 0404 1A61     	 str r2,[r3,#16]
 3173              	.L255:
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 3174              	 .loc 1 705 0
 3175 0406 0BFB0562 	 mla r2,fp,r5,r6
 3176 040a 5368     	 ldr r3,[r2,#4]
 3177 040c 23F01003 	 bic r3,r3,#16
 3178 0410 5360     	 str r3,[r2,#4]
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 3179              	 .loc 1 706 0
 3180 0412 D6F80432 	 ldr r3,[r6,#516]
 3181 0416 0020     	 movs r0,#0
 3182 0418 0146     	 mov r1,r0
 3183 041a 9847     	 blx r3
 3184              	.LVL371:
 3185              	.LBB58:
 3186              	.LBB59:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3187              	 .loc 1 1033 0
 3188 041c 06EB8503 	 add r3,r6,r5,lsl#2
 3189 0420 D3F8C431 	 ldr r3,[r3,#452]
 3190 0424 0822     	 movs r2,#8
 3191 0426 9A60     	 str r2,[r3,#8]
 3192              	.LVL372:
 3193              	.L253:
 3194              	.LBE59:
 3195              	.LBE58:
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3196              	 .loc 1 710 0
 3197 0428 19F0010F 	 tst r9,#1
 3198 042c 2AD0     	 beq .L256
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 3199              	 .loc 1 712 0
 3200 042e 9AF80D30 	 ldrb r3,[r10,#13]
 3201              	.LVL373:
 3202 0432 7BB9     	 cbnz r3,.L257
 3203              	.LBB60:
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 3204              	 .loc 1 714 0
 3205 0434 0BFB0562 	 mla r2,fp,r5,r6
 3206 0438 D16A     	 ldr r1,[r2,#44]
 3207 043a 936A     	 ldr r3,[r2,#40]
 3208 043c C1EB030C 	 rsb ip,r1,r3
 3209 0440 019B     	 ldr r3,[sp,#4]
 3210              	.LVL374:
 3211 0442 C3F3120E 	 ubfx lr,r3,#0,#19
 3212 0446 CEEB0C03 	 rsb r3,lr,ip
 3213              	.LVL375:
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 3214              	 .loc 1 715 0
 3215 044a 1944     	 add r1,r1,r3
 3216 044c D162     	 str r1,[r2,#44]
 716:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 3217              	 .loc 1 716 0
 3218 044e 516A     	 ldr r1,[r2,#36]
 3219 0450 0B44     	 add r3,r3,r1
 3220              	.LVL376:
 3221 0452 5362     	 str r3,[r2,#36]
 3222              	.LVL377:
 3223              	.L257:
 3224              	.LBE60:
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 3225              	 .loc 1 718 0
 3226 0454 0BFB0563 	 mla r3,fp,r5,r6
 3227 0458 1A6B     	 ldr r2,[r3,#48]
 3228 045a 9B6A     	 ldr r3,[r3,#40]
 3229 045c 9A42     	 cmp r2,r3
 3230 045e 0DD1     	 bne .L258
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 3231              	 .loc 1 720 0
 3232 0460 0BFB0563 	 mla r3,fp,r5,r6
 3233 0464 DA6A     	 ldr r2,[r3,#44]
 3234 0466 1A61     	 str r2,[r3,#16]
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 3235              	 .loc 1 721 0
 3236 0468 5A68     	 ldr r2,[r3,#4]
 3237 046a 22F01002 	 bic r2,r2,#16
 3238 046e 5A60     	 str r2,[r3,#4]
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3239              	 .loc 1 722 0
 3240 0470 D6F80432 	 ldr r3,[r6,#516]
 3241 0474 2046     	 mov r0,r4
 3242 0476 0121     	 movs r1,#1
 3243 0478 9847     	 blx r3
 3244              	.LVL378:
 3245 047a 03E0     	 b .L256
 3246              	.L258:
 726:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3247              	 .loc 1 726 0
 3248 047c 0BFB0560 	 mla r0,fp,r5,r6
 3249 0480 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 3250              	.LVL379:
 3251              	.L256:
 3252              	.LBB61:
 3253              	.LBB62:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3254              	 .loc 1 1033 0
 3255 0484 06EB8505 	 add r5,r6,r5,lsl#2
 3256              	.LVL380:
 3257 0488 D5F8C431 	 ldr r3,[r5,#452]
 3258              	.LVL381:
 3259 048c 9F60     	 str r7,[r3,#8]
 3260              	.LVL382:
 3261              	.L251:
 3262              	.LBE62:
 3263              	.LBE61:
 733:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3264              	 .loc 1 733 0
 3265 048e 0134     	 adds r4,r4,#1
 3266              	.LVL383:
 3267 0490 E4B2     	 uxtb r4,r4
 3268              	.LVL384:
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3269              	 .loc 1 677 0
 3270 0492 2546     	 mov r5,r4
 3271 0494 58FA04F3 	 asrs r3,r8,r4
 3272 0498 85D1     	 bne .L259
 3273 049a DDF80890 	 ldr r9,[sp,#8]
 3274              	.LVL385:
 3275              	.L250:
 737:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3276              	 .loc 1 737 0
 3277 049e 0D20     	 movs r0,#13
 3278 04a0 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 3279              	.LVL386:
 3280              	.L249:
 3281              	.LBE57:
 3282              	.LBE56:
 927:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3283              	 .loc 1 927 0
 3284 04a4 19F0040F 	 tst r9,#4
 3285 04a8 15D0     	 beq .L221
 3286              	.LBB63:
 3287              	.LBB64:
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 3288              	 .loc 1 606 0
 3289 04aa 0C4B     	 ldr r3,.L270
 3290 04ac D3F8A031 	 ldr r3,[r3,#416]
 3291 04b0 5C68     	 ldr r4,[r3,#4]
 3292              	.LVL387:
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3293              	 .loc 1 607 0
 3294 04b2 14F0040F 	 tst r4,#4
 3295 04b6 0AD0     	 beq .L261
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 3296              	 .loc 1 609 0
 3297 04b8 084B     	 ldr r3,.L270
 3298 04ba 93F8FE21 	 ldrb r2,[r3,#510]
 3299 04be 6FF38202 	 bfc r2,#2,#1
 3300 04c2 83F8FE21 	 strb r2,[r3,#510]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3301              	 .loc 1 610 0
 3302 04c6 D3F80032 	 ldr r3,[r3,#512]
 3303 04ca 0120     	 movs r0,#1
 3304 04cc 9847     	 blx r3
 3305              	.LVL388:
 3306              	.L261:
 3307              	.LBB65:
 3308              	.LBB66:
1013:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3309              	 .loc 1 1013 0
 3310 04ce 034B     	 ldr r3,.L270
 3311 04d0 D3F8A031 	 ldr r3,[r3,#416]
 3312 04d4 5C60     	 str r4,[r3,#4]
 3313              	.LVL389:
 3314              	.L221:
 3315              	.LBE66:
 3316              	.LBE65:
 3317              	.LBE64:
 3318              	.LBE63:
 932:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3319              	 .loc 1 932 0
 3320 04d6 05B0     	 add sp,sp,#20
 3321              	.LCFI26:
 3322              	 .cfi_def_cfa_offset 36
 3323              	 
 3324 04d8 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 3325              	.L271:
 3326              	 .align 2
 3327              	.L270:
 3328 04dc 00000000 	 .word xmc_device
 3329              	 .cfi_endproc
 3330              	.LFE184:
 3332              	 .global Driver_USBD0
 3333              	 .comm usbd_init,4,4
 3334              	 .comm xmc_device,520,4
 3335              	 .global XMC_USBD_EP_IN_BUFFERSIZE
 3336              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
 3337              	 .section .rodata.Driver_USBD0,"a",%progbits
 3338              	 .align 2
 3341              	Driver_USBD0:
 3342 0000 00000000 	 .word XMC_USBD_GetCapabilities
 3343 0004 00000000 	 .word XMC_USBD_Init
 3344 0008 00000000 	 .word XMC_USBD_Uninitialize
 3345 000c 00000000 	 .word XMC_USBD_DeviceConnect
 3346 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
 3347 0014 00000000 	 .word XMC_USBD_DeviceGetState
 3348 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
 3349 001c 00000000 	 .word XMC_USBD_EndpointConfigure
 3350 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
 3351 0024 00000000 	 .word XMC_USBD_EndpointStall
 3352 0028 00000000 	 .word XMC_USBD_EndpointReadStart
 3353 002c 00000000 	 .word XMC_USBD_EndpointRead
 3354 0030 00000000 	 .word XMC_USBD_EndpointWrite
 3355 0034 00000000 	 .word XMC_USBD_EndpointAbort
 3356 0038 00000000 	 .word XMC_USBD_GetFrameNumber
 3357 003c 00000000 	 .word XMC_USBD_IsEnumDone
 3358              	 .section USB_RAM,"aw",%progbits
 3359              	 .align 2
 3360              	 .set .LANCHOR0,.+0
 3363              	XMC_USBD_EP_IN_BUFFER:
 3364 0000 00000000 	 .space 1792
 3364      00000000 
 3364      00000000 
 3364      00000000 
 3364      00000000 
 3367              	XMC_USBD_EP_OUT_BUFFER:
 3368 0700 00000000 	 .space 1792
 3368      00000000 
 3368      00000000 
 3368      00000000 
 3368      00000000 
 3369              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
 3370              	 .align 2
 3371              	 .set .LANCHOR2,.+0
 3374              	XMC_USBD_EP_OUT_BUFFERSIZE:
 3375 0000 00000000 	 .space 28
 3375      00000000 
 3375      00000000 
 3375      00000000 
 3375      00000000 
 3376              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
 3377              	 .align 2
 3378              	 .set .LANCHOR1,.+0
 3381              	XMC_USBD_EP_IN_BUFFERSIZE:
 3382 0000 00000000 	 .space 28
 3382      00000000 
 3382      00000000 
 3382      00000000 
 3382      00000000 
 3383              	 .text
 3384              	.Letext0:
 3385              	 .file 2 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3386              	 .file 3 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3387              	 .file 4 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3388              	 .file 5 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 3389              	 .file 6 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc4_scu.h"
 3390              	 .file 7 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc_usbd.h"
 3391              	 .file 8 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include/core_cm4.h"
 3392              	 .file 9 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:19     .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:23     .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:139    .text.XMC_USBD_lReadFifo:0000008c $d
                            *COM*:00000208 xmc_device
    {standard input}:144    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:148    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:214    .text.XMC_USBD_lFlushTXFifo:00000050 $d
    {standard input}:219    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:223    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:282    .text.XMC_USBD_lFlushRXFifo:00000040 $d
    {standard input}:287    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:291    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:407    .text.XMC_USBD_lStartReadXfer:000000a4 $d
                            *COM*:00000004 usbd_init
    {standard input}:413    .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:417    .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:555    .text.XMC_USBD_lStartWriteXfer:000000d0 $d
    {standard input}:561    .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:566    .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:585    .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:590    .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:612    .text.XMC_USBD_DeviceConnect:00000014 $d
    {standard input}:617    .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:622    .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:644    .text.XMC_USBD_DeviceDisconnect:00000014 $d
    {standard input}:649    .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:654    .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:735    .text.XMC_USBD_EndpointReadStart:00000054 $d
    {standard input}:740    .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:745    .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:772    .text.XMC_USBD_DeviceSetAddress:00000014 $d
    {standard input}:777    .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:782    .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:904    .text.XMC_USBD_EndpointStall:000000b8 $d
    {standard input}:909    .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:914    .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:987    .text.XMC_USBD_EndpointAbort:00000064 $d
    {standard input}:992    .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:997    .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:1164   .text.XMC_USBD_EndpointUnconfigure:00000110 $d
    {standard input}:1170   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:1175   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:1194   .text.XMC_USBD_GetFrameNumber:00000010 $d
    {standard input}:1199   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:1204   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:1224   .text.XMC_USBD_IsEnumDone:00000014 $d
    {standard input}:1229   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:1234   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:1265   .text.XMC_USBD_Uninitialize:00000020 $d
    {standard input}:1270   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:1275   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:1690   .text.XMC_USBD_EndpointConfigure:00000298 $d
    {standard input}:1698   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:1703   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:1765   .text.XMC_USBD_EndpointRead:00000044 $d
    {standard input}:1770   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:1775   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:1864   .text.XMC_USBD_EndpointWrite:00000064 $d
    {standard input}:1869   .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:1874   .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:1947   .text.XMC_USBD_lDeviceActive:00000040 $d
    {standard input}:1952   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:1957   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:2000   .text.XMC_USBD_DeviceGetState:00000030 $d
    {standard input}:2005   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2010   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2032   .text.XMC_USBD_Enable:00000010 $d
    {standard input}:2037   .text.XMC_USBD_Init:00000000 $t
    {standard input}:2042   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:2228   .text.XMC_USBD_Init:00000108 $d
    {standard input}:2239   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2244   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2266   .text.XMC_USBD_Disable:00000010 $d
    {standard input}:2271   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2276   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:2292   .text.XMC_USBD_ClearEvent:0000000a $d
    {standard input}:2306   .text.XMC_USBD_ClearEvent:00000018 $t
    {standard input}:2360   .text.XMC_USBD_ClearEvent:00000054 $d
    {standard input}:2365   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2370   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2388   .text.XMC_USBD_ClearEventINEP:0000000c $d
    {standard input}:2393   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2398   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:2416   .text.XMC_USBD_ClearEventOUTEP:00000010 $d
    {standard input}:2421   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2426   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2445   .text.XMC_USBD_EnableEventOUTEP:00000010 $d
    {standard input}:2450   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2455   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2474   .text.XMC_USBD_EnableEventINEP:00000010 $d
    {standard input}:2479   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2484   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2890   .text.XMC_USBD_IRQHandler:00000268 $d
    {standard input}:2894   .text.XMC_USBD_IRQHandler:0000026c $t
    {standard input}:3328   .text.XMC_USBD_IRQHandler:000004dc $d
    {standard input}:3341   .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:3381   .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:3374   .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:3338   .rodata.Driver_USBD0:00000000 $d
    {standard input}:3359   USB_RAM:00000000 $d
    {standard input}:3363   USB_RAM:00000000 XMC_USBD_EP_IN_BUFFER
    {standard input}:3367   USB_RAM:00000700 XMC_USBD_EP_OUT_BUFFER
    {standard input}:3370   .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:3377   .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3466fc6a3db32493c997d085de4c7a28
                           .group:00000000 wm4.stddef.h.39.c744ceb84abf2f8351653f0e2622da1c
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4002528de975c0fcce6c551c15d87b8c
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.61.ba2d082e12f51240746cffdd60d42b81
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.48aa5dfcc4adf36b323cf9dbe32c793a
                           .group:00000000 wm4.core_cm4.h.174.824e0532337e90525b645435b961cc25
                           .group:00000000 wm4.mpu_armv7.h.32.7da498ea6f18d3b74a42202d7c1d394e
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1460.8860499b404961ffcfbb8d1fefcb2146
                           .group:00000000 wm4.xmc_common.h.92.bbcf261068c7c74d7033b80d0dbf155c
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.fe81d5186f74ee22c982a1a79f340ee8
                           .group:00000000 wm4.xmc_usbd_regs.h.80.57c6c85fa0ecbc9f8327ce445aebb9bc
                           .group:00000000 wm4.xmc4_scu.h.83.0449f5880ac071460ec1a8072311ea51
                           .group:00000000 wm4.xmc_usbd.h.122.ce57a9e6a9da48ee33ece02813c49593

UNDEFINED SYMBOLS
memset
memcpy
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_POWER_DisableUsb
