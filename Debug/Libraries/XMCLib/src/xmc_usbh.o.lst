   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .eabi_attribute 28,1
   5              	 .fpu fpv4-sp-d16
   6              	 .eabi_attribute 23,1
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_usbh.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_lStartTransfer,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_lStartTransfer:
  24              	.LFB181:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_usbh.c"
   1:../Libraries/XMCLib/src/xmc_usbh.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbh.c ****  * @file xmc_usbh.c
   3:../Libraries/XMCLib/src/xmc_usbh.c ****  * @date 2016-06-30
   4:../Libraries/XMCLib/src/xmc_usbh.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbh.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbh.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMClib v2.1.18 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbh.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbh.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbh.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usbh.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usbh.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbh.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usbh.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usbh.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usbh.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usbh.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usbh.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usbh.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usbh.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usbh.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usbh.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usbh.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usbh.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usbh.c ****  * (To improve the quality of the software, users are encouraged to share modifications, enhancemen
  33:../Libraries/XMCLib/src/xmc_usbh.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  35:../Libraries/XMCLib/src/xmc_usbh.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  37:../Libraries/XMCLib/src/xmc_usbh.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_usbh.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  40:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2016-06-30:
  41:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2016-09-01:
  43:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Removed Keil specific exclusion<br>
  44:../Libraries/XMCLib/src/xmc_usbh.c ****  *      
  45:../Libraries/XMCLib/src/xmc_usbh.c ****  * @endcond 
  46:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  47:../Libraries/XMCLib/src/xmc_usbh.c ****  */
  48:../Libraries/XMCLib/src/xmc_usbh.c **** 
  49:../Libraries/XMCLib/src/xmc_usbh.c **** #include <stdint.h>
  50:../Libraries/XMCLib/src/xmc_usbh.c **** #include <string.h>
  51:../Libraries/XMCLib/src/xmc_usbh.c **** 
  52:../Libraries/XMCLib/src/xmc_usbh.c **** #include "xmc_usbh.h"
  53:../Libraries/XMCLib/src/xmc_usbh.c **** 
  54:../Libraries/XMCLib/src/xmc_usbh.c **** #if((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC43) || (UC_SERIES == XMC47) ||
  55:../Libraries/XMCLib/src/xmc_usbh.c **** 
  56:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function provides transfer result*/
  57:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl);
  58:../Libraries/XMCLib/src/xmc_usbh.c **** /*Updates the power state of the driver*/
  59:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state);
  60:../Libraries/XMCLib/src/xmc_usbh.c **** 
  61:../Libraries/XMCLib/src/xmc_usbh.c **** /*********************************************************** USBH Driver **************************
  62:../Libraries/XMCLib/src/xmc_usbh.c **** 
  63:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro to represent USB host driver version*/
  64:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_DRV_VERSION ((uint16_t)((uint16_t)XMC_LIB_MINOR_VERSION << 8U)|XMC_LIB_PATCH_VERSI
  65:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro used to gate PHY clock and AHB clock*/
  66:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_PHY_CLK_STOP  (0x03U)
  67:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro used to ungate PHY clock and AHB clock*/
  68:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_PHY_CLK_UNGATE  (0x100U)
  69:../Libraries/XMCLib/src/xmc_usbh.c **** 
  70:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver Version */
  71:../Libraries/XMCLib/src/xmc_usbh.c **** static const XMC_USBH_DRIVER_VERSION_t xmc_usbh_driver_version = { XMC_USBH_API_VERSION, XMC_USBH_D
  72:../Libraries/XMCLib/src/xmc_usbh.c **** 
  73:../Libraries/XMCLib/src/xmc_usbh.c **** /*Variables to hold selected VBUS port pin*/
  74:../Libraries/XMCLib/src/xmc_usbh.c **** XMC_GPIO_PORT_t * VBUS_port = XMC_GPIO_PORT3;
  75:../Libraries/XMCLib/src/xmc_usbh.c **** uint32_t VBUS_pin = 2U;
  76:../Libraries/XMCLib/src/xmc_usbh.c **** 
  77:../Libraries/XMCLib/src/xmc_usbh.c **** /*Array to track nack events on each pipe*/
  78:../Libraries/XMCLib/src/xmc_usbh.c **** bool is_nack[USBH0_MAX_PIPE_NUM];
  79:../Libraries/XMCLib/src/xmc_usbh.c **** 
  80:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver Capabilities */
  81:../Libraries/XMCLib/src/xmc_usbh.c **** static const XMC_USBH_CAPABILITIES_t xmc_usbh_driver_capabilities = {
  82:../Libraries/XMCLib/src/xmc_usbh.c ****   0x0001U,      /* Root HUB available Ports Mask */
  83:../Libraries/XMCLib/src/xmc_usbh.c ****   0U,           /* Automatic SPLIT packet handling */
  84:../Libraries/XMCLib/src/xmc_usbh.c ****   1U,           /* Signal Connect event */
  85:../Libraries/XMCLib/src/xmc_usbh.c ****   1U,           /* Signal Disconnect event */
  86:../Libraries/XMCLib/src/xmc_usbh.c ****   0U            /* Signal Overcurrent event */
  87:../Libraries/XMCLib/src/xmc_usbh.c **** };
  88:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver state and registers */
  89:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH0_DEVICE_t XMC_USBH0_device/* __attribute__((section ("RW_IRAM1")))*/ = {
  90:../Libraries/XMCLib/src/xmc_usbh.c ****    (USB0_GLOBAL_TypeDef *)(USB0_BASE),    /** Global register interface            */
  91:../Libraries/XMCLib/src/xmc_usbh.c ****    ((USB0_CH_TypeDef *)(USB0_CH0_BASE)),  /** Host channel interface               */
  92:../Libraries/XMCLib/src/xmc_usbh.c ****    0,                                     /** Port event callback; set during init */
  93:../Libraries/XMCLib/src/xmc_usbh.c ****    0,                                     /** Pipe event callback; set during init */
  94:../Libraries/XMCLib/src/xmc_usbh.c ****    false,                                 /** init status */
  95:../Libraries/XMCLib/src/xmc_usbh.c ****    XMC_USBH_POWER_OFF,                    /** USB Power status */
  96:../Libraries/XMCLib/src/xmc_usbh.c ****    false                                  /** Port reset state */
  97:../Libraries/XMCLib/src/xmc_usbh.c **** };
  98:../Libraries/XMCLib/src/xmc_usbh.c **** 
  99:../Libraries/XMCLib/src/xmc_usbh.c **** /*USB host pipe information. The array stores information related to packet id, data toggle,
 100:../Libraries/XMCLib/src/xmc_usbh.c ****  * pending data transfer information, periodic transfer interval, received data size etc for each
 101:../Libraries/XMCLib/src/xmc_usbh.c ****  * pipe.*/
 102:../Libraries/XMCLib/src/xmc_usbh.c **** volatile XMC_USBH0_pipe_t pipe[USBH0_MAX_PIPE_NUM];
 103:../Libraries/XMCLib/src/xmc_usbh.c **** 
 104:../Libraries/XMCLib/src/xmc_usbh.c **** /* FIFO sizes in bytes (total available memory for FIFOs is 1.25 kB) */
 105:../Libraries/XMCLib/src/xmc_usbh.c **** #define RX_FIFO_SIZE           (1128U)   /* RxFIFO size */
 106:../Libraries/XMCLib/src/xmc_usbh.c **** #define TX_FIFO_SIZE_NON_PERI  (64U)     /* Non-periodic Tx FIFO size */
 107:../Libraries/XMCLib/src/xmc_usbh.c **** #define TX_FIFO_SIZE_PERI      (1024U)   /* Periodic Tx FIFO size */
 108:../Libraries/XMCLib/src/xmc_usbh.c **** 
 109:../Libraries/XMCLib/src/xmc_usbh.c **** /*Stores data FIFO pointer for each pipe*/
 110:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t *XMC_USBH0_dfifo_ptr[USBH0_MAX_PIPE_NUM];
 111:../Libraries/XMCLib/src/xmc_usbh.c **** 
 112:../Libraries/XMCLib/src/xmc_usbh.c **** /* Local functions */
 113:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 114:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   enable Enable (XMC_USBH_CLOCK_GATING_ENABLE) or disable(XMC_USBH_CLOCK_GATING_DISABLE) 
 115:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  None
 116:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 117:../Libraries/XMCLib/src/xmc_usbh.c ****  * Enable/disable clock gating depending if feature is supported.
 118:../Libraries/XMCLib/src/xmc_usbh.c **** */
 119:../Libraries/XMCLib/src/xmc_usbh.c **** __INLINE static void XMC_lClockGating(uint8_t enable)
 120:../Libraries/XMCLib/src/xmc_usbh.c **** {
 121:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined(CLOCK_GATING_SUPPORTED)
 122:../Libraries/XMCLib/src/xmc_usbh.c **** if (enable == XMC_USBH_CLOCK_GATING_ENABLE)
 123:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 124:../Libraries/XMCLib/src/xmc_usbh.c ****    if (enable == XMC_USBH_CLOCK_GATING_DISABLE)
 125:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 126:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 128:../Libraries/XMCLib/src/xmc_usbh.c **** }
 129:../Libraries/XMCLib/src/xmc_usbh.c **** 
 130:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 131:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_ch Pointer to Channel
 132:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  None
 133:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 134:../Libraries/XMCLib/src/xmc_usbh.c ****  * Triggers halt of a channel.
 135:../Libraries/XMCLib/src/xmc_usbh.c **** */
 136:../Libraries/XMCLib/src/xmc_usbh.c **** __INLINE static void XMC_lTriggerHaltChannel(USB0_CH_TypeDef *ptr_ch)
 137:../Libraries/XMCLib/src/xmc_usbh.c **** {
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk; /* Enable halt interrupt */
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 140:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 141:../Libraries/XMCLib/src/xmc_usbh.c **** }
 142:../Libraries/XMCLib/src/xmc_usbh.c **** 
 143:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 144:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_pipe Pointer to Pipe
 145:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_ch   Pointer to Channel
 146:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  bool \n
 147:../Libraries/XMCLib/src/xmc_usbh.c ****  *          true = success,\n
 148:../Libraries/XMCLib/src/xmc_usbh.c ****  *          false = fail
 149:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 150:../Libraries/XMCLib/src/xmc_usbh.c ****  * Start transfer on Pipe. The function uses transfer complete interrupts to transfer data more tha
 151:../Libraries/XMCLib/src/xmc_usbh.c ****  * packet size. It takes care of updating data toggle information in subsequent packets related to 
 152:../Libraries/XMCLib/src/xmc_usbh.c **** */
 153:../Libraries/XMCLib/src/xmc_usbh.c **** static bool XMC_lStartTransfer (XMC_USBH0_pipe_t *ptr_pipe, USB0_CH_TypeDef *ptr_ch) {
  26              	 .loc 1 153 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	.LVL0:
  31 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 24
  34              	 .cfi_offset 4,-24
  35              	 .cfi_offset 5,-20
  36              	 .cfi_offset 6,-16
  37              	 .cfi_offset 7,-12
  38              	 .cfi_offset 8,-8
  39              	 .cfi_offset 14,-4
  40              	.LVL1:
 154:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcchar;
 155:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hctsiz;
 156:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcintmsk;
 157:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_transfer;
 158:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_fifo;
 159:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_queue;
 160:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  txsts = 0U;
 161:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  pckt_num;
 162:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  max_pckt_size;
 163:../Libraries/XMCLib/src/xmc_usbh.c ****   uint8_t   *ptr_src = ptr_pipe->data;
  41              	 .loc 1 163 0
  42 0004 4368     	 ldr r3,[r0,#4]
  43              	.LVL2:
 164:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  *ptr_dest = NULL;
 165:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t  cnt;
 166:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_index;
 167:../Libraries/XMCLib/src/xmc_usbh.c ****   bool status;
 168:../Libraries/XMCLib/src/xmc_usbh.c **** 
 169:../Libraries/XMCLib/src/xmc_usbh.c ****   if (!(XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk))
  44              	 .loc 1 169 0
  45 0006 5A4A     	 ldr r2,.L30
  46 0008 1668     	 ldr r6,[r2]
  47 000a D6F84024 	 ldr r2,[r6,#1088]
  48 000e 12F0010F 	 tst r2,#1
  49 0012 00F0A280 	 beq .L24
 170:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 171:../Libraries/XMCLib/src/xmc_usbh.c ****     status = false;
 172:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 173:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 174:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 175:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save channel characteristic register to local variable */
 176:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar   = ptr_ch->HCCHAR;
  50              	 .loc 1 176 0
  51 0016 0A68     	 ldr r2,[r1]
  52              	.LVL3:
 177:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save transfer size register to local variable */
 178:../Libraries/XMCLib/src/xmc_usbh.c ****     hctsiz   = ptr_ch->HCTSIZ_BUFFERMODE;
  53              	 .loc 1 178 0
  54 0018 0D69     	 ldr r5,[r1,#16]
  55              	.LVL4:
 179:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk = 0U;
 180:../Libraries/XMCLib/src/xmc_usbh.c ****     cnt      = 0U;
 181:../Libraries/XMCLib/src/xmc_usbh.c **** 
 182:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare transfer */
 183:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Reset EPDir (transfer direction = output) and enable channel */
 184:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar &= (uint32_t)(~(uint32_t)(USB_CH_HCCHAR_EPDir_Msk | USB_CH_HCCHAR_ChDis_Msk));
  56              	 .loc 1 184 0
  57 001a 22F08042 	 bic r2,r2,#1073741824
  58              	.LVL5:
  59 001e 22F40042 	 bic r2,r2,#32768
  60              	.LVL6:
 185:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;
  61              	 .loc 1 185 0
  62 0022 42F00047 	 orr r7,r2,#-2147483648
  63              	.LVL7:
 186:../Libraries/XMCLib/src/xmc_usbh.c **** 
 187:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Enable default interrupts needed for all transfers */
 188:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk  = (USB_CH_HCINTMSK_XactErrMsk_Msk  |
 189:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
 190:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_NakMsk_Msk    |
 191:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_StallMsk_Msk)  ;
 192:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Keep PID */
 193:../Libraries/XMCLib/src/xmc_usbh.c ****     hctsiz &=  (uint32_t)USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
  64              	 .loc 1 193 0
  65 0026 05F0C045 	 and r5,r5,#1610612736
  66              	.LVL8:
 194:../Libraries/XMCLib/src/xmc_usbh.c **** 
 195:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Packet specific setup */
 196:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_TOKEN_Msk) {
  67              	 .loc 1 196 0
  68 002a 0468     	 ldr r4,[r0]
  69 002c 04F00F0E 	 and lr,r4,#15
  70 0030 BEF1010F 	 cmp lr,#1
  71 0034 03D0     	 beq .L4
  72 0036 BEF1030F 	 cmp lr,#3
  73 003a 05D0     	 beq .L5
  74 003c 09E0     	 b .L27
  75              	.L4:
 188:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
  76              	 .loc 1 188 0
  77 003e 4FF0990E 	 mov lr,#153
  78              	.LVL9:
 197:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 198:../Libraries/XMCLib/src/xmc_usbh.c ****         /* set transfer direction to input */
 199:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar   |=  (uint32_t)USB_CH_HCCHAR_EPDir_Msk;
 200:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
 201:../Libraries/XMCLib/src/xmc_usbh.c ****         hcintmsk  |= (uint32_t)( USB_CH_HCINTMSK_DataTglErrMsk_Msk  |
 202:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
 203:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_AckMsk_Msk    |
 204:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_NakMsk_Msk )  ;
 205:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 206:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
 207:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 208:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_SETUP:
 209:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk  ;
 210:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_MDATA;
  79              	 .loc 1 210 0
  80 0042 4FF0C045 	 mov r5,#1610612736
  81 0046 06E0     	 b .L3
  82              	.LVL10:
  83              	.L5:
 199:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
  84              	 .loc 1 199 0
  85 0048 42F08027 	 orr r7,r2,#-2147450880
  86              	.LVL11:
 201:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
  87              	 .loc 1 201 0
  88 004c 40F2B95E 	 movw lr,#1465
 205:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
  89              	 .loc 1 205 0
  90 0050 01E0     	 b .L3
  91              	.LVL12:
  92              	.L27:
 188:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
  93              	 .loc 1 188 0
  94 0052 4FF0990E 	 mov lr,#153
  95              	.LVL13:
  96              	.L3:
 211:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 212:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 213:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 214:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 215:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare PID */
 216:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_DATA_Msk) {
  97              	 .loc 1 216 0
  98 0056 04F0F004 	 and r4,r4,#240
  99 005a 102C     	 cmp r4,#16
 100 005c 04D0     	 beq .L7
 217:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA0:
 218:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 219:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA0;
 220:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 221:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA1:
 222:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 223:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA1;
 101              	 .loc 1 223 0
 102 005e 202C     	 cmp r4,#32
 103 0060 08BF     	 it eq
 104 0062 4FF08045 	 moveq r5,#1073741824
 105 0066 00E0     	 b .L6
 106              	.L7:
 107              	.LVL14:
 219:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 108              	 .loc 1 219 0
 109 0068 0025     	 movs r5,#0
 110              	.LVL15:
 111              	.L6:
 224:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 225:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 226:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 227:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 228:../Libraries/XMCLib/src/xmc_usbh.c **** 
 229:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare odd/even frame */
 230:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((XMC_USBH0_device.global_register->HFNUM & 1U) != 0U) {
 112              	 .loc 1 230 0
 113 006a D6F80824 	 ldr r2,[r6,#1032]
 114 006e 12F0010F 	 tst r2,#1
 231:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar &= (uint32_t)~USB_CH_HCCHAR_OddFrm_Msk;
 115              	 .loc 1 231 0
 116 0072 14BF     	 ite ne
 117 0074 27F00057 	 bicne r7,r7,#536870912
 118              	.LVL16:
 232:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {
 233:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar |= (uint32_t)USB_CH_HCCHAR_OddFrm_Msk;
 119              	 .loc 1 233 0
 120 0078 47F00057 	 orreq r7,r7,#536870912
 121              	.LVL17:
 234:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 235:../Libraries/XMCLib/src/xmc_usbh.c ****   
 236:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Get transfer type specific status */
 237:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->ep_type) {
 122              	 .loc 1 237 0
 123 007c 827E     	 ldrb r2,[r0,#26]
 124 007e 032A     	 cmp r2,#3
 125 0080 0ED8     	 bhi .L11
 126 0082 DFE802F0 	 tbb [pc,r2]
 127              	.L13:
 128 0086 02       	 .byte (.L12-.L13)/2
 129 0087 07       	 .byte (.L14-.L13)/2
 130 0088 02       	 .byte (.L12-.L13)/2
 131 0089 07       	 .byte (.L14-.L13)/2
 132              	 .p2align 1
 133              	.L12:
 238:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_CONTROL:
 239:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_BULK:
 240:../Libraries/XMCLib/src/xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 134              	 .loc 1 240 0
 135 008a 17F4004F 	 tst r7,#32768
 136 008e 6BD1     	 bne .L15
 241:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->GNPTXSTS;
 137              	 .loc 1 241 0
 138 0090 F26A     	 ldr r2,[r6,#44]
 139              	.LVL18:
 140 0092 65E0     	 b .L16
 141              	.LVL19:
 142              	.L14:
 242:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 243:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 244:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 245:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_INTERRUPT:
 246:../Libraries/XMCLib/src/xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 143              	 .loc 1 246 0
 144 0094 17F4004F 	 tst r7,#32768
 145 0098 66D1     	 bne .L15
 247:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->HPTXSTS;
 146              	 .loc 1 247 0
 147 009a D6F81024 	 ldr r2,[r6,#1040]
 148              	.LVL20:
 149 009e 5FE0     	 b .L16
 150              	.LVL21:
 151              	.L11:
 248:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 249:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 250:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 251:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 252:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 253:../Libraries/XMCLib/src/xmc_usbh.c ****   
 254:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Calculate remaining transfer size */
 255:../Libraries/XMCLib/src/xmc_usbh.c ****     num_remaining_transfer = ptr_pipe->num - ptr_pipe->num_transferred_total;
 152              	 .loc 1 255 0
 153 00a0 C468     	 ldr r4,[r0,#12]
 154 00a2 8668     	 ldr r6,[r0,#8]
 155 00a4 361B     	 subs r6,r6,r4
 156              	.LVL22:
 256:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 257:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((uint32_t)(hcchar & USB_CH_HCCHAR_EPDir_Msk) == 0U) {
 157              	 .loc 1 257 0
 158 00a6 17F4004F 	 tst r7,#32768
 159 00aa 26D1     	 bne .L17
 160:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  pckt_num;
 160              	 .loc 1 160 0
 161 00ac 0022     	 movs r2,#0
 162              	.LVL23:
 163              	.L23:
 258:../Libraries/XMCLib/src/xmc_usbh.c ****       max_pckt_size =  ptr_pipe->ep_max_packet_size;
 164              	 .loc 1 258 0
 165 00ae B0F814C0 	 ldrh ip,[r0,#20]
 166              	.LVL24:
 259:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_fifo = (uint32_t)((uint32_t)(txsts & 0x0000FFFFU) <<  2);
 167              	 .loc 1 259 0
 168 00b2 1FFA82F8 	 uxth r8,r2
 169 00b6 4FEA8808 	 lsl r8,r8,#2
 170              	.LVL25:
 260:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_queue  = (uint32_t)((uint32_t)(txsts & 0x00FF0000U) >> 16);
 171              	 .loc 1 260 0
 172 00ba C2F30742 	 ubfx r2,r2,#16,#8
 173              	.LVL26:
 174 00be 4645     	 cmp r6,r8
 175 00c0 28BF     	 it cs
 176 00c2 4646     	 movcs r6,r8
 177              	.LVL27:
 178 00c4 0CF1FF38 	 add r8,ip,#-1
 179              	.LVL28:
 261:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > num_remaining_fifo) {
 262:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = num_remaining_fifo;
 263:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 264:../Libraries/XMCLib/src/xmc_usbh.c ****       pckt_num = (uint32_t)((num_remaining_transfer + (max_pckt_size - 1U)) / max_pckt_size);
 180              	 .loc 1 264 0
 181 00c8 B044     	 add r8,r8,r6
 182 00ca B8FBFCF8 	 udiv r8,r8,ip
 183              	.LVL29:
 184 00ce 4245     	 cmp r2,r8
 185 00d0 28BF     	 it cs
 186 00d2 4246     	 movcs r2,r8
 187              	.LVL30:
 265:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pckt_num > num_remaining_queue) {
 266:../Libraries/XMCLib/src/xmc_usbh.c ****         pckt_num = num_remaining_queue;
 267:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 268:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > (pckt_num * max_pckt_size)) {
 188              	 .loc 1 268 0
 189 00d4 0CFB02F2 	 mul r2,ip,r2
 190 00d8 9642     	 cmp r6,r2
 191 00da 28BF     	 it cs
 192 00dc 1646     	 movcs r6,r2
 193              	.LVL31:
 269:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = pckt_num * max_pckt_size;
 270:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 271:../Libraries/XMCLib/src/xmc_usbh.c ****       cnt = (uint16_t)((num_remaining_transfer + 3U) / 4U);
 194              	 .loc 1 271 0
 195 00de F21C     	 adds r2,r6,#3
 196 00e0 C2F38F02 	 ubfx r2,r2,#2,#16
 197              	.LVL32:
 272:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  = ptr_pipe->data + ptr_pipe->num_transferred_total;
 198              	 .loc 1 272 0
 199 00e4 2344     	 add r3,r3,r4
 200              	.LVL33:
 273:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_index = ((USB0_CH_TypeDef *)ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_re
 201              	 .loc 1 273 0
 202 00e6 224C     	 ldr r4,.L30
 203 00e8 6468     	 ldr r4,[r4,#4]
 204 00ea 0C1B     	 subs r4,r1,r4
 205 00ec 6411     	 asrs r4,r4,#5
 274:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 206              	 .loc 1 274 0
 207 00ee DFF888C0 	 ldr ip,.L30+8
 208              	.LVL34:
 209 00f2 5CF82440 	 ldr r4,[ip,r4,lsl#2]
 210              	.LVL35:
 275:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For OUT/SETUP transfer num_transferring represents num of bytes to be sent */
 276:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->num_transferring = num_remaining_transfer;
 211              	 .loc 1 276 0
 212 00f6 0661     	 str r6,[r0,#16]
 213 00f8 02E0     	 b .L18
 214              	.LVL36:
 215              	.L17:
 277:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 278:../Libraries/XMCLib/src/xmc_usbh.c ****     else {
 279:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For IN transfer num_transferring is zero */
 280:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->num_transferring = 0U;
 216              	 .loc 1 280 0
 217 00fa 0024     	 movs r4,#0
 218 00fc 0461     	 str r4,[r0,#16]
 180:../Libraries/XMCLib/src/xmc_usbh.c **** 
 219              	 .loc 1 180 0
 220 00fe 2246     	 mov r2,r4
 221              	.LVL37:
 222              	.L18:
 281:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 282:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Set packet count and transfer size */
 283:../Libraries/XMCLib/src/xmc_usbh.c ****     if (num_remaining_transfer != 0U) {
 223              	 .loc 1 283 0
 224 0100 56B1     	 cbz r6,.L19
 284:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= (((num_remaining_transfer + ptr_pipe->ep_max_packet_size) - 1U) / ptr_pipe->ep_max_
 225              	 .loc 1 284 0
 226 0102 B0F814C0 	 ldrh ip,[r0,#20]
 227 0106 3543     	 orrs r5,r5,r6
 228 0108 0CF1FF30 	 add r0,ip,#-1
 229              	.LVL38:
 230 010c 0644     	 add r6,r6,r0
 231              	.LVL39:
 232 010e B6FBFCF6 	 udiv r6,r6,ip
 285:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |=   num_remaining_transfer;
 233              	 .loc 1 285 0
 234 0112 45EAC645 	 orr r5,r5,r6,lsl#19
 235              	.LVL40:
 236 0116 01E0     	 b .L20
 237              	.LVL41:
 238              	.L19:
 286:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {                                                 /* Zero length packet */
 287:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= ((uint32_t)1U << USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos); /* Packet count = 1 */
 239              	 .loc 1 287 0
 240 0118 45F40025 	 orr r5,r5,#524288
 241              	.LVL42:
 242              	.L20:
 243              	.LBB42:
 244              	.LBB43:
 245              	 .file 2 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include/core_cm4.h"
   1:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.0.3
   5:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * @date     09. August 2017
   6:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  25:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  31:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  34:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  36:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  40:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  44:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  47:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  50:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  54:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  55:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  63:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  
  65:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  71:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  73:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** */
  76:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
  88:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 100:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 112:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 124:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 136:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 148:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 160:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 162:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 164:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 165:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
 167:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 169:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 171:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 173:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 176:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 180:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 187:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 192:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 197:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 202:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
 207:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 208:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 210:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 212:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** */
 216:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #else
 219:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
 221:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 224:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 229:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 231:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 232:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 233:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 237:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 245:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** */
 248:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 249:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 254:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 255:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 256:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 257:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 259:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 260:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 261:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   struct
 262:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
 263:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 275:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 279:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 282:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 285:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 288:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 291:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 294:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 295:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 296:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 298:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 299:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 300:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   struct
 301:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
 302:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 308:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 312:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 313:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 314:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 316:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 317:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 318:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   struct
 319:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
 320:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 336:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 340:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 343:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 346:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 349:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 352:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 355:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 358:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 361:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 364:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 367:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 368:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 369:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 371:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 372:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 373:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   struct
 374:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
 375:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 383:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 387:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 390:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 393:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 395:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 396:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 397:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 401:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 402:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 403:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 404:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 406:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 407:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 408:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RSERVED1[24U];
 412:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 423:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 427:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 429:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 430:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 431:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 435:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 436:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 437:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 438:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 440:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 441:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 442:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 465:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 469:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 472:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 475:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 478:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 481:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 485:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 488:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 491:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 494:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 497:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 500:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 503:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 506:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 509:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 512:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 516:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 520:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 523:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 526:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 529:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 532:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 535:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 538:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 542:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 545:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 548:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 552:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 555:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 558:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 561:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 564:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 567:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 571:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 574:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 577:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 580:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 583:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 586:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 589:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 592:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 595:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 598:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 601:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 604:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 607:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 610:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 614:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 617:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 620:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 624:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 627:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 630:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 633:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 636:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 639:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 643:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 646:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 649:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 652:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 655:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 658:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 661:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 665:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 668:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 671:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 674:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 677:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 680:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 684:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 687:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 690:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 694:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 697:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 700:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 703:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 706:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 708:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 709:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 710:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 714:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 715:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 716:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 717:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 719:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 720:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 721:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 726:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 730:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 734:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 737:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 740:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 743:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 746:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 748:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 749:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 750:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 754:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 755:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 756:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 757:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 759:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 760:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 761:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 767:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 771:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 774:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 777:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 780:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 784:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 788:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 792:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 795:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 798:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 800:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 801:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 802:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 806:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 807:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 808:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 809:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 811:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 812:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 813:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 814:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
 815:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[29U];
 826:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 830:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 833:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 846:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 847:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 850:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 851:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 855:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 858:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 861:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 864:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 867:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 870:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 873:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 876:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 879:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 883:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 887:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 891:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 895:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 898:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 901:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 903:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 904:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 905:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 906:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
 909:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 910:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 911:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
 912:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
 914:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 915:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
 916:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 928:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 932:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 936:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 940:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 941:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 942:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 945:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 948:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 951:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 954:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 957:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 960:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 963:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 966:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 969:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 972:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 975:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 978:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 981:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 984:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 987:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 990:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 993:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
 996:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1000:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1004:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1008:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1012:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1016:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1020:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1024:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1027:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1030:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1033:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1036:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1039:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1042:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1045:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1048:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1050:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1051:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1052:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1053:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1056:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1057:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1058:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1059:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1061:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1062:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1063:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1066:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1068:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1070:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1074:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1075:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1078:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1082:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1085:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1088:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1089:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1093:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1097:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1101:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1104:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1107:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1110:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1114:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1117:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1121:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1125:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1128:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1131:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1134:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1137:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1140:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1143:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1145:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1146:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1147:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1148:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1149:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1150:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1151:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1152:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1153:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1154:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1155:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1156:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1157:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1158:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1159:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1160:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1161:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1162:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1163:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1164:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1165:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1166:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1167:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1168:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1169:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1170:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1171:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1172:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1173:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1174:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1175:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1176:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1177:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1178:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1179:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1180:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1181:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1182:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1183:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1184:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1185:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1186:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1187:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1188:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1189:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1190:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1191:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1192:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1193:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1194:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1195:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1196:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1197:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1198:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1199:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1200:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1201:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1202:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1203:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1204:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1205:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1206:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1207:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1208:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1209:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1210:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1211:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1212:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1213:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1214:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1215:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1216:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1217:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1218:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1219:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1220:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1221:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1222:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1223:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1224:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1225:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1226:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1227:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1228:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1229:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1230:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1231:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1232:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1233:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1234:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1235:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1236:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1237:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1238:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1239:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1240:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1241:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1242:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1243:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1244:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1245:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1246:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1247:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1248:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1249:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1250:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1251:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1252:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1253:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1254:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1255:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1256:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1257:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1258:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1259:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1260:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1261:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1262:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1263:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1264:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1265:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1266:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1267:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1268:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1269:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1270:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1271:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1272:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1273:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1274:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1275:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1276:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1277:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1278:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1279:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1280:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1281:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1282:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1283:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1284:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1285:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1286:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1287:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1288:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1289:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1290:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1291:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1292:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1293:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1294:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1295:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1296:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1297:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1298:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1299:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1300:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1301:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1302:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1303:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1304:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1305:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1306:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1307:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1308:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1309:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1310:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1311:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1312:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1313:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1314:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1315:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1316:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1317:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1318:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1319:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1320:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1321:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1322:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1323:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1324:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1325:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1326:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1327:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1328:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1329:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1330:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1331:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1332:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1333:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1334:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1335:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1336:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1337:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1338:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1339:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1340:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1341:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1342:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1343:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1344:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1345:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1346:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1347:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1348:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1349:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1350:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1351:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1352:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1353:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1354:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1355:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1356:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1357:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1358:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1359:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1360:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1361:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1362:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1363:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1364:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1365:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1366:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1367:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1368:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1369:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1370:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1371:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1372:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1373:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1374:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1375:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1376:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1377:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1378:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1379:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1380:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1381:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1382:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1383:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1384:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1385:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1386:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1387:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1388:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1389:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1390:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1391:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1392:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1393:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1394:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1395:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1396:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1397:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1398:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1399:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1400:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1401:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1402:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1403:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1404:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1405:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1406:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1407:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1408:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1409:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1410:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1411:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1412:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1413:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1414:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1415:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1416:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1417:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1418:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1419:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1420:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1421:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1422:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1423:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1424:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1425:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1426:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1427:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1428:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1429:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1430:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1431:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1432:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1433:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1434:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1435:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1436:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1437:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1438:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1439:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1440:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1441:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1442:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1443:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1444:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1445:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1446:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1447:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1448:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1449:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1450:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1451:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1452:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1453:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1454:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1455:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1456:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1457:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1458:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1459:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1460:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1461:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1462:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1463:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1464:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1465:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1466:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1467:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1468:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1469:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1470:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1471:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1472:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1473:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1474:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1475:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1476:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1477:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1478:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1479:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1480:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1481:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1482:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1483:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1484:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1485:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1486:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1487:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1488:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1489:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1490:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1491:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1492:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1493:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1494:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1495:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1496:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1497:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1498:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1499:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1500:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1501:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1502:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1503:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1504:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1505:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1506:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1507:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1508:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1509:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1510:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1511:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1512:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1513:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1514:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1515:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1516:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1517:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1518:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1519:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1520:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1521:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1522:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1523:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1524:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1525:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1526:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** */
1527:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1528:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1529:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1530:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1531:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1532:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1533:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1534:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** */
1535:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1536:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1537:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1538:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1539:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1540:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1541:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1542:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1543:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1544:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1545:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1546:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1547:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1548:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1549:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1550:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1551:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1552:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1553:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1554:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1555:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1556:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1557:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1558:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1559:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1560:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1561:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1562:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1563:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1564:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1565:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1566:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1567:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1568:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1569:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
1570:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1571:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1572:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1573:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1574:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1575:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1576:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1577:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1578:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1579:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1580:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1581:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1582:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1583:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1584:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1585:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1586:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1587:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1588:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** */
1589:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1590:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1591:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1592:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1593:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1594:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1595:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1596:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1597:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   @{
1598:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1599:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1600:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1601:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1603:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1604:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1605:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #else
1606:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1607:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1608:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1609:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1610:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1611:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1612:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1613:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1614:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1615:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1616:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1617:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1618:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1619:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1620:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1621:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1623:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1624:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1625:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #else
1626:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1627:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1628:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1629:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1630:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1631:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1632:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1633:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1634:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1635:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1636:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1637:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1638:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1639:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1640:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1641:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1642:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1643:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1644:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1645:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1646:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1647:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1648:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1649:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1650:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1651:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1652:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1653:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1654:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1655:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1656:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1657:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1658:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1659:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1660:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1661:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1662:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1663:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1664:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1665:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1666:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1667:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1668:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /* Need to include for IRQn_Type type, according to device available */
1669:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #ifdef XMC4500_F100x1024
1670:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     #include <XMC4500.h>
1671:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** #endif
1672:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1673:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1674:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1675:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1676:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1677:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1678:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1679:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1680:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1681:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1682:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1683:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1684:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1685:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1686:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1687:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1688:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1689:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1690:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1691:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1692:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1693:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1694:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1695:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1696:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1697:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1698:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1699:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1700:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1701:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1702:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1703:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   else
1704:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1705:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1706:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1707:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1708:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1709:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1710:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1711:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1712:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1713:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1714:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1715:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1716:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1717:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1718:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1719:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1720:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 246              	 .loc 2 1720 0
 247 011c 4FF40066 	 mov r6,#2048
 248 0120 1448     	 ldr r0,.L30+4
 249 0122 C0F88C60 	 str r6,[r0,#140]
 250              	.LBB44:
 251              	.LBB45:
 252              	 .file 3 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.2
   5:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     13. February 2017
   6:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 117:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 118:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 122:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 123:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 129:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 131:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 133:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 134:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 135:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 136:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 140:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 142:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 144:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 145:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 146:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 147:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 150:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 151:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 153:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 154:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 155:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 157:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 158:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 159:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 160:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 162:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 166:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 168:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 169:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 170:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 172:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 173:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 174:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 175:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 176:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 177:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 181:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 183:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 185:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 186:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 187:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 189:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 193:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 195:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 197:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 198:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 199:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 200:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 201:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 205:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 207:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 208:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 211:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 212:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 214:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 215:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 216:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 219:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 221:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 222:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 223:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 225:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 226:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 228:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 232:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 241:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 243:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 247:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 249:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 250:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 251:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 253:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 254:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 255:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 256:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 258:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 262:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 264:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 265:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 268:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 269:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 270:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 271:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 272:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 273:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 277:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 279:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 281:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 282:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 283:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 285:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 289:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 291:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 294:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 296:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 297:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 301:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 303:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 304:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 305:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 307:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 308:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 310:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 312:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 316:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 318:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 319:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 320:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 322:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 323:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 324:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 325:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 326:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 327:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 331:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 333:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 335:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 336:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 337:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 339:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 343:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 345:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 347:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 348:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 355:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 359:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 360:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 362:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 363:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 364:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 365:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 366:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 370:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 372:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 374:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 375:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 378:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 382:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 384:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 385:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 386:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 388:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 389:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 390:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 391:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 393:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 397:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 399:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 400:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 401:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 403:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 404:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 405:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 406:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 408:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 412:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 414:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 416:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 418:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 420:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 424:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 426:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 428:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 429:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 430:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 435:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 439:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 441:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 443:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 445:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 446:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 450:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 452:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 454:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 455:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 456:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 457:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 460:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 461:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 463:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 464:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 465:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 467:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 468:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 469:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 470:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 472:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 476:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 478:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 479:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 480:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 482:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 484:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 486:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 496:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 499:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 503:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 505:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 507:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 508:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 509:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 516:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 518:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 520:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 521:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 523:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 524:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 526:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 527:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 529:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 530:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 531:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 533:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 534:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 538:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 541:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 542:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 544:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 545:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 546:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 548:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 549:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 550:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 553:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 554:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 557:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 559:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 561:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 562:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 565:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 569:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 571:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 573:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 574:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 579:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 583:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 586:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 587:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 589:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 593:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 596:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 598:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 599:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 600:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 601:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 602:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 603:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 604:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 605:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 606:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 607:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 609:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 610:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 611:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 612:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 614:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 615:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 616:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 617:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 618:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 619:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 620:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 621:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 622:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 623:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 624:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 626:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 627:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 628:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 629:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 630:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 631:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 632:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 633:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 634:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 635:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 636:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 637:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 638:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 639:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 640:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 641:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 642:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 643:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 644:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 645:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 646:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 647:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 649:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 650:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 651:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 652:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 653:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 654:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 655:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 656:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 657:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 658:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 659:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 660:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 661:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 662:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 663:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 664:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 665:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 666:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 667:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 668:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 669:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 672:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 673:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 674:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 675:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 676:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 677:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 678:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 679:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 680:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 681:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 682:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 683:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 684:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 685:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 686:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 687:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 688:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 689:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 690:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 691:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 692:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 693:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 694:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 695:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 696:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 697:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 698:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 699:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 700:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 701:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 702:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 703:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 704:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 705:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 706:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 707:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 708:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 709:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 710:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 711:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 712:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 713:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 714:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 715:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 716:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 717:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 718:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 719:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 720:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 721:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 722:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 723:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 724:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 725:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 726:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 727:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 728:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 729:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 730:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 731:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 732:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 733:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 734:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 735:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 736:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 737:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 738:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 739:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 740:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 741:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 742:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 743:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 744:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 745:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 747:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 748:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 749:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 750:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 751:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 752:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 753:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 754:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 755:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 756:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 757:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 758:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 759:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 761:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 762:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 763:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 764:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 765:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 766:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 767:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 768:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 769:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 770:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 771:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 772:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 773:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 774:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 775:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 776:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 777:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 778:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 779:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 780:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 781:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 782:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 783:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 784:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 785:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 787:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 788:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 789:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 790:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 791:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 792:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 793:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 794:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 795:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 796:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 797:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 798:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 799:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 800:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 802:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 803:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 804:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 805:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 806:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 807:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 808:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 809:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 810:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 811:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 812:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 813:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 814:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 815:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 816:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 817:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 818:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 819:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 820:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 253              	 .loc 3 820 0
 254              	
 255 0126 BFF34F8F 	 dsb 0xF
 256              	
 257              	 .thumb
 258              	.LBE45:
 259              	.LBE44:
 260              	.LBB46:
 261              	.LBB47:
 809:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262              	 .loc 3 809 0
 263              	
 264 012a BFF36F8F 	 isb 0xF
 265              	
 266              	 .thumb
 267              	.LBE47:
 268              	.LBE46:
 269              	.LBE43:
 270              	.LBE42:
 288:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= 0U;                                        /* Transfer size = 0 */
 289:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbh.c ****     NVIC_DisableIRQ (USB0_0_IRQn);
 291:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCINTMSK = hcintmsk;                  /* Enable channel interrupts */
 271              	 .loc 1 291 0
 272 012e C1F80CE0 	 str lr,[r1,#12]
 292:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCTSIZ_BUFFERMODE = hctsiz;           /* Write ch transfer size */
 273              	 .loc 1 292 0
 274 0132 0D61     	 str r5,[r1,#16]
 293:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCCHAR = hcchar;                      /* Write ch characteristics */
 275              	 .loc 1 293 0
 276 0134 0F60     	 str r7,[r1]
 294:../Libraries/XMCLib/src/xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 277              	 .loc 1 294 0
 278 0136 4AB1     	 cbz r2,.L21
 279 0138 511E     	 subs r1,r2,#1
 280              	.LVL43:
 281 013a 89B2     	 uxth r1,r1
 282 013c 0131     	 adds r1,r1,#1
 283 013e 03EB8101 	 add r1,r3,r1,lsl#2
 284              	.LVL44:
 285              	.L22:
 295:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 296:../Libraries/XMCLib/src/xmc_usbh.c ****       *ptr_dest = *((__unaligned uint32_t *)ptr_src);
 297:../Libraries/XMCLib/src/xmc_usbh.c **** #else/* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
 298:../Libraries/XMCLib/src/xmc_usbh.c ****       *ptr_dest = *((__packed uint32_t *)ptr_src);
 286              	 .loc 1 298 0
 287 0142 53F8042B 	 ldr r2,[r3],#4
 288              	.LVL45:
 289 0146 2260     	 str r2,[r4]
 290              	.LVL46:
 294:../Libraries/XMCLib/src/xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 291              	 .loc 1 294 0
 292 0148 8B42     	 cmp r3,r1
 293 014a FAD1     	 bne .L22
 294              	.L21:
 295              	.LVL47:
 296              	.LBB48:
 297              	.LBB49:
1684:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
 298              	 .loc 2 1684 0
 299 014c 4FF40062 	 mov r2,#2048
 300 0150 084B     	 ldr r3,.L30+4
 301              	.LVL48:
 302 0152 DA60     	 str r2,[r3,#12]
 303              	.LVL49:
 304              	.LBE49:
 305              	.LBE48:
 299:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 300:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  += 4U;
 301:../Libraries/XMCLib/src/xmc_usbh.c ****       cnt--;
 302:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 303:../Libraries/XMCLib/src/xmc_usbh.c ****     NVIC_EnableIRQ  (USB0_0_IRQn);                /* Enable OTG interrupt */
 304:../Libraries/XMCLib/src/xmc_usbh.c ****     status = true;
 306              	 .loc 1 304 0
 307 0154 0120     	 movs r0,#1
 308 0156 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 309              	.LVL50:
 310              	.L24:
 171:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 311              	 .loc 1 171 0
 312 015a 0020     	 movs r0,#0
 313              	.LVL51:
 314 015c BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 315              	.LVL52:
 316              	.L16:
 255:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 317              	 .loc 1 255 0
 318 0160 C468     	 ldr r4,[r0,#12]
 319 0162 8668     	 ldr r6,[r0,#8]
 320 0164 361B     	 subs r6,r6,r4
 321              	.LVL53:
 322 0166 A2E7     	 b .L23
 323              	.LVL54:
 324              	.L15:
 325 0168 8668     	 ldr r6,[r0,#8]
 326 016a C268     	 ldr r2,[r0,#12]
 327 016c B61A     	 subs r6,r6,r2
 328              	.LVL55:
 329 016e C4E7     	 b .L17
 330              	.L31:
 331              	 .align 2
 332              	.L30:
 333 0170 00000000 	 .word .LANCHOR0
 334 0174 00E100E0 	 .word -536813312
 335 0178 00000000 	 .word .LANCHOR1
 336              	 .cfi_endproc
 337              	.LFE181:
 339              	 .section .text.XMC_USBH_GetVersion,"ax",%progbits
 340              	 .align 2
 341              	 .thumb
 342              	 .thumb_func
 344              	XMC_USBH_GetVersion:
 345              	.LFB182:
 305:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 306:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 307:../Libraries/XMCLib/src/xmc_usbh.c **** }
 308:../Libraries/XMCLib/src/xmc_usbh.c **** 
 309:../Libraries/XMCLib/src/xmc_usbh.c **** /* USB driver API functions */
 310:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 311:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return      \ref XMC_USBH_DRIVER_VERSION_t
 312:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 313:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get driver version.
 314:../Libraries/XMCLib/src/xmc_usbh.c **** */
 315:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_DRIVER_VERSION_t XMC_USBH_GetVersion (void) { return xmc_usbh_driver_version; }
 346              	 .loc 1 315 0
 347              	 .cfi_startproc
 348              	 
 349              	 
 350              	 
 351 0000 82B0     	 sub sp,sp,#8
 352              	.LCFI1:
 353              	 .cfi_def_cfa_offset 8
 354              	 .loc 1 315 0
 355 0002 054B     	 ldr r3,.L34
 356 0004 1B68     	 ldr r3,[r3]
 357 0006 0020     	 movs r0,#0
 358 0008 9AB2     	 uxth r2,r3
 359 000a 62F30F00 	 bfi r0,r2,#0,#16
 360 000e 1B0C     	 lsrs r3,r3,#16
 361 0010 63F31F40 	 bfi r0,r3,#16,#16
 362 0014 02B0     	 add sp,sp,#8
 363              	.LCFI2:
 364              	 .cfi_def_cfa_offset 0
 365              	 
 366 0016 7047     	 bx lr
 367              	.L35:
 368              	 .align 2
 369              	.L34:
 370 0018 00000000 	 .word .LANCHOR2
 371              	 .cfi_endproc
 372              	.LFE182:
 374              	 .section .text.XMC_USBH_GetCapabilities,"ax",%progbits
 375              	 .align 2
 376              	 .thumb
 377              	 .thumb_func
 379              	XMC_USBH_GetCapabilities:
 380              	.LFB183:
 316:../Libraries/XMCLib/src/xmc_usbh.c **** 
 317:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 318:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  \ref XMC_USBH_CAPABILITIES_t
 319:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 320:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get driver capabilities.
 321:../Libraries/XMCLib/src/xmc_usbh.c **** */
 322:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_CAPABILITIES_t XMC_USBH_GetCapabilities (void) { return xmc_usbh_driver_capabilitie
 381              	 .loc 1 322 0
 382              	 .cfi_startproc
 383              	 
 384              	 
 385              	 
 386              	 .loc 1 322 0
 387 0000 0020     	 movs r0,#0
 388 0002 0123     	 movs r3,#1
 389 0004 63F30E00 	 bfi r0,r3,#0,#15
 390 0008 6FF3CF30 	 bfc r0,#15,#1
 391 000c 40F44030 	 orr r0,r0,#196608
 392 0010 20F48020 	 bic r0,r0,#262144
 393 0014 7047     	 bx lr
 394              	 .cfi_endproc
 395              	.LFE183:
 397 0016 00BF     	 .section .text.XMC_USBH_PortSuspend,"ax",%progbits
 398              	 .align 2
 399              	 .thumb
 400              	 .thumb_func
 402              	XMC_USBH_PortSuspend:
 403              	.LFB189:
 323:../Libraries/XMCLib/src/xmc_usbh.c **** 
 324:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 325:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   cb_port_event  Pointer to port event callback function \ref ARM_USBH_SignalPortEvent
 326:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   cb_pipe_event  Pointer to pipe event callback function \ref ARM_USBH_SignalPipeEvent
 327:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  int32_t \ref Execution_status. 0 if execution is successful.
 328:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 329:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 330:../Libraries/XMCLib/src/xmc_usbh.c ****  * Initialize USB Host Interface. Registers callback functions to be executed on port event and pip
 331:../Libraries/XMCLib/src/xmc_usbh.c ****  * Initializes FIFO address for each pipe. Configures P3.2 as the VBUS charge pump enable pin.\n
 332:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 333:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Related APIs:</b><BR>
 334:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Uninitialize() \n
 335:../Libraries/XMCLib/src/xmc_usbh.c **** */
 336:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_Initialize (XMC_USBH_SignalPortEvent_t cb_port_event,
 337:../Libraries/XMCLib/src/xmc_usbh.c ****                                 XMC_USBH_SignalPipeEvent_t cb_pipe_event) {
 338:../Libraries/XMCLib/src/xmc_usbh.c **** 
 339:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t channel;
 340:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 341:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.init_done == true)
 342:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbh.c ****     /*return ok since initialized*/
 344:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 346:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 347:../Libraries/XMCLib/src/xmc_usbh.c ****     /* assign callbacks */
 348:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb = cb_port_event;
 349:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 350:../Libraries/XMCLib/src/xmc_usbh.c **** 
 351:../Libraries/XMCLib/src/xmc_usbh.c ****     /* assign fifo start addresses */
 352:../Libraries/XMCLib/src/xmc_usbh.c ****     for (channel = 0U; channel < USBH0_MAX_PIPE_NUM; channel++) {
 353:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 354:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 355:../Libraries/XMCLib/src/xmc_usbh.c **** 
 356:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 357:../Libraries/XMCLib/src/xmc_usbh.c ****   
 358:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.init_done = true;
 359:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 360:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 361:../Libraries/XMCLib/src/xmc_usbh.c **** }
 362:../Libraries/XMCLib/src/xmc_usbh.c **** 
 363:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 364:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 to indicate success.
 365:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 366:../Libraries/XMCLib/src/xmc_usbh.c ****  * De-initialize USB Host Interface. Sets the driver power state as powered off. Disables VBUS.\n
 367:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 368:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 369:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff() \n
 370:../Libraries/XMCLib/src/xmc_usbh.c **** */
 371:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_Uninitialize (void) {
 372:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 373:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 374:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 375:../Libraries/XMCLib/src/xmc_usbh.c **** }
 376:../Libraries/XMCLib/src/xmc_usbh.c **** 
 377:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 378:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param  state  Power state. \ref XMC_USBH_POWER_STATE_t
 379:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 380:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 381:../Libraries/XMCLib/src/xmc_usbh.c ****  * Control USB Host Interface Power. If power state is set to \ref XMC_USBH_POWER_FULL,
 382:../Libraries/XMCLib/src/xmc_usbh.c ****  * it initializes the peripheral and enables VBUS. If power state is set to \ref XMC_USBH_POWER_OFF
 383:../Libraries/XMCLib/src/xmc_usbh.c ****  * disables the peripheral and the VBUS.\n
 384:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 385:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 386:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff(), XMC_USBH_Uninitialize(
 387:../Libraries/XMCLib/src/xmc_usbh.c **** */
 388:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state) {
 389:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 390:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_value;
 391:../Libraries/XMCLib/src/xmc_usbh.c ****   switch (state) {
 392:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 393:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 394:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 395:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_OFF:
 396:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_DisableIRQ  (USB0_0_IRQn);
 397:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_ClearPendingIRQ (USB0_0_IRQn); /* Clear pending interrupt */
 398:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.power_state =  state; /* Clear powered flag */
 399:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 400:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 401:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  |=  (uint32_t)USB_PCGCCTL_StopPclk_Msk; /* Stop PH
 402:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 403:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 404:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 405:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 406:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 407:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_FULL:
 408:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.init_done == false)
 409:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 410:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR;
 411:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 412:../Libraries/XMCLib/src/xmc_usbh.c ****       } /* not initialized */
 413:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.power_state == XMC_USBH_POWER_FULL)
 414:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 415:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_OK;
 416:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 417:../Libraries/XMCLib/src/xmc_usbh.c ****       } /* already powered */
 418:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_DISABLE); /* disable clock gating */
 419:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 420:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 421:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 422:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 423:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 424:../Libraries/XMCLib/src/xmc_usbh.c **** 
 425:../Libraries/XMCLib/src/xmc_usbh.c ****       /* On-chip Full-speed PHY */
 426:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  &=  (uint32_t)~USB_PCGCCTL_StopPclk_Msk;  /* Start
 427:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 428:../Libraries/XMCLib/src/xmc_usbh.c **** 
 429:../Libraries/XMCLib/src/xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_AHBIdle_Msk) == 0U) /* wait u
 430:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 431:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Wait*/
 432:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 433:../Libraries/XMCLib/src/xmc_usbh.c **** 
 434:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GRSTCTL |=  (uint32_t)USB_GRSTCTL_CSftRst_Msk; /* Core soft
 435:../Libraries/XMCLib/src/xmc_usbh.c **** 
 436:../Libraries/XMCLib/src/xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_CSftRst_Msk)  != 0U) /* wait 
 437:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 438:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Wait*/
 439:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 440:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 441:../Libraries/XMCLib/src/xmc_usbh.c **** 
 442:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 443:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 444:../Libraries/XMCLib/src/xmc_usbh.c **** 
 445:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Created local copy of GUSBCFG to avoid side effects*/
 446:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_value = XMC_USBH0_device.global_register->GUSBCFG;
 447:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 448:../Libraries/XMCLib/src/xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 449:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 450:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG &= (uint32_t)~USB_GUSBCFG_ForceDevMode_Msk;      
 451:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 452:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 453:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 454:../Libraries/XMCLib/src/xmc_usbh.c **** 
 455:../Libraries/XMCLib/src/xmc_usbh.c ****       /* FS only, even if HS is supported */
 456:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG     |=  (uint32_t)(0x200U | USB_CH_HCFG_FSLSSUP(1));
 457:../Libraries/XMCLib/src/xmc_usbh.c **** 
 458:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Rx FIFO setting */
 459:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GRXFSIZ   = (RX_FIFO_SIZE/4U);
 460:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 461:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GNPTXFSIZ_HOSTMODE = (((uint32_t)(TX_FIFO_SIZE_NON_PERI/4U)
 462:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 463:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPTXFSIZ  = ((uint32_t)(TX_FIFO_SIZE_PERI / 4U) << 16U) | (
 464:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable channel interrupts */
 465:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HAINTMSK  = ((uint32_t)1U << USBH0_MAX_PIPE_NUM) - 1U;
 466:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Unmask interrupts */
 467:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GINTMSK_HOSTMODE   = (
 468:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 469:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_HChIntMsk_Msk    |
 470:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_PrtIntMsk_Msk   |
 471:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_RxFLvlMsk_Msk |
 472:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_SofMsk_Msk  |
 473:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_WkUpIntMsk_Msk
 474:../Libraries/XMCLib/src/xmc_usbh.c ****                        )   ;
 475:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set powered state */
 476:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.power_state = state;
 477:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable interrupts */
 478:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  |=  (uint32_t)USB_GAHBCFG_GlblIntrMsk_Msk;
 479:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set highest interrupt priority */
 480:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_SetPriority (USB0_0_IRQn, 0U);
 481:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_EnableIRQ   (USB0_0_IRQn);
 482:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 483:../Libraries/XMCLib/src/xmc_usbh.c ****     default:
 484:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 485:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 486:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 487:../Libraries/XMCLib/src/xmc_usbh.c **** }
 488:../Libraries/XMCLib/src/xmc_usbh.c **** 
 489:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 490:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 491:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param vbus VBUS state - \n
 492:../Libraries/XMCLib/src/xmc_usbh.c ****  *                 - \b false VBUS off
 493:../Libraries/XMCLib/src/xmc_usbh.c ****  *                 - \b true  VBUS on
 494:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 495:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 496:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 497:../Libraries/XMCLib/src/xmc_usbh.c ****  * Set USB port VBUS on/off.
 498:../Libraries/XMCLib/src/xmc_usbh.c **** */
 499:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortVbusOnOff (uint8_t port, bool vbus) {
 500:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 501:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 502:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 503:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 504:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 505:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 506:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 507:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 508:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 509:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 510:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 511:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 512:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 513:../Libraries/XMCLib/src/xmc_usbh.c ****       if (vbus != 0U) {
 514:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power on */
 515:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT |=  (uint32_t)USB_HPRT_PrtPwr_Msk;
 516:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 517:../Libraries/XMCLib/src/xmc_usbh.c ****       } else {
 518:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power off */
 519:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT &= (uint32_t)~USB_HPRT_PrtPwr_Msk;
 520:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 521:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 522:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 523:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 524:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 525:../Libraries/XMCLib/src/xmc_usbh.c **** }
 526:../Libraries/XMCLib/src/xmc_usbh.c **** 
 527:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 528:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 529:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t Execution status. \ref Execution_status
 530:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 531:../Libraries/XMCLib/src/xmc_usbh.c ****  * Do USB port reset. Port reset should honor the requirement of 50ms delay before enabling.
 532:../Libraries/XMCLib/src/xmc_usbh.c ****  * The function depends on implementation of XMC_USBH_osDelay() for 1ms delay to achieve required d
 533:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 534:../Libraries/XMCLib/src/xmc_usbh.c **** */
 535:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortReset (uint8_t port) {
 536:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 537:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 538:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 539:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 540:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 541:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 543:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 544:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 545:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 546:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 547:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 548:../Libraries/XMCLib/src/xmc_usbh.c **** 
 549:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.port_reset_active = true;
 550:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 551:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 552:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 553:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 554:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 555:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 556:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 557:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 558:../Libraries/XMCLib/src/xmc_usbh.c **** 
 559:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Wait for the port to be enabled*/
 560:../Libraries/XMCLib/src/xmc_usbh.c ****     while ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtEna_Msk) == 0U)
 561:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 562:../Libraries/XMCLib/src/xmc_usbh.c ****       /*wait*/
 563:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 564:../Libraries/XMCLib/src/xmc_usbh.c **** 
 565:../Libraries/XMCLib/src/xmc_usbh.c ****     if (XMC_USBH0_device.port_reset_active == true)
 566:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 567:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active = false;
 568:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 569:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 570:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 571:../Libraries/XMCLib/src/xmc_usbh.c **** 
 572:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 573:../Libraries/XMCLib/src/xmc_usbh.c **** }
 574:../Libraries/XMCLib/src/xmc_usbh.c **** 
 575:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 576:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 577:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return      \ref Execution_status
 578:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 579:../Libraries/XMCLib/src/xmc_usbh.c ****  * Suspend USB Port (stop generating SOFs).\n
 580:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 581:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 582:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PortResume() \n
 583:../Libraries/XMCLib/src/xmc_usbh.c **** */
 584:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortSuspend (uint8_t port)
 585:../Libraries/XMCLib/src/xmc_usbh.c **** {
 404              	 .loc 1 585 0
 405              	 .cfi_startproc
 406              	 
 407              	 
 408              	 
 409              	.LVL56:
 586:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 587:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 588:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 410              	 .loc 1 588 0
 411 0000 0D4B     	 ldr r3,.L41
 412 0002 5B7C     	 ldrb r3,[r3,#17]
 413 0004 8BB1     	 cbz r3,.L39
 589:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 590:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 591:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 592:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 593:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 594:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 414              	 .loc 1 594 0
 415 0006 98B9     	 cbnz r0,.L40
 595:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 596:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 597:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 598:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 599:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 600:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 416              	 .loc 1 600 0
 417 0008 0B4B     	 ldr r3,.L41
 418 000a 1A68     	 ldr r2,[r3]
 419 000c D2F84034 	 ldr r3,[r2,#1088]
 420              	.LVL57:
 601:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 421              	 .loc 1 601 0
 422 0010 23F00403 	 bic r3,r3,#4
 423              	.LVL58:
 602:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtSusp_Msk;
 424              	 .loc 1 602 0
 425 0014 43F08003 	 orr r3,r3,#128
 426              	.LVL59:
 603:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 427              	 .loc 1 603 0
 428 0018 C2F84034 	 str r3,[r2,#1088]
 604:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Stop PHY clock after suspending the bus*/
 605:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL |= XMC_USBH_PHY_CLK_STOP;
 429              	 .loc 1 605 0
 430 001c D2F8003E 	 ldr r3,[r2,#3584]
 431              	.LVL60:
 432 0020 43F00303 	 orr r3,r3,#3
 433 0024 C2F8003E 	 str r3,[r2,#3584]
 434              	.LVL61:
 435 0028 7047     	 bx lr
 436              	.L39:
 590:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 437              	 .loc 1 590 0
 438 002a 4FF0FF30 	 mov r0,#-1
 439              	.LVL62:
 440 002e 7047     	 bx lr
 441              	.LVL63:
 442              	.L40:
 596:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 443              	 .loc 1 596 0
 444 0030 6FF00400 	 mvn r0,#4
 445              	.LVL64:
 606:../Libraries/XMCLib/src/xmc_usbh.c **** 
 607:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 608:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 609:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 610:../Libraries/XMCLib/src/xmc_usbh.c **** }
 446              	 .loc 1 610 0
 447 0034 7047     	 bx lr
 448              	.L42:
 449 0036 00BF     	 .align 2
 450              	.L41:
 451 0038 00000000 	 .word .LANCHOR0
 452              	 .cfi_endproc
 453              	.LFE189:
 455              	 .section .text.XMC_USBH_PortGetState,"ax",%progbits
 456              	 .align 2
 457              	 .thumb
 458              	 .thumb_func
 460              	XMC_USBH_PortGetState:
 461              	.LFB191:
 611:../Libraries/XMCLib/src/xmc_usbh.c **** 
 612:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 613:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 614:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return \ref Execution_status
 615:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 616:../Libraries/XMCLib/src/xmc_usbh.c ****  * Resume suspended USB port (start generating SOFs).\n
 617:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 618:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 619:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PortSuspend() \n
 620:../Libraries/XMCLib/src/xmc_usbh.c **** */
 621:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortResume (uint8_t port)
 622:../Libraries/XMCLib/src/xmc_usbh.c **** {
 623:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 624:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 625:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 626:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 627:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 628:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 629:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 630:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 631:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 632:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 633:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 634:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 635:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 636:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 637:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Ungate PHY clock*/
 638:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 639:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Set resume bit*/
 640:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 641:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 642:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 643:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 644:../Libraries/XMCLib/src/xmc_usbh.c **** 
 645:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(20U);
 646:../Libraries/XMCLib/src/xmc_usbh.c **** 
 647:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 648:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 649:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 650:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 651:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 652:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 653:../Libraries/XMCLib/src/xmc_usbh.c ****   
 654:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 655:../Libraries/XMCLib/src/xmc_usbh.c **** }
 656:../Libraries/XMCLib/src/xmc_usbh.c **** 
 657:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 658:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 659:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return XMC_USBH_PORT_STATE_t Port State
 660:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 661:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 662:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get current USB port state. The state indicates if the port is connected, port speed
 663:../Libraries/XMCLib/src/xmc_usbh.c ****  * and port overcurrent status.
 664:../Libraries/XMCLib/src/xmc_usbh.c **** */
 665:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_PORT_STATE_t XMC_USBH_PortGetState (uint8_t port)
 666:../Libraries/XMCLib/src/xmc_usbh.c **** {
 462              	 .loc 1 666 0
 463              	 .cfi_startproc
 464              	 
 465              	 
 466              	 
 467              	.LVL65:
 667:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PORT_STATE_t port_state = { 0U, 0U, 0U };
 668:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 669:../Libraries/XMCLib/src/xmc_usbh.c ****   
 670:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 468              	 .loc 1 670 0
 469 0000 0E4B     	 ldr r3,.L49
 470 0002 5B7C     	 ldrb r3,[r3,#17]
 471 0004 6BB1     	 cbz r3,.L46
 671:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 672:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Do not update the port state*/
 673:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 674:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 675:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 676:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 472              	 .loc 1 676 0
 473 0006 78B9     	 cbnz r0,.L47
 677:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 678:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Do not update the port state*/
 679:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 680:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 681:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 682:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 474              	 .loc 1 682 0
 475 0008 0C4B     	 ldr r3,.L49
 476 000a 1B68     	 ldr r3,[r3]
 477 000c D3F84034 	 ldr r3,[r3,#1088]
 478              	.LVL66:
 683:../Libraries/XMCLib/src/xmc_usbh.c ****       if(((hprt & USB_HPRT_PrtConnSts_Msk) != 0U))
 479              	 .loc 1 683 0
 480 0010 03F00102 	 and r2,r3,#1
 481              	.LVL67:
 684:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 685:../Libraries/XMCLib/src/xmc_usbh.c ****         port_state.connected   = 1U;
 686:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 687:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 688:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 689:../Libraries/XMCLib/src/xmc_usbh.c ****         port_state.connected   = 0U;
 690:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 691:../Libraries/XMCLib/src/xmc_usbh.c ****       port_state.overcurrent = 0U;
 692:../Libraries/XMCLib/src/xmc_usbh.c **** 
 693:../Libraries/XMCLib/src/xmc_usbh.c ****       switch ((uint32_t)((uint32_t)(hprt & USB_HPRT_PrtSpd_Msk) >> USB_HPRT_PrtSpd_Pos)) {
 482              	 .loc 1 693 0
 483 0014 C3F34143 	 ubfx r3,r3,#17,#2
 484              	.LVL68:
 667:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 485              	 .loc 1 667 0
 486 0018 012B     	 cmp r3,#1
 487 001a 14BF     	 ite ne
 488 001c 0023     	 movne r3,#0
 489 001e 0123     	 moveq r3,#1
 490 0020 04E0     	 b .L44
 491              	.LVL69:
 492              	.L46:
 493 0022 0023     	 movs r3,#0
 494 0024 1A46     	 mov r2,r3
 495 0026 01E0     	 b .L44
 496              	.L47:
 497 0028 0023     	 movs r3,#0
 498 002a 1A46     	 mov r2,r3
 499              	.LVL70:
 500              	.L44:
 694:../Libraries/XMCLib/src/xmc_usbh.c ****         case 1U: /* Full speed */
 695:../Libraries/XMCLib/src/xmc_usbh.c ****          port_state.speed = XMC_USBH_SPEED_FULL;
 696:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 697:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 698:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 699:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 700:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 701:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 702:../Libraries/XMCLib/src/xmc_usbh.c ****   return port_state;
 501              	 .loc 1 702 0
 502 002c 0020     	 movs r0,#0
 503              	.LVL71:
 504 002e 62F30000 	 bfi r0,r2,#0,#1
 505 0032 6FF34100 	 bfc r0,#1,#1
 506 0036 63F38300 	 bfi r0,r3,#2,#2
 703:../Libraries/XMCLib/src/xmc_usbh.c **** }
 507              	 .loc 1 703 0
 508 003a 7047     	 bx lr
 509              	.L50:
 510              	 .align 2
 511              	.L49:
 512 003c 00000000 	 .word .LANCHOR0
 513              	 .cfi_endproc
 514              	.LFE191:
 516              	 .section .text.XMC_USBH_PipeModify,"ax",%progbits
 517              	 .align 2
 518              	 .thumb
 519              	 .thumb_func
 521              	XMC_USBH_PipeModify:
 522              	.LFB193:
 704:../Libraries/XMCLib/src/xmc_usbh.c **** 
 705:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 706:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_addr Device address
 707:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_speed  Device speed
 708:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_addr Hub address. This value should be 0 since hub is not supported.
 709:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_port  USB port number. Only one port(0) is supported.
 710:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_addr Device endpoint address \n
 711:../Libraries/XMCLib/src/xmc_usbh.c ****  *                - ep_addr.0..3: Address \n
 712:../Libraries/XMCLib/src/xmc_usbh.c ****  *                - ep_addr.7:    Direction\n
 713:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_type Endpoint type (ARM_USB_ENDPOINT_xxx)
 714:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 715:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_interval Endpoint polling interval
 716:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return XMC_USBH_PIPE_HANDLE Pipe handle is a pointer to pipe hardware base address.
 717:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 718:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 719:../Libraries/XMCLib/src/xmc_usbh.c ****  * Create/allocate a pipe configured with input parameters. The function looks for an unused pipe a
 720:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 721:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 722:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 723:../Libraries/XMCLib/src/xmc_usbh.c **** */
 724:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_PIPE_HANDLE XMC_USBH_PipeCreate (uint8_t dev_addr, uint8_t dev_speed, uint8_t hub_a
 725:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 726:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 727:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t         i;
 728:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_val;
 729:../Libraries/XMCLib/src/xmc_usbh.c ****   
 730:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 731:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 732:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)NULL;
 733:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 734:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 735:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 736:../Libraries/XMCLib/src/xmc_usbh.c ****    /* get first free pipe available */
 737:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 738:../Libraries/XMCLib/src/xmc_usbh.c **** 
 739:../Libraries/XMCLib/src/xmc_usbh.c ****     for (i = 0U; i < USBH0_MAX_PIPE_NUM; i++) {
 740:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 741:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 742:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 743:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 744:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch++;
 745:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 746:../Libraries/XMCLib/src/xmc_usbh.c ****   
 747:../Libraries/XMCLib/src/xmc_usbh.c ****     /* free pipe found? */
 748:../Libraries/XMCLib/src/xmc_usbh.c ****     if (i == USBH0_MAX_PIPE_NUM)
 749:../Libraries/XMCLib/src/xmc_usbh.c ****     { 
 750:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch = (USB0_CH_TypeDef *)NULL;
 751:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 752:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 753:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 754:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 755:../Libraries/XMCLib/src/xmc_usbh.c **** 
 756:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));  /* Initialize pipe structure */
 757:../Libraries/XMCLib/src/xmc_usbh.c **** 
 758:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Fill in all fields of Endpoint Descriptor */
 759:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Get the end point direction from the MSB of address*/
 760:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_val = 0U;
 761:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((ep_addr >> 7U) & 0x1U) == 0U)
 762:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 763:../Libraries/XMCLib/src/xmc_usbh.c ****         loc_val = 1U;
 764:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 765:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch->HCCHAR = ((uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size))|
 766:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 767:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 768:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 769:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 770:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Store Pipe settings */
 771:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 772:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 773:../Libraries/XMCLib/src/xmc_usbh.c ****       switch (ep_type) {
 774:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 775:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_BULK:
 776:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 777:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 778:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_INTERRUPT:
 779:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ep_interval > 0U) {
 780:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 781:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 782:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->interval = ptr_pipe->interval_reload;
 783:../Libraries/XMCLib/src/xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 784:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 785:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 786:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 787:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 788:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 789:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 790:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 791:../Libraries/XMCLib/src/xmc_usbh.c ****   return ((XMC_USBH_EP_HANDLE)ptr_ch);
 792:../Libraries/XMCLib/src/xmc_usbh.c **** }
 793:../Libraries/XMCLib/src/xmc_usbh.c **** 
 794:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 795:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 796:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_addr Device address to be configured for the pipe.
 797:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_speed  Device speed class.
 798:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_addr Hub address. It should be 0 since hub is not supported.
 799:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_port USB port number. Only one port(0) is supported.
 800:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 801:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 802:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 803:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 804:../Libraries/XMCLib/src/xmc_usbh.c ****  * Modify an existing pipe with input parameters. It can be used to configure the pipe after receiv
 805:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 806:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 807:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 808:../Libraries/XMCLib/src/xmc_usbh.c **** */
 809:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeModify (XMC_USBH_PIPE_HANDLE pipe_hndl, uint8_t dev_addr, uint8_t dev_s
 523              	 .loc 1 809 0
 524              	 .cfi_startproc
 525              	 
 526              	 
 527              	 
 528              	.LVL72:
 529 0000 30B4     	 push {r4,r5}
 530              	.LCFI3:
 531              	 .cfi_def_cfa_offset 8
 532              	 .cfi_offset 4,-8
 533              	 .cfi_offset 5,-4
 534 0002 BDF80C40 	 ldrh r4,[sp,#12]
 535              	.LVL73:
 810:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 811:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 812:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t   hcchar;
 813:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 814:../Libraries/XMCLib/src/xmc_usbh.c **** 
 815:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 536              	 .loc 1 815 0
 537 0006 154B     	 ldr r3,.L57
 538              	.LVL74:
 539 0008 5B7C     	 ldrb r3,[r3,#17]
 540 000a EBB1     	 cbz r3,.L53
 816:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 817:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 818:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 819:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 820:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 821:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 541              	 .loc 1 821 0
 542 000c F8B1     	 cbz r0,.L54
 543              	.LVL75:
 822:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 823:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 824:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 826:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 827:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 828:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 544              	 .loc 1 828 0
 545 000e 134B     	 ldr r3,.L57
 546 0010 5B68     	 ldr r3,[r3,#4]
 547 0012 C31A     	 subs r3,r0,r3
 548 0014 5B11     	 asrs r3,r3,#5
 549              	.LVL76:
 829:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 550              	 .loc 1 829 0
 551 0016 124A     	 ldr r2,.L57+4
 552              	.LVL77:
 553 0018 02EB4312 	 add r2,r2,r3,lsl#5
 554 001c 1832     	 adds r2,r2,#24
 555 001e D278     	 ldrb r2,[r2,#3]
 556 0020 12F0FF0F 	 tst r2,#255
 557 0024 16D1     	 bne .L55
 830:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 831:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 832:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 833:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 834:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 835:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Fill in all fields of channel */
 836:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar  =   ptr_ch->HCCHAR;
 558              	 .loc 1 836 0
 559 0026 0568     	 ldr r5,[r0]
 560              	.LVL78:
 837:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Clear fields */
 838:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar &= (uint32_t)~(USB_CH_HCCHAR_MPS_Msk | USB_CH_HCCHAR_DevAddr_Msk)  ;
 561              	 .loc 1 838 0
 562 0028 0E4A     	 ldr r2,.L57+8
 563 002a 2A40     	 ands r2,r2,r5
 564              	.LVL79:
 839:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Set fields */
 840:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar |= (uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size) | (USB_CH_HCCHARx_DEVADDR(dev_a
 565              	 .loc 1 840 0
 566 002c C4F30A05 	 ubfx r5,r4,#0,#11
 567 0030 8905     	 lsls r1,r1,#22
 568              	.LVL80:
 569 0032 01F0FE51 	 and r1,r1,#532676608
 570 0036 2943     	 orrs r1,r1,r5
 571 0038 1143     	 orrs r1,r1,r2
 572              	.LVL81:
 841:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCCHAR = hcchar;
 573              	 .loc 1 841 0
 574 003a 0160     	 str r1,[r0]
 842:../Libraries/XMCLib/src/xmc_usbh.c **** 
 843:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 575              	 .loc 1 843 0
 576 003c 084A     	 ldr r2,.L57+4
 577 003e 02EB4313 	 add r3,r2,r3,lsl#5
 578              	.LVL82:
 579 0042 9C82     	 strh r4,[r3,#20]
 813:../Libraries/XMCLib/src/xmc_usbh.c **** 
 580              	 .loc 1 813 0
 581 0044 0020     	 movs r0,#0
 582              	.LVL83:
 583 0046 07E0     	 b .L52
 584              	.LVL84:
 585              	.L53:
 817:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 586              	 .loc 1 817 0
 587 0048 4FF0FF30 	 mov r0,#-1
 588              	.LVL85:
 589 004c 04E0     	 b .L52
 590              	.LVL86:
 591              	.L54:
 823:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 592              	 .loc 1 823 0
 593 004e 6FF00400 	 mvn r0,#4
 594              	.LVL87:
 595 0052 01E0     	 b .L52
 596              	.LVL88:
 597              	.L55:
 831:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 598              	 .loc 1 831 0
 599 0054 6FF00100 	 mvn r0,#1
 600              	.LVL89:
 601              	.L52:
 844:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 845:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 846:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 847:../Libraries/XMCLib/src/xmc_usbh.c ****   
 848:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 849:../Libraries/XMCLib/src/xmc_usbh.c **** }
 602              	 .loc 1 849 0
 603 0058 30BC     	 pop {r4,r5}
 604              	.LCFI4:
 605              	 .cfi_restore 5
 606              	 .cfi_restore 4
 607              	 .cfi_def_cfa_offset 0
 608              	.LVL90:
 609 005a 7047     	 bx lr
 610              	.L58:
 611              	 .align 2
 612              	.L57:
 613 005c 00000000 	 .word .LANCHOR0
 614 0060 00000000 	 .word pipe
 615 0064 00F83FE0 	 .word -532678656
 616              	 .cfi_endproc
 617              	.LFE193:
 619              	 .section .text.XMC_USBH_PipeReset,"ax",%progbits
 620              	 .align 2
 621              	 .thumb
 622              	 .thumb_func
 624              	XMC_USBH_PipeReset:
 625              	.LFB195:
 850:../Libraries/XMCLib/src/xmc_usbh.c **** 
 851:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 852:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 853:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 854:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 855:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 856:../Libraries/XMCLib/src/xmc_usbh.c ****  * Delete pipe from active pipes list. After it is deleted, it can be assigned to new pipe request.
 857:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 858:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 859:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 860:../Libraries/XMCLib/src/xmc_usbh.c **** */
 861:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeDelete (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 862:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 863:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 864:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 865:../Libraries/XMCLib/src/xmc_usbh.c **** 
 866:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 867:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 868:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 869:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 870:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 871:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 872:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl == 0U)
 873:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 874:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 875:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 876:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 877:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 878:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 879:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 880:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 881:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 882:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 883:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 884:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 885:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 886:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCCHAR            = 0U;
 887:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 888:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 889:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 890:../Libraries/XMCLib/src/xmc_usbh.c **** 
 891:../Libraries/XMCLib/src/xmc_usbh.c ****         memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));
 892:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 893:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 894:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbh.c **** 
 896:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 897:../Libraries/XMCLib/src/xmc_usbh.c **** }
 898:../Libraries/XMCLib/src/xmc_usbh.c **** 
 899:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 900:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 901:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 902:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 903:../Libraries/XMCLib/src/xmc_usbh.c ****  * Reset pipe by clearing the interrupt mask and resetting the transfer control register.\n
 904:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 905:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 906:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
 907:../Libraries/XMCLib/src/xmc_usbh.c **** */
 908:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeReset (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 626              	 .loc 1 908 0
 627              	 .cfi_startproc
 628              	 
 629              	 
 630              	 
 631              	.LVL91:
 909:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 910:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 911:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 912:../Libraries/XMCLib/src/xmc_usbh.c **** 
 913:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 632              	 .loc 1 913 0
 633 0000 0E4B     	 ldr r3,.L64
 634 0002 5B7C     	 ldrb r3,[r3,#17]
 635 0004 8BB1     	 cbz r3,.L61
 914:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 915:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 916:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 917:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 918:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 919:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 636              	 .loc 1 919 0
 637 0006 98B1     	 cbz r0,.L62
 638              	.LVL92:
 920:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 921:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 922:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 923:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 924:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 925:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 926:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 639              	 .loc 1 926 0
 640 0008 0C4B     	 ldr r3,.L64
 641 000a 5B68     	 ldr r3,[r3,#4]
 642 000c C31A     	 subs r3,r0,r3
 927:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 643              	 .loc 1 927 0
 644 000e 23F01F03 	 bic r3,r3,#31
 645 0012 0B4A     	 ldr r2,.L64+4
 646 0014 1344     	 add r3,r3,r2
 647 0016 DB78     	 ldrb r3,[r3,#3]
 648 0018 13F0FF0F 	 tst r3,#255
 649 001c 0BD1     	 bne .L63
 928:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 929:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 930:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 931:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 932:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 933:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT    = 0U;
 650              	 .loc 1 933 0
 651 001e 0023     	 movs r3,#0
 652 0020 8360     	 str r3,[r0,#8]
 934:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK = 0U;
 653              	 .loc 1 934 0
 654 0022 C360     	 str r3,[r0,#12]
 935:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE   = 0U;
 655              	 .loc 1 935 0
 656 0024 0361     	 str r3,[r0,#16]
 911:../Libraries/XMCLib/src/xmc_usbh.c **** 
 657              	 .loc 1 911 0
 658 0026 1846     	 mov r0,r3
 659              	.LVL93:
 660 0028 7047     	 bx lr
 661              	.LVL94:
 662              	.L61:
 915:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 663              	 .loc 1 915 0
 664 002a 4FF0FF30 	 mov r0,#-1
 665              	.LVL95:
 666 002e 7047     	 bx lr
 667              	.LVL96:
 668              	.L62:
 921:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 669              	 .loc 1 921 0
 670 0030 6FF00400 	 mvn r0,#4
 671              	.LVL97:
 672 0034 7047     	 bx lr
 673              	.LVL98:
 674              	.L63:
 929:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 675              	 .loc 1 929 0
 676 0036 6FF00100 	 mvn r0,#1
 677              	.LVL99:
 936:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 937:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 938:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 939:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 940:../Libraries/XMCLib/src/xmc_usbh.c **** }
 678              	 .loc 1 940 0
 679 003a 7047     	 bx lr
 680              	.L65:
 681              	 .align 2
 682              	.L64:
 683 003c 00000000 	 .word .LANCHOR0
 684 0040 18000000 	 .word pipe+24
 685              	 .cfi_endproc
 686              	.LFE195:
 688              	 .section .text.XMC_USBH_PipeTransfer,"ax",%progbits
 689              	 .align 2
 690              	 .thumb
 691              	 .thumb_func
 693              	XMC_USBH_PipeTransfer:
 694              	.LFB196:
 941:../Libraries/XMCLib/src/xmc_usbh.c **** 
 942:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 943:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 944:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param packet Packet information with bit masks to represent packet data toggle information and 
 945:../Libraries/XMCLib/src/xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_DATA0 / \ref XMC_USBH_PACKET_DATA1, \ref XMC_USBH_PACKET_SETU
 946:../Libraries/XMCLib/src/xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_OUT / \ref XMC_USBH_PACKET_IN
 947:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param data Pointer to buffer with data to send or for received data to be stored.
 948:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param num Number of data bytes to transfer
 949:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 950:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 951:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Description:</b><BR>
 952:../Libraries/XMCLib/src/xmc_usbh.c ****  *  Transfer packets through USB Pipe. Handles transfer of multiple packets using the pipe transfer
 953:../Libraries/XMCLib/src/xmc_usbh.c ****  *  The pipe event callback function will be called when the transfer is completed.\n
 954:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 955:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 956:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset() \n
 957:../Libraries/XMCLib/src/xmc_usbh.c **** */
 958:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeTransfer (XMC_USBH_PIPE_HANDLE pipe_hndl, uint32_t packet, uint8_t *dat
 695              	 .loc 1 958 0
 696              	 .cfi_startproc
 697              	 
 698              	 
 699              	.LVL100:
 700 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 701              	.LCFI5:
 702              	 .cfi_def_cfa_offset 24
 703              	 .cfi_offset 3,-24
 704              	 .cfi_offset 4,-20
 705              	 .cfi_offset 5,-16
 706              	 .cfi_offset 6,-12
 707              	 .cfi_offset 7,-8
 708              	 .cfi_offset 14,-4
 709              	.LVL101:
 959:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 960:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 961:../Libraries/XMCLib/src/xmc_usbh.c **** 
 962:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 710              	 .loc 1 962 0
 711 0002 2B4C     	 ldr r4,.L75
 712 0004 647C     	 ldrb r4,[r4,#17]
 713 0006 002C     	 cmp r4,#0
 714 0008 42D0     	 beq .L69
 963:../Libraries/XMCLib/src/xmc_usbh.c ****   { 
 964:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 965:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 966:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 967:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 968:../Libraries/XMCLib/src/xmc_usbh.c **** 
 969:../Libraries/XMCLib/src/xmc_usbh.c ****     if(!(((((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_OUT) ||
 715              	 .loc 1 969 0
 716 000a 01F00F04 	 and r4,r1,#15
 717 000e 013C     	 subs r4,r4,#1
 718 0010 022C     	 cmp r4,#2
 719 0012 40D8     	 bhi .L70
 970:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 971:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_SETUP )))
 972:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 973:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 974:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 975:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 976:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 977:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pipe_hndl  == 0U)
 720              	 .loc 1 977 0
 721 0014 0028     	 cmp r0,#0
 722 0016 41D0     	 beq .L71
 978:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 979:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 980:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 981:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 982:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 983:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk) == 0U)
 723              	 .loc 1 983 0
 724 0018 254C     	 ldr r4,.L75
 725 001a 2468     	 ldr r4,[r4]
 726 001c D4F84044 	 ldr r4,[r4,#1088]
 727 0020 14F0010F 	 tst r4,#1
 728 0024 3DD0     	 beq .L72
 984:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 985:../Libraries/XMCLib/src/xmc_usbh.c ****           status = XMC_USBH_DRIVER_ERROR;
 986:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 987:../Libraries/XMCLib/src/xmc_usbh.c ****         else
 988:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 989:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)
 729              	 .loc 1 989 0
 730 0026 224C     	 ldr r4,.L75
 731 0028 6568     	 ldr r5,[r4,#4]
 732 002a 451B     	 subs r5,r0,r5
 733 002c 6D11     	 asrs r5,r5,#5
 734 002e 214E     	 ldr r6,.L75+4
 735 0030 06EB4516 	 add r6,r6,r5,lsl#5
 736              	.LVL102:
 990:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->in_use != 0U)
 737              	 .loc 1 990 0
 738 0034 F47E     	 ldrb r4,[r6,#27]
 739 0036 14F0FF0F 	 tst r4,#255
 740 003a 35D1     	 bne .L73
 991:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 992:../Libraries/XMCLib/src/xmc_usbh.c ****             status = XMC_USBH_DRIVER_ERROR_BUSY;
 993:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 994:../Libraries/XMCLib/src/xmc_usbh.c ****           else
 995:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 996:../Libraries/XMCLib/src/xmc_usbh.c ****             /* Prepare transfer information */
 997:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet                = packet;
 741              	 .loc 1 997 0
 742 003c DFF874E0 	 ldr lr,.L75+4
 743 0040 6F01     	 lsls r7,r5,#5
 744 0042 0EEB0704 	 add r4,lr,r7
 745 0046 4EF80710 	 str r1,[lr,r7]
 998:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->data                  = data;
 746              	 .loc 1 998 0
 747 004a 6260     	 str r2,[r4,#4]
 999:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num                   = num;
 748              	 .loc 1 999 0
 749 004c A360     	 str r3,[r4,#8]
1000:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total = 0U;
 750              	 .loc 1 1000 0
 751 004e 0022     	 movs r2,#0
 752              	.LVL103:
 753 0050 E260     	 str r2,[r4,#12]
1001:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring      = 0U;
 754              	 .loc 1 1001 0
 755 0052 2261     	 str r2,[r4,#16]
1002:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use                = 0U;
 756              	 .loc 1 1002 0
 757 0054 E276     	 strb r2,[r4,#27]
1003:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active       = 0U;
 758              	 .loc 1 1003 0
 759 0056 2277     	 strb r2,[r4,#28]
1004:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered   = 0U;
 760              	 .loc 1 1004 0
 761 0058 6277     	 strb r2,[r4,#29]
1005:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event                 = 0U;
 762              	 .loc 1 1005 0
 763 005a A277     	 strb r2,[r4,#30]
1006:../Libraries/XMCLib/src/xmc_usbh.c **** 
1007:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->interval 
 764              	 .loc 1 1007 0
 765 005c A37E     	 ldrb r3,[r4,#26]
 766              	.LVL104:
 767 005e DBB2     	 uxtb r3,r3
 768 0060 032B     	 cmp r3,#3
 769 0062 06D1     	 bne .L68
 770              	 .loc 1 1007 0 is_stmt 0 discriminator 1
 771 0064 338B     	 ldrh r3,[r6,#24]
 772 0066 9BB2     	 uxth r3,r3
 773 0068 1BB1     	 cbz r3,.L68
1008:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U; /* transfer will be started inside interrupt (SOF
 774              	 .loc 1 1008 0 is_stmt 1
 775 006a 0123     	 movs r3,#1
 776 006c F376     	 strb r3,[r6,#27]
 960:../Libraries/XMCLib/src/xmc_usbh.c **** 
 777              	 .loc 1 960 0
 778 006e 1046     	 mov r0,r2
 779              	.LVL105:
 780              	 .loc 1 1008 0
 781 0070 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 782              	.LVL106:
 783              	.L68:
 784 0072 0146     	 mov r1,r0
 785              	.LVL107:
1009:../Libraries/XMCLib/src/xmc_usbh.c ****             } else {
1010:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->transfer_active     = 1U;
 786              	 .loc 1 1010 0
 787 0074 0F4B     	 ldr r3,.L75+4
 788 0076 03EB4515 	 add r5,r3,r5,lsl#5
 789 007a 0123     	 movs r3,#1
 790 007c 2B77     	 strb r3,[r5,#28]
1011:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U;
 791              	 .loc 1 1011 0
 792 007e EB76     	 strb r3,[r5,#27]
1012:../Libraries/XMCLib/src/xmc_usbh.c ****               if(XMC_lStartTransfer (ptr_pipe, (USB0_CH_TypeDef *)pipe_hndl) == false)
 793              	 .loc 1 1012 0
 794 0080 3046     	 mov r0,r6
 795              	.LVL108:
 796 0082 FFF7FEFF 	 bl XMC_lStartTransfer
 797              	.LVL109:
 798 0086 80F00100 	 eor r0,r0,#1
 799 008a C0B2     	 uxtb r0,r0
 800 008c 4042     	 negs r0,r0
 801 008e F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 802              	.LVL110:
 803              	.L69:
 964:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 804              	 .loc 1 964 0
 805 0090 4FF0FF30 	 mov r0,#-1
 806              	.LVL111:
 807 0094 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 808              	.LVL112:
 809              	.L70:
 973:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 810              	 .loc 1 973 0
 811 0096 6FF00400 	 mvn r0,#4
 812              	.LVL113:
 813 009a F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 814              	.LVL114:
 815              	.L71:
 979:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 816              	 .loc 1 979 0
 817 009c 6FF00400 	 mvn r0,#4
 818              	.LVL115:
 819 00a0 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 820              	.LVL116:
 821              	.L72:
 985:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 822              	 .loc 1 985 0
 823 00a2 4FF0FF30 	 mov r0,#-1
 824              	.LVL117:
 825 00a6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 826              	.LVL118:
 827              	.L73:
 992:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 828              	 .loc 1 992 0
 829 00a8 6FF00100 	 mvn r0,#1
 830              	.LVL119:
1013:../Libraries/XMCLib/src/xmc_usbh.c ****               {
1014:../Libraries/XMCLib/src/xmc_usbh.c ****                 status = XMC_USBH_DRIVER_ERROR;
1015:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1016:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1017:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1018:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1019:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1020:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1021:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1022:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1023:../Libraries/XMCLib/src/xmc_usbh.c **** }
 831              	 .loc 1 1023 0
 832 00ac F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 833              	.LVL120:
 834              	.L76:
 835 00ae 00BF     	 .align 2
 836              	.L75:
 837 00b0 00000000 	 .word .LANCHOR0
 838 00b4 00000000 	 .word pipe
 839              	 .cfi_endproc
 840              	.LFE196:
 842              	 .section .text.XMC_USBH_PipeTransferGetResult,"ax",%progbits
 843              	 .align 2
 844              	 .thumb
 845              	 .thumb_func
 847              	XMC_USBH_PipeTransferGetResult:
 848              	.LFB197:
1024:../Libraries/XMCLib/src/xmc_usbh.c **** 
1025:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1026:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1027:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return uint32_t Number of successfully transferred data bytes
1028:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1029:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Description:</b><BR>
1030:../Libraries/XMCLib/src/xmc_usbh.c ****  *  Get result of USB Pipe transfer.
1031:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1032:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1033:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1034:../Libraries/XMCLib/src/xmc_usbh.c **** */
1035:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 849              	 .loc 1 1035 0
 850              	 .cfi_startproc
 851              	 
 852              	 
 853              	 
 854              	.LVL121:
1036:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t status;
1037:../Libraries/XMCLib/src/xmc_usbh.c ****   if (pipe_hndl == 0U)
 855              	 .loc 1 1037 0
 856 0000 40B1     	 cbz r0,.L79
1038:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1039:../Libraries/XMCLib/src/xmc_usbh.c ****     status = 0U;
1040:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1041:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1042:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1043:../Libraries/XMCLib/src/xmc_usbh.c ****     status = (pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channe
 857              	 .loc 1 1043 0
 858 0002 054A     	 ldr r2,.L80
 859 0004 5268     	 ldr r2,[r2,#4]
 860 0006 831A     	 subs r3,r0,r2
 861 0008 23F01F03 	 bic r3,r3,#31
 862 000c 034A     	 ldr r2,.L80+4
 863 000e 1344     	 add r3,r3,r2
 864 0010 5868     	 ldr r0,[r3,#4]
 865              	.LVL122:
 866 0012 7047     	 bx lr
 867              	.LVL123:
 868              	.L79:
1039:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 869              	 .loc 1 1039 0
 870 0014 0020     	 movs r0,#0
 871              	.LVL124:
1044:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1045:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1046:../Libraries/XMCLib/src/xmc_usbh.c **** }
 872              	 .loc 1 1046 0
 873 0016 7047     	 bx lr
 874              	.L81:
 875              	 .align 2
 876              	.L80:
 877 0018 00000000 	 .word .LANCHOR0
 878 001c 08000000 	 .word pipe+8
 879              	 .cfi_endproc
 880              	.LFE197:
 882              	 .section .text.XMC_USBH_GetFrameNumber,"ax",%progbits
 883              	 .align 2
 884              	 .thumb
 885              	 .thumb_func
 887              	XMC_USBH_GetFrameNumber:
 888              	.LFB199:
1047:../Libraries/XMCLib/src/xmc_usbh.c **** 
1048:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1049:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1050:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
1051:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1052:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1053:../Libraries/XMCLib/src/xmc_usbh.c ****  * Abort current USB Pipe transfer.\n
1054:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1055:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1056:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1057:../Libraries/XMCLib/src/xmc_usbh.c **** */
1058:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeTransferAbort (XMC_USBH_PIPE_HANDLE pipe_hndl) {
1059:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1060:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1061:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t timeout;
1062:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_ERROR;
1063:../Libraries/XMCLib/src/xmc_usbh.c ****   
1064:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch = (USB0_CH_TypeDef *) pipe_hndl;
1065:../Libraries/XMCLib/src/xmc_usbh.c ****   
1066:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
1067:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1068:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Error in power state*/
1069:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1070:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1071:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1072:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
1073:../Libraries/XMCLib/src/xmc_usbh.c ****     {
1074:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
1075:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1076:../Libraries/XMCLib/src/xmc_usbh.c ****     else
1077:../Libraries/XMCLib/src/xmc_usbh.c ****     {
1078:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
1079:../Libraries/XMCLib/src/xmc_usbh.c **** 
1080:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U) {
1081:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->in_use = 0U;
1082:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Disable channel if not yet halted */
1083:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) == 0U)
1084:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1085:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_ch->HCCHAR & USB_CH_HCCHAR_ChEna_Msk)
1086:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1087:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;
1088:../Libraries/XMCLib/src/xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
1089:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
1090:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
1091:../Libraries/XMCLib/src/xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
1092:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1093:../Libraries/XMCLib/src/xmc_usbh.c ****             else
1094:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1095:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;      /* Clear all interrupts */
1096:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCCHAR =  (uint32_t)(ptr_ch->HCCHAR | USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR
1097:../Libraries/XMCLib/src/xmc_usbh.c **** 
1098:../Libraries/XMCLib/src/xmc_usbh.c ****               /* wait until channel is halted */
1099:../Libraries/XMCLib/src/xmc_usbh.c ****               for (timeout = 0U; timeout < 5000U; timeout++) {
1100:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
1101:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
1102:../Libraries/XMCLib/src/xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
1103:../Libraries/XMCLib/src/xmc_usbh.c ****                 }
1104:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1105:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1106:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1107:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1108:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1109:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1110:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1111:../Libraries/XMCLib/src/xmc_usbh.c **** 
1112:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1113:../Libraries/XMCLib/src/xmc_usbh.c **** }
1114:../Libraries/XMCLib/src/xmc_usbh.c **** 
1115:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1116:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Frame number.
1117:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1118:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1119:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get current USB Frame Number.
1120:../Libraries/XMCLib/src/xmc_usbh.c **** */
1121:../Libraries/XMCLib/src/xmc_usbh.c **** static uint16_t XMC_USBH_GetFrameNumber (void)
1122:../Libraries/XMCLib/src/xmc_usbh.c **** {
 889              	 .loc 1 1122 0
 890              	 .cfi_startproc
 891              	 
 892              	 
 893              	 
1123:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t status;
1124:../Libraries/XMCLib/src/xmc_usbh.c ****   
1125:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 894              	 .loc 1 1125 0
 895 0000 054B     	 ldr r3,.L85
 896 0002 5B7C     	 ldrb r3,[r3,#17]
 897 0004 33B1     	 cbz r3,.L84
1126:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1127:../Libraries/XMCLib/src/xmc_usbh.c ****     status = 0U;
1128:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1129:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1130:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1131:../Libraries/XMCLib/src/xmc_usbh.c ****     status = (uint16_t)((XMC_USBH0_device.global_register->HFNUM) & 0xFFFU);
 898              	 .loc 1 1131 0
 899 0006 044B     	 ldr r3,.L85
 900 0008 1B68     	 ldr r3,[r3]
 901 000a D3F80804 	 ldr r0,[r3,#1032]
 902 000e C0F30B00 	 ubfx r0,r0,#0,#12
 903              	.LVL125:
 904 0012 7047     	 bx lr
 905              	.LVL126:
 906              	.L84:
1127:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 907              	 .loc 1 1127 0
 908 0014 0020     	 movs r0,#0
 909              	.LVL127:
1132:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1133:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1134:../Libraries/XMCLib/src/xmc_usbh.c **** }
 910              	 .loc 1 1134 0
 911 0016 7047     	 bx lr
 912              	.L86:
 913              	 .align 2
 914              	.L85:
 915 0018 00000000 	 .word .LANCHOR0
 916              	 .cfi_endproc
 917              	.LFE199:
 919              	 .section .text.XMC_USBH_PortVbusOnOff,"ax",%progbits
 920              	 .align 2
 921              	 .thumb
 922              	 .thumb_func
 924              	XMC_USBH_PortVbusOnOff:
 925              	.LFB187:
 499:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 926              	 .loc 1 499 0
 927              	 .cfi_startproc
 928              	 
 929              	 
 930              	.LVL128:
 931 0000 08B5     	 push {r3,lr}
 932              	.LCFI6:
 933              	 .cfi_def_cfa_offset 8
 934              	 .cfi_offset 3,-8
 935              	 .cfi_offset 14,-4
 936              	.LVL129:
 501:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 937              	 .loc 1 501 0
 938 0002 164B     	 ldr r3,.L93
 939 0004 5B7C     	 ldrb r3,[r3,#17]
 940 0006 1BB3     	 cbz r3,.L90
 507:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 941              	 .loc 1 507 0
 942 0008 28BB     	 cbnz r0,.L91
 513:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power on */
 943              	 .loc 1 513 0
 944 000a 81B1     	 cbz r1,.L89
 515:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 945              	 .loc 1 515 0
 946 000c 134B     	 ldr r3,.L93
 947 000e 1A68     	 ldr r2,[r3]
 948 0010 D2F84034 	 ldr r3,[r2,#1088]
 949 0014 43F48053 	 orr r3,r3,#4096
 950 0018 C2F84034 	 str r3,[r2,#1088]
 516:../Libraries/XMCLib/src/xmc_usbh.c ****       } else {
 951              	 .loc 1 516 0
 952 001c 104B     	 ldr r3,.L93+4
 953 001e 1868     	 ldr r0,[r3]
 954              	.LVL130:
 955 0020 104B     	 ldr r3,.L93+8
 956 0022 1978     	 ldrb r1,[r3]
 957              	.LVL131:
 958 0024 8822     	 movs r2,#136
 959 0026 FFF7FEFF 	 bl XMC_GPIO_SetMode
 960              	.LVL132:
 500:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 961              	 .loc 1 500 0
 962 002a 0020     	 movs r0,#0
 963 002c 08BD     	 pop {r3,pc}
 964              	.LVL133:
 965              	.L89:
 519:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 966              	 .loc 1 519 0
 967 002e 0B4B     	 ldr r3,.L93
 968 0030 1A68     	 ldr r2,[r3]
 969 0032 D2F84034 	 ldr r3,[r2,#1088]
 970 0036 23F48053 	 bic r3,r3,#4096
 971 003a C2F84034 	 str r3,[r2,#1088]
 520:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 972              	 .loc 1 520 0
 973 003e 084B     	 ldr r3,.L93+4
 974 0040 1868     	 ldr r0,[r3]
 975              	.LVL134:
 976 0042 084B     	 ldr r3,.L93+8
 977 0044 1978     	 ldrb r1,[r3]
 978              	.LVL135:
 979 0046 0022     	 movs r2,#0
 980 0048 FFF7FEFF 	 bl XMC_GPIO_SetMode
 981              	.LVL136:
 500:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 982              	 .loc 1 500 0
 983 004c 0020     	 movs r0,#0
 984 004e 08BD     	 pop {r3,pc}
 985              	.LVL137:
 986              	.L90:
 503:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 987              	 .loc 1 503 0
 988 0050 4FF0FF30 	 mov r0,#-1
 989              	.LVL138:
 990 0054 08BD     	 pop {r3,pc}
 991              	.LVL139:
 992              	.L91:
 509:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 993              	 .loc 1 509 0
 994 0056 6FF00400 	 mvn r0,#4
 995              	.LVL140:
 525:../Libraries/XMCLib/src/xmc_usbh.c **** 
 996              	 .loc 1 525 0
 997 005a 08BD     	 pop {r3,pc}
 998              	.L94:
 999              	 .align 2
 1000              	.L93:
 1001 005c 00000000 	 .word .LANCHOR0
 1002 0060 00000000 	 .word .LANCHOR3
 1003 0064 00000000 	 .word .LANCHOR4
 1004              	 .cfi_endproc
 1005              	.LFE187:
 1007              	 .section .text.XMC_USBH_Initialize,"ax",%progbits
 1008              	 .align 2
 1009              	 .thumb
 1010              	 .thumb_func
 1012              	XMC_USBH_Initialize:
 1013              	.LFB184:
 337:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1014              	 .loc 1 337 0
 1015              	 .cfi_startproc
 1016              	 
 1017              	 
 1018              	.LVL141:
 1019 0000 08B5     	 push {r3,lr}
 1020              	.LCFI7:
 1021              	 .cfi_def_cfa_offset 8
 1022              	 .cfi_offset 3,-8
 1023              	 .cfi_offset 14,-4
 1024              	.LVL142:
 341:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 1025              	 .loc 1 341 0
 1026 0002 0E4B     	 ldr r3,.L100
 1027 0004 1B7C     	 ldrb r3,[r3,#16]
 1028 0006 B3B9     	 cbnz r3,.L96
 348:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 1029              	 .loc 1 348 0
 1030 0008 0C4B     	 ldr r3,.L100
 1031 000a 9860     	 str r0,[r3,#8]
 349:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1032              	 .loc 1 349 0
 1033 000c D960     	 str r1,[r3,#12]
 1034              	.LVL143:
 1035 000e 0C49     	 ldr r1,.L100+4
 1036              	.LVL144:
 1037 0010 0A1F     	 subs r2,r1,#4
 1038 0012 3431     	 adds r1,r1,#52
 1039 0014 0B4B     	 ldr r3,.L100+8
 1040              	.LVL145:
 1041              	.L97:
 353:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1042              	 .loc 1 353 0 discriminator 3
 1043 0016 42F8043F 	 str r3,[r2,#4]!
 1044 001a 03F58053 	 add r3,r3,#4096
 352:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 1045              	 .loc 1 352 0 discriminator 3
 1046 001e 8A42     	 cmp r2,r1
 1047 0020 F9D1     	 bne .L97
 356:../Libraries/XMCLib/src/xmc_usbh.c ****   
 1048              	 .loc 1 356 0
 1049 0022 094B     	 ldr r3,.L100+12
 1050 0024 1868     	 ldr r0,[r3]
 1051              	.LVL146:
 1052 0026 094B     	 ldr r3,.L100+16
 1053 0028 1978     	 ldrb r1,[r3]
 1054 002a 8822     	 movs r2,#136
 1055 002c FFF7FEFF 	 bl XMC_GPIO_SetMode
 1056              	.LVL147:
 358:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 1057              	 .loc 1 358 0
 1058 0030 0122     	 movs r2,#1
 1059 0032 024B     	 ldr r3,.L100
 1060 0034 1A74     	 strb r2,[r3,#16]
 1061              	.L96:
 361:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1062              	 .loc 1 361 0
 1063 0036 0020     	 movs r0,#0
 1064 0038 08BD     	 pop {r3,pc}
 1065              	.L101:
 1066 003a 00BF     	 .align 2
 1067              	.L100:
 1068 003c 00000000 	 .word .LANCHOR0
 1069 0040 00000000 	 .word .LANCHOR1
 1070 0044 00100450 	 .word 1342443520
 1071 0048 00000000 	 .word .LANCHOR3
 1072 004c 00000000 	 .word .LANCHOR4
 1073              	 .cfi_endproc
 1074              	.LFE184:
 1076              	 .section .text.XMC_USBH_PipeDelete,"ax",%progbits
 1077              	 .align 2
 1078              	 .thumb
 1079              	 .thumb_func
 1081              	XMC_USBH_PipeDelete:
 1082              	.LFB194:
 861:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 1083              	 .loc 1 861 0
 1084              	 .cfi_startproc
 1085              	 
 1086              	 
 1087              	.LVL148:
 866:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 1088              	 .loc 1 866 0
 1089 0000 124A     	 ldr r2,.L109
 1090 0002 527C     	 ldrb r2,[r2,#17]
 1091 0004 C2B1     	 cbz r2,.L104
 1092 0006 0346     	 mov r3,r0
 872:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 1093              	 .loc 1 872 0
 1094 0008 C8B1     	 cbz r0,.L105
 1095              	.LVL149:
 879:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 1096              	 .loc 1 879 0
 1097 000a 104A     	 ldr r2,.L109
 1098 000c 5268     	 ldr r2,[r2,#4]
 1099 000e 821A     	 subs r2,r0,r2
 1100 0010 22F01F02 	 bic r2,r2,#31
 1101 0014 0E48     	 ldr r0,.L109+4
 1102              	.LVL150:
 1103 0016 1044     	 add r0,r0,r2
 1104              	.LVL151:
 880:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 1105              	 .loc 1 880 0
 1106 0018 C27E     	 ldrb r2,[r0,#27]
 1107 001a 12F0FF0F 	 tst r2,#255
 1108 001e 11D1     	 bne .L106
 861:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 1109              	 .loc 1 861 0
 1110 0020 10B5     	 push {r4,lr}
 1111              	.LCFI8:
 1112              	 .cfi_def_cfa_offset 8
 1113              	 .cfi_offset 4,-8
 1114              	 .cfi_offset 14,-4
 886:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 1115              	 .loc 1 886 0
 1116 0022 0024     	 movs r4,#0
 1117 0024 1C60     	 str r4,[r3]
 887:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 1118              	 .loc 1 887 0
 1119 0026 9C60     	 str r4,[r3,#8]
 888:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 1120              	 .loc 1 888 0
 1121 0028 DC60     	 str r4,[r3,#12]
 889:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1122              	 .loc 1 889 0
 1123 002a 1C61     	 str r4,[r3,#16]
 891:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 1124              	 .loc 1 891 0
 1125 002c 2146     	 mov r1,r4
 1126 002e 2022     	 movs r2,#32
 1127 0030 FFF7FEFF 	 bl memset
 1128              	.LVL152:
 864:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1129              	 .loc 1 864 0
 1130 0034 2046     	 mov r0,r4
 1131 0036 10BD     	 pop {r4,pc}
 1132              	.LVL153:
 1133              	.L104:
 1134              	.LCFI9:
 1135              	 .cfi_def_cfa_offset 0
 1136              	 .cfi_restore 4
 1137              	 .cfi_restore 14
 868:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 1138              	 .loc 1 868 0
 1139 0038 4FF0FF30 	 mov r0,#-1
 1140              	.LVL154:
 897:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1141              	 .loc 1 897 0
 1142 003c 7047     	 bx lr
 1143              	.LVL155:
 1144              	.L105:
 874:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1145              	 .loc 1 874 0
 1146 003e 6FF00400 	 mvn r0,#4
 1147              	.LVL156:
 1148 0042 7047     	 bx lr
 1149              	.LVL157:
 1150              	.L106:
 882:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 1151              	 .loc 1 882 0
 1152 0044 6FF00100 	 mvn r0,#1
 1153              	.LVL158:
 1154 0048 7047     	 bx lr
 1155              	.L110:
 1156 004a 00BF     	 .align 2
 1157              	.L109:
 1158 004c 00000000 	 .word .LANCHOR0
 1159 0050 00000000 	 .word pipe
 1160              	 .cfi_endproc
 1161              	.LFE194:
 1163              	 .section .text.XMC_USBH_PipeCreate,"ax",%progbits
 1164              	 .align 2
 1165              	 .thumb
 1166              	 .thumb_func
 1168              	XMC_USBH_PipeCreate:
 1169              	.LFB192:
 724:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 1170              	 .loc 1 724 0
 1171              	 .cfi_startproc
 1172              	 
 1173              	 
 1174              	.LVL159:
 1175 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1176              	.LCFI10:
 1177              	 .cfi_def_cfa_offset 24
 1178              	 .cfi_offset 4,-24
 1179              	 .cfi_offset 5,-20
 1180              	 .cfi_offset 6,-16
 1181              	 .cfi_offset 7,-12
 1182              	 .cfi_offset 8,-8
 1183              	 .cfi_offset 14,-4
 1184 0004 9DF818E0 	 ldrb lr,[sp,#24]
 1185 0008 9DF81C70 	 ldrb r7,[sp,#28]
 1186 000c BDF82060 	 ldrh r6,[sp,#32]
 1187 0010 9DF824C0 	 ldrb ip,[sp,#36]
 730:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 1188              	 .loc 1 730 0
 1189 0014 384B     	 ldr r3,.L127
 1190              	.LVL160:
 1191 0016 5B7C     	 ldrb r3,[r3,#17]
 1192 0018 002B     	 cmp r3,#0
 1193 001a 60D0     	 beq .L119
 737:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1194              	 .loc 1 737 0
 1195 001c 364B     	 ldr r3,.L127
 1196 001e 5D68     	 ldr r5,[r3,#4]
 1197              	.LVL161:
 740:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 1198              	 .loc 1 740 0
 1199 0020 2B68     	 ldr r3,[r5]
 1200 0022 23F04043 	 bic r3,r3,#-1073741824
 1201 0026 002B     	 cmp r3,#0
 1202 0028 5DD1     	 bne .L124
 1203 002a 0CE0     	 b .L120
 1204              	.LVL162:
 1205              	.L116:
 1206 002c 1A68     	 ldr r2,[r3]
 1207 002e 22F04042 	 bic r2,r2,#-1073741824
 1208 0032 22B1     	 cbz r2,.L121
 744:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1209              	 .loc 1 744 0 discriminator 2
 1210 0034 2033     	 adds r3,r3,#32
 1211              	.LVL163:
 739:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1212              	 .loc 1 739 0 discriminator 2
 1213 0036 0131     	 adds r1,r1,#1
 1214              	.LVL164:
 1215 0038 A342     	 cmp r3,r4
 1216 003a F7D1     	 bne .L116
 1217 003c 00E0     	 b .L115
 1218              	.L121:
 1219 003e 1C46     	 mov r4,r3
 1220              	.L115:
 748:../Libraries/XMCLib/src/xmc_usbh.c ****     { 
 1221              	 .loc 1 748 0
 1222 0040 0E29     	 cmp r1,#14
 1223 0042 01D1     	 bne .L113
 1224 0044 4DE0     	 b .L122
 1225              	.LVL165:
 1226              	.L120:
 737:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1227              	 .loc 1 737 0
 1228 0046 2C46     	 mov r4,r5
 1229              	.LVL166:
 1230              	.L113:
 754:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1231              	 .loc 1 754 0
 1232 0048 651B     	 subs r5,r4,r5
 1233 004a 6D11     	 asrs r5,r5,#5
 1234              	.LVL167:
 756:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1235              	 .loc 1 756 0
 1236 004c 4FEA4518 	 lsl r8,r5,#5
 1237 0050 2A4B     	 ldr r3,.L127+4
 1238 0052 08EB0301 	 add r1,r8,r3
 1239              	.LVL168:
 1240 0056 0022     	 movs r2,#0
 1241 0058 48F80320 	 str r2,[r8,r3]
 1242 005c 4A60     	 str r2,[r1,#4]
 1243 005e 01F10803 	 add r3,r1,#8
 1244 0062 43F8042B 	 str r2,[r3],#4
 1245 0066 43F8042B 	 str r2,[r3],#4
 1246 006a 43F8042B 	 str r2,[r3],#4
 1247 006e 43F8042B 	 str r2,[r3],#4
 1248 0072 43F8042B 	 str r2,[r3],#4
 1249 0076 1A60     	 str r2,[r3]
 1250              	.LVL169:
 765:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 1251              	 .loc 1 765 0
 1252 0078 C6F30A03 	 ubfx r3,r6,#0,#11
 768:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 1253              	 .loc 1 768 0
 1254 007c BA04     	 lsls r2,r7,#18
 1255 007e 02F44022 	 and r2,r2,#786432
 1256 0082 1343     	 orrs r3,r3,r2
 769:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Store Pipe settings */
 1257              	 .loc 1 769 0
 1258 0084 8005     	 lsls r0,r0,#22
 1259              	.LVL170:
 1260 0086 00F0FE50 	 and r0,r0,#532676608
 1261 008a 1843     	 orrs r0,r0,r3
 766:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 1262              	 .loc 1 766 0
 1263 008c 4FEACE23 	 lsl r3,lr,#11
 1264 0090 03F4F043 	 and r3,r3,#30720
 1265 0094 0343     	 orrs r3,r3,r0
 761:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 1266              	 .loc 1 761 0
 1267 0096 5FEADE12 	 lsrs r2,lr,#7
 767:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 1268              	 .loc 1 767 0
 1269 009a 0CBF     	 ite eq
 1270 009c 4FF40042 	 moveq r2,#32768
 1271 00a0 0022     	 movne r2,#0
 768:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 1272              	 .loc 1 768 0
 1273 00a2 1343     	 orrs r3,r3,r2
 765:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 1274              	 .loc 1 765 0
 1275 00a4 2360     	 str r3,[r4]
 771:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 1276              	 .loc 1 771 0
 1277 00a6 8E82     	 strh r6,[r1,#20]
 772:../Libraries/XMCLib/src/xmc_usbh.c ****       switch (ep_type) {
 1278              	 .loc 1 772 0
 1279 00a8 8F76     	 strb r7,[r1,#26]
 773:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 1280              	 .loc 1 773 0
 1281 00aa 012F     	 cmp r7,#1
 1282 00ac 01D0     	 beq .L117
 1283 00ae 032F     	 cmp r7,#3
 1284 00b0 1FD1     	 bne .L125
 1285              	.L117:
 779:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 1286              	 .loc 1 779 0
 1287 00b2 BCF1000F 	 cmp ip,#0
 1288 00b6 04D0     	 beq .L118
 780:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 1289              	 .loc 1 780 0
 1290 00b8 104B     	 ldr r3,.L127+4
 1291 00ba 03EB4513 	 add r3,r3,r5,lsl#5
 1292 00be A3F816C0 	 strh ip,[r3,#22]
 1293              	.L118:
 782:../Libraries/XMCLib/src/xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 1294              	 .loc 1 782 0
 1295 00c2 0E4B     	 ldr r3,.L127+4
 1296 00c4 03EB4515 	 add r5,r3,r5,lsl#5
 1297 00c8 EB8A     	 ldrh r3,[r5,#22]
 1298 00ca 2B83     	 strh r3,[r5,#24]
 1299              	.LVL171:
 784:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 1300              	 .loc 1 784 0
 1301 00cc 2268     	 ldr r2,[r4]
 783:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 1302              	 .loc 1 783 0
 1303 00ce F30A     	 lsrs r3,r6,#11
 1304 00d0 0133     	 adds r3,r3,#1
 1305 00d2 03F00303 	 and r3,r3,#3
 784:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 1306              	 .loc 1 784 0
 1307 00d6 42EA0353 	 orr r3,r2,r3,lsl#20
 1308 00da 2360     	 str r3,[r4]
 785:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 1309              	 .loc 1 785 0
 1310 00dc 09E0     	 b .L125
 1311              	.LVL172:
 1312              	.L119:
 732:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 1313              	 .loc 1 732 0
 1314 00de 0024     	 movs r4,#0
 1315 00e0 07E0     	 b .L125
 1316              	.LVL173:
 1317              	.L122:
 750:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1318              	 .loc 1 750 0
 1319 00e2 0024     	 movs r4,#0
 1320 00e4 05E0     	 b .L125
 1321              	.LVL174:
 1322              	.L124:
 744:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1323              	 .loc 1 744 0
 1324 00e6 05F12003 	 add r3,r5,#32
 1325              	.LVL175:
 1326 00ea 05F5E074 	 add r4,r5,#448
 739:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1327              	 .loc 1 739 0
 1328 00ee 0121     	 movs r1,#1
 1329              	.LVL176:
 1330 00f0 9CE7     	 b .L116
 1331              	.LVL177:
 1332              	.L125:
 792:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1333              	 .loc 1 792 0
 1334 00f2 2046     	 mov r0,r4
 1335 00f4 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1336              	.LVL178:
 1337              	.L128:
 1338              	 .align 2
 1339              	.L127:
 1340 00f8 00000000 	 .word .LANCHOR0
 1341 00fc 00000000 	 .word pipe
 1342              	 .cfi_endproc
 1343              	.LFE192:
 1345              	 .section .text.XMC_USBH_HandleIrq,"ax",%progbits
 1346              	 .align 2
 1347              	 .global XMC_USBH_HandleIrq
 1348              	 .thumb
 1349              	 .thumb_func
 1351              	XMC_USBH_HandleIrq:
 1352              	.LFB200:
1135:../Libraries/XMCLib/src/xmc_usbh.c **** 
1136:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1137:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param gintsts USB port interrupt status flag.
1138:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1139:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1140:../Libraries/XMCLib/src/xmc_usbh.c ****  * USB host interrupt handler. It updates port and pipe state information based on different events
1141:../Libraries/XMCLib/src/xmc_usbh.c ****  * generated by the peripheral. It propagates the port events to the callback function registered b
1142:../Libraries/XMCLib/src/xmc_usbh.c ****  * during initialization. When a pipe transfer complete event is detected, it checks if any further
1143:../Libraries/XMCLib/src/xmc_usbh.c ****  * to be transmitted on the same pipe and continues transmission until data is available. A pipe ev
1144:../Libraries/XMCLib/src/xmc_usbh.c ****  * to the user provided pipe event callback function. A transfer complete event will be propagated 
1145:../Libraries/XMCLib/src/xmc_usbh.c ****  * is transmitted for an OUT transaction.
1146:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1147:../Libraries/XMCLib/src/xmc_usbh.c **** */
1148:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_HandleIrq (uint32_t gintsts) {
 1353              	 .loc 1 1148 0
 1354              	 .cfi_startproc
 1355              	 
 1356              	 
 1357              	.LVL179:
 1358 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1359              	.LCFI11:
 1360              	 .cfi_def_cfa_offset 36
 1361              	 .cfi_offset 4,-36
 1362              	 .cfi_offset 5,-32
 1363              	 .cfi_offset 6,-28
 1364              	 .cfi_offset 7,-24
 1365              	 .cfi_offset 8,-20
 1366              	 .cfi_offset 9,-16
 1367              	 .cfi_offset 10,-12
 1368              	 .cfi_offset 11,-8
 1369              	 .cfi_offset 14,-4
 1370 0004 83B0     	 sub sp,sp,#12
 1371              	.LCFI12:
 1372              	 .cfi_def_cfa_offset 48
 1373 0006 8346     	 mov fp,r0
1149:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1150:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1151:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt, haint, hcint, pktcnt, mpsiz;
1152:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t ch;
1153:../Libraries/XMCLib/src/xmc_usbh.c ****   uint8_t *ptr_data;
1154:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t *dfifo;
1155:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t grxsts, bcnt, dat, len, len_rest;
1156:../Libraries/XMCLib/src/xmc_usbh.c ****   
1157:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Host port interrupt */
1158:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_PrtInt_Msk) != 0U) {
 1374              	 .loc 1 1158 0
 1375 0008 10F0807F 	 tst r0,#16777216
 1376 000c 25D0     	 beq .L130
1159:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt = XMC_USBH0_device.global_register->HPRT;
 1377              	 .loc 1 1159 0
 1378 000e A44B     	 ldr r3,.L187
 1379 0010 1B68     	 ldr r3,[r3]
 1380 0012 D3F84044 	 ldr r4,[r3,#1088]
 1381              	.LVL180:
1160:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Clear port enable */
1161:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt & (uint32_t)(~USB_HPRT_PrtEna_Msk);
 1382              	 .loc 1 1161 0
 1383 0016 24F00402 	 bic r2,r4,#4
 1384 001a C3F84024 	 str r2,[r3,#1088]
1162:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtConnDet_Msk) != 0U) {
 1385              	 .loc 1 1162 0
 1386 001e 14F0020F 	 tst r4,#2
 1387 0022 0DD0     	 beq .L131
1163:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG =  (0x200U | (USB_CH_HCFG_FSLSPCS(1) |
 1388              	 .loc 1 1163 0
 1389 0024 40F20522 	 movw r2,#517
 1390 0028 C3F80024 	 str r2,[r3,#1024]
1164:../Libraries/XMCLib/src/xmc_usbh.c ****                                                     USB_CH_HCFG_FSLSSUP(1)));
1165:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Ignore connect under reset */
1166:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.port_reset_active == false) {
 1391              	 .loc 1 1166 0
 1392 002c 9C4B     	 ldr r3,.L187
 1393 002e 9B7C     	 ldrb r3,[r3,#18]
 1394 0030 002B     	 cmp r3,#0
 1395 0032 40F01B82 	 bne .L132
1167:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_CONNECT);
 1396              	 .loc 1 1167 0
 1397 0036 9A4B     	 ldr r3,.L187
 1398 0038 9B68     	 ldr r3,[r3,#8]
 1399 003a 0020     	 movs r0,#0
 1400              	.LVL181:
 1401 003c 0121     	 movs r1,#1
 1402 003e 9847     	 blx r3
 1403              	.LVL182:
 1404              	.L131:
 1405 0040 04F00C04 	 and r4,r4,#12
 1406              	.LVL183:
1168:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1169:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1170:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtEnChng_Msk) != 0U) { /* If port enable changed */
1171:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((hprt & USB_HPRT_PrtEna_Msk) != 0U) {  /* If device connected */
 1407              	 .loc 1 1171 0
 1408 0044 0C2C     	 cmp r4,#12
 1409 0046 08D1     	 bne .L130
1172:../Libraries/XMCLib/src/xmc_usbh.c ****         if (XMC_USBH0_device.port_reset_active == true) {
 1410              	 .loc 1 1172 0
 1411 0048 954B     	 ldr r3,.L187
 1412 004a 9B7C     	 ldrb r3,[r3,#18]
 1413 004c 2BB1     	 cbz r3,.L130
 1414              	.L172:
1173:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.port_reset_active = false;
 1415              	 .loc 1 1173 0
 1416 004e 944B     	 ldr r3,.L187
 1417 0050 0020     	 movs r0,#0
 1418 0052 9874     	 strb r0,[r3,#18]
1174:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_RESET);
 1419              	 .loc 1 1174 0
 1420 0054 9B68     	 ldr r3,[r3,#8]
 1421 0056 0821     	 movs r1,#8
 1422 0058 9847     	 blx r3
 1423              	.LVL184:
 1424              	.L130:
1175:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1176:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1177:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1178:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1179:../Libraries/XMCLib/src/xmc_usbh.c ****   
1180:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Disconnect interrupt */
1181:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_DisconnInt_Msk) != 0U) {
 1425              	 .loc 1 1181 0
 1426 005a 1BF0005F 	 tst fp,#536870912
 1427 005e 28D0     	 beq .L133
1182:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE = USB_GINTSTS_HOSTMODE_DisconnInt_Msk; /* Cl
 1428              	 .loc 1 1182 0
 1429 0060 8F4B     	 ldr r3,.L187
 1430 0062 1A68     	 ldr r2,[r3]
 1431 0064 4FF00051 	 mov r1,#536870912
 1432 0068 5161     	 str r1,[r2,#20]
1183:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Ignore disconnect under reset */
1184:../Libraries/XMCLib/src/xmc_usbh.c ****     if ( XMC_USBH0_device.port_reset_active == false) {
 1433              	 .loc 1 1184 0
 1434 006a 9B7C     	 ldrb r3,[r3,#18]
 1435 006c 0BBB     	 cbnz r3,.L133
1185:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 1436              	 .loc 1 1185 0
 1437 006e 8C4B     	 ldr r3,.L187
 1438 0070 5D68     	 ldr r5,[r3,#4]
 1439              	.LVL185:
1186:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(pipe);
 1440              	 .loc 1 1186 0
 1441 0072 8C4C     	 ldr r4,.L187+4
1187:../Libraries/XMCLib/src/xmc_usbh.c ****       for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1188:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
1189:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->in_use = 0U;
 1442              	 .loc 1 1189 0
 1443 0074 4FF00008 	 mov r8,#0
1190:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
1191:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk;                           /* Enable halt inte
1192:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk); /* Acti
1193:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, XMC_USBH_EVENT_BUS_ERROR)
 1444              	 .loc 1 1193 0
 1445 0078 1F46     	 mov r7,r3
1187:../Libraries/XMCLib/src/xmc_usbh.c ****       for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1446              	 .loc 1 1187 0
 1447 007a 04F5E076 	 add r6,r4,#448
 1448              	.LVL186:
 1449              	.L135:
1188:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->in_use = 0U;
 1450              	 .loc 1 1188 0
 1451 007e E37E     	 ldrb r3,[r4,#27]
 1452 0080 73B1     	 cbz r3,.L134
1189:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
 1453              	 .loc 1 1189 0
 1454 0082 84F81B80 	 strb r8,[r4,#27]
1190:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
 1455              	 .loc 1 1190 0
 1456 0086 40F2BB73 	 movw r3,#1979
 1457 008a AB60     	 str r3,[r5,#8]
1191:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk); /* Acti
 1458              	 .loc 1 1191 0
 1459 008c 0223     	 movs r3,#2
 1460 008e EB60     	 str r3,[r5,#12]
1192:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, XMC_USBH_EVENT_BUS_ERROR)
 1461              	 .loc 1 1192 0
 1462 0090 2B68     	 ldr r3,[r5]
 1463 0092 43F04043 	 orr r3,r3,#-1073741824
 1464 0096 2B60     	 str r3,[r5]
 1465              	 .loc 1 1193 0
 1466 0098 2846     	 mov r0,r5
 1467 009a 4021     	 movs r1,#64
 1468 009c FB68     	 ldr r3,[r7,#12]
 1469 009e 9847     	 blx r3
 1470              	.LVL187:
 1471              	.L134:
1194:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1195:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch++;
 1472              	 .loc 1 1195 0 discriminator 2
 1473 00a0 2035     	 adds r5,r5,#32
 1474              	.LVL188:
1196:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe++;
 1475              	 .loc 1 1196 0 discriminator 2
 1476 00a2 2034     	 adds r4,r4,#32
 1477              	.LVL189:
1187:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 1478              	 .loc 1 1187 0 discriminator 2
 1479 00a4 B442     	 cmp r4,r6
 1480 00a6 EAD1     	 bne .L135
1197:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1198:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_DISCONNECT);
 1481              	 .loc 1 1198 0
 1482 00a8 7D4B     	 ldr r3,.L187
 1483 00aa 9B68     	 ldr r3,[r3,#8]
 1484 00ac 0020     	 movs r0,#0
 1485 00ae 0221     	 movs r1,#2
 1486 00b0 9847     	 blx r3
 1487              	.LVL190:
 1488              	.L133:
1199:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1200:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1201:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle receive fifo not-empty interrupt */
1202:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_RxFLvl_Msk) != 0U) {
 1489              	 .loc 1 1202 0
 1490 00b2 1BF0100F 	 tst fp,#16
 1491 00b6 40D0     	 beq .L136
1203:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE &= (uint32_t)~USB_GINTMSK_HOSTMODE_RxFLvlMsk
 1492              	 .loc 1 1203 0
 1493 00b8 794B     	 ldr r3,.L187
 1494 00ba 1868     	 ldr r0,[r3]
 1495 00bc 8369     	 ldr r3,[r0,#24]
 1496 00be 23F01003 	 bic r3,r3,#16
 1497 00c2 8361     	 str r3,[r0,#24]
1204:../Libraries/XMCLib/src/xmc_usbh.c ****     grxsts     = (XMC_USBH0_device.global_register->GRXSTSP_HOSTMODE);    
 1498              	 .loc 1 1204 0
 1499 00c4 036A     	 ldr r3,[r0,#32]
 1500              	.LVL191:
1205:../Libraries/XMCLib/src/xmc_usbh.c ****     /* IN Data Packet received ? */
1206:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((uint32_t)((grxsts >> 17U) & 0x0FU) == (uint32_t)USB_GRXSTSR_HOSTMODE_PktSts_IN_DATA_PKT) {
 1501              	 .loc 1 1206 0
 1502 00c6 C3F34342 	 ubfx r2,r3,#17,#4
 1503 00ca 022A     	 cmp r2,#2
 1504 00cc 31D1     	 bne .L137
1207:../Libraries/XMCLib/src/xmc_usbh.c ****       ch         = (uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_EPNum_Msk);
 1505              	 .loc 1 1207 0
 1506 00ce 03F00F07 	 and r7,r3,#15
 1507              	.LVL192:
1208:../Libraries/XMCLib/src/xmc_usbh.c ****       bcnt       = ((uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_BCnt_Msk) >> USB_GRXSTSR_DEVICEMODE_
 1508              	 .loc 1 1208 0
 1509 00d2 47F6F071 	 movw r1,#32752
 1510 00d6 1940     	 ands r1,r1,r3
 1511 00d8 0E09     	 lsrs r6,r1,#4
 1512              	.LVL193:
1209:../Libraries/XMCLib/src/xmc_usbh.c ****       dfifo      = (uint32_t *)XMC_USBH0_dfifo_ptr[ch];
 1513              	 .loc 1 1209 0
 1514 00da 734B     	 ldr r3,.L187+8
 1515              	.LVL194:
 1516 00dc 53F827C0 	 ldr ip,[r3,r7,lsl#2]
 1517              	.LVL195:
1210:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_data   =  pipe[ch].data + pipe[ch].num_transferred_total;
 1518              	 .loc 1 1210 0
 1519 00e0 704B     	 ldr r3,.L187+4
 1520 00e2 03EB4713 	 add r3,r3,r7,lsl#5
 1521 00e6 5A68     	 ldr r2,[r3,#4]
 1522 00e8 0833     	 adds r3,r3,#8
 1523 00ea 5B68     	 ldr r3,[r3,#4]
 1524 00ec 1A44     	 add r2,r2,r3
 1525              	.LVL196:
1211:../Libraries/XMCLib/src/xmc_usbh.c ****       len        =  bcnt / 4U; /* Received number of 32-bit data */
1212:../Libraries/XMCLib/src/xmc_usbh.c ****       len_rest   =  bcnt & 3U; /* Number of bytes left */
 1526              	 .loc 1 1212 0
 1527 00ee 06F00304 	 and r4,r6,#3
 1528              	.LVL197:
1213:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read data from fifo */
1214:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read 32 bit sized  data */
1215:../Libraries/XMCLib/src/xmc_usbh.c ****       while (len != 0U) {
 1529              	 .loc 1 1215 0
 1530 00f2 8D09     	 lsrs r5,r1,#6
 1531              	.LVL198:
 1532 00f4 00F0C381 	 beq .L138
 1533 00f8 2B46     	 mov r3,r5
 1534 00fa 1146     	 mov r1,r2
 1535 00fc 9646     	 mov lr,r2
 1536              	.LVL199:
 1537              	.L139:
1216:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1217:../Libraries/XMCLib/src/xmc_usbh.c ****         *((__unaligned uint32_t *)ptr_data) = *dfifo;
1218:../Libraries/XMCLib/src/xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1219:../Libraries/XMCLib/src/xmc_usbh.c ****         *((__packed uint32_t *)ptr_data) = *dfifo;
 1538              	 .loc 1 1219 0
 1539 00fe DCF80020 	 ldr r2,[ip]
 1540 0102 41F8042B 	 str r2,[r1],#4
 1541              	.LVL200:
1215:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 1542              	 .loc 1 1215 0
 1543 0106 013B     	 subs r3,r3,#1
 1544              	.LVL201:
 1545 0108 F9D1     	 bne .L139
 1546 010a 0EEB8502 	 add r2,lr,r5,lsl#2
1220:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
1221:../Libraries/XMCLib/src/xmc_usbh.c **** 
1222:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_data += 4U;
1223:../Libraries/XMCLib/src/xmc_usbh.c ****         len--;
1224:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1225:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read 8 bit sized data */
1226:../Libraries/XMCLib/src/xmc_usbh.c ****       if (len_rest != 0U) {
 1547              	 .loc 1 1226 0
 1548 010e 3CB1     	 cbz r4,.L140
1227:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1228:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = *((__unaligned uint32_t *)dfifo);
1229:../Libraries/XMCLib/src/xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1230:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = *((__packed uint32_t *)dfifo);
 1549              	 .loc 1 1230 0
 1550 0110 DCF80030 	 ldr r3,[ip]
 1551              	.LVL202:
 1552              	.L173:
 1553 0114 1119     	 adds r1,r2,r4
 1554              	.LVL203:
 1555              	.L141:
1231:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
1232:../Libraries/XMCLib/src/xmc_usbh.c ****         while (len_rest != 0U) {
1233:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 1556              	 .loc 1 1233 0
 1557 0116 02F8013B 	 strb r3,[r2],#1
 1558              	.LVL204:
1234:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_data++;
1235:../Libraries/XMCLib/src/xmc_usbh.c ****           dat >>= 8;
 1559              	 .loc 1 1235 0
 1560 011a 1B0A     	 lsrs r3,r3,#8
 1561              	.LVL205:
1232:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 1562              	 .loc 1 1232 0
 1563 011c 8A42     	 cmp r2,r1
 1564 011e FAD1     	 bne .L141
 1565              	.LVL206:
 1566              	.L140:
1236:../Libraries/XMCLib/src/xmc_usbh.c ****           len_rest--;
1237:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1238:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1239:../Libraries/XMCLib/src/xmc_usbh.c ****       pipe[ch].num_transferring      += bcnt;
 1567              	 .loc 1 1239 0
 1568 0120 604B     	 ldr r3,.L187+4
 1569 0122 03EB4713 	 add r3,r3,r7,lsl#5
 1570 0126 1A69     	 ldr r2,[r3,#16]
 1571 0128 3244     	 add r2,r2,r6
 1572 012a 1A61     	 str r2,[r3,#16]
1240:../Libraries/XMCLib/src/xmc_usbh.c ****       pipe[ch].num_transferred_total += bcnt;
 1573              	 .loc 1 1240 0
 1574 012c DA68     	 ldr r2,[r3,#12]
 1575 012e 1644     	 add r6,r6,r2
 1576              	.LVL207:
 1577 0130 DE60     	 str r6,[r3,#12]
 1578              	.LVL208:
 1579              	.L137:
1241:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1242:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE |= (uint32_t)USB_GINTMSK_HOSTMODE_RxFLvlMsk_
 1580              	 .loc 1 1242 0
 1581 0132 8369     	 ldr r3,[r0,#24]
 1582 0134 43F01003 	 orr r3,r3,#16
 1583 0138 8361     	 str r3,[r0,#24]
 1584              	.L136:
1243:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1244:../Libraries/XMCLib/src/xmc_usbh.c **** 
1245:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle sof interrupt */
1246:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_Sof_Msk) != 0U) { /* If start of frame interrupt */
 1585              	 .loc 1 1246 0
 1586 013a 1BF0080F 	 tst fp,#8
 1587 013e 18D0     	 beq .L142
1247:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_Sof_Msk; /* Clear SO
 1588              	 .loc 1 1247 0
 1589 0140 574B     	 ldr r3,.L187
 1590 0142 1B68     	 ldr r3,[r3]
 1591 0144 0822     	 movs r2,#8
 1592 0146 5A61     	 str r2,[r3,#20]
 1593              	.LVL209:
1248:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
 1594              	 .loc 1 1248 0
 1595 0148 564B     	 ldr r3,.L187+4
1249:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1250:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
1251:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->in_use == 1U)) 
 1596              	 .loc 1 1251 0
 1597 014a 40F20310 	 movw r0,#259
1252:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
1253:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1254:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->interval--;
1255:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
1256:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1257:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval = ptr_pipe->interval_reload;
1258:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
 1598              	 .loc 1 1258 0
 1599 014e 0124     	 movs r4,#1
1249:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1600              	 .loc 1 1249 0
 1601 0150 03F5E071 	 add r1,r3,#448
 1602              	.LVL210:
 1603              	.L144:
1251:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
 1604              	 .loc 1 1251 0
 1605 0154 5A8B     	 ldrh r2,[r3,#26]
 1606 0156 8242     	 cmp r2,r0
 1607 0158 08D1     	 bne .L143
1252:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
 1608              	 .loc 1 1252 0
 1609 015a 1A8B     	 ldrh r2,[r3,#24]
 1610 015c 32B1     	 cbz r2,.L143
1254:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
 1611              	 .loc 1 1254 0
 1612 015e 013A     	 subs r2,r2,#1
 1613 0160 92B2     	 uxth r2,r2
 1614 0162 1A83     	 strh r2,[r3,#24]
1255:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 1615              	 .loc 1 1255 0
 1616 0164 12B9     	 cbnz r2,.L143
1257:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
 1617              	 .loc 1 1257 0
 1618 0166 DA8A     	 ldrh r2,[r3,#22]
 1619 0168 1A83     	 strh r2,[r3,#24]
 1620              	 .loc 1 1258 0
 1621 016a 5C77     	 strb r4,[r3,#29]
 1622              	.L143:
1259:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1260:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1261:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1262:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe++;
 1623              	 .loc 1 1262 0 discriminator 2
 1624 016c 2033     	 adds r3,r3,#32
 1625              	.LVL211:
1249:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
 1626              	 .loc 1 1249 0 discriminator 2
 1627 016e 8B42     	 cmp r3,r1
 1628 0170 F0D1     	 bne .L144
 1629              	.LVL212:
 1630              	.L142:
1263:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1264:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1265:../Libraries/XMCLib/src/xmc_usbh.c ****   
1266:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle host ctrl interrupt */
1267:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_HChInt_Msk) != 0U) {
 1631              	 .loc 1 1267 0
 1632 0172 1BF0007F 	 tst fp,#33554432
 1633 0176 00F02981 	 beq .L145
1268:../Libraries/XMCLib/src/xmc_usbh.c ****     haint = XMC_USBH0_device.global_register->HAINT;
 1634              	 .loc 1 1268 0
 1635 017a 494B     	 ldr r3,.L187
 1636 017c 1B68     	 ldr r3,[r3]
 1637 017e D3F81474 	 ldr r7,[r3,#1044]
 1638              	.LVL213:
 1639 0182 4A4C     	 ldr r4,.L187+12
 1640 0184 4A4E     	 ldr r6,.L187+16
1269:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1641              	 .loc 1 1269 0
 1642 0186 0025     	 movs r5,#0
1270:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Check for interrupt of all channels */
1271:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((haint & (uint32_t)((uint32_t)1U << ch)) != 0U) {
1272:../Libraries/XMCLib/src/xmc_usbh.c ****         haint     &= (uint32_t)~((uint32_t)1U << ch);
 1643              	 .loc 1 1272 0
 1644 0188 4FF00108 	 mov r8,#1
1273:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 1645              	 .loc 1 1273 0
 1646 018c DFF810A1 	 ldr r10,.L187
 1647 0190 CDF800B0 	 str fp,[sp]
 1648              	.LVL214:
 1649              	.L162:
1271:../Libraries/XMCLib/src/xmc_usbh.c ****         haint     &= (uint32_t)~((uint32_t)1U << ch);
 1650              	 .loc 1 1271 0
 1651 0194 27FA05F3 	 lsr r3,r7,r5
 1652 0198 13F0010F 	 tst r3,#1
 1653 019c 00F00E81 	 beq .L146
1272:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 1654              	 .loc 1 1272 0
 1655 01a0 08FA05F3 	 lsl r3,r8,r5
 1656 01a4 27EA0307 	 bic r7,r7,r3
 1657              	.LVL215:
 1658 01a8 6A01     	 lsls r2,r5,#5
 1659              	 .loc 1 1273 0
 1660 01aa DAF804E0 	 ldr lr,[r10,#4]
 1661 01ae 0EEB0200 	 add r0,lr,r2
 1662              	.LVL216:
1274:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe   =  (XMC_USBH0_pipe_t    *)(&pipe[ch]);
1275:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Local variable for HCINT*/
1276:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = ptr_ch->HCINT;
 1663              	 .loc 1 1276 0
 1664 01b2 8368     	 ldr r3,[r0,#8]
 1665              	.LVL217:
1277:../Libraries/XMCLib/src/xmc_usbh.c ****         hcint      =  (uint32_t)(dat & ptr_ch->HCINTMSK);
 1666              	 .loc 1 1277 0
 1667 01b4 C168     	 ldr r1,[r0,#12]
 1668 01b6 0B40     	 ands r3,r3,r1
 1669              	.LVL218:
1278:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_ChHltd_Msk) != 0U) {                                  /* channel 
 1670              	 .loc 1 1278 0
 1671 01b8 13F0020F 	 tst r3,#2
 1672 01bc 06D0     	 beq .L147
1279:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = 0U;                                                        /*  disable
 1673              	 .loc 1 1279 0
 1674 01be 0023     	 movs r3,#0
 1675              	.LVL219:
 1676 01c0 C360     	 str r3,[r0,#12]
1280:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                                    
 1677              	 .loc 1 1280 0
 1678 01c2 40F2BB71 	 movw r1,#1979
 1679 01c6 8160     	 str r1,[r0,#8]
1281:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->transfer_active = 0U;                                               /*  set sta
 1680              	 .loc 1 1281 0
 1681 01c8 2372     	 strb r3,[r4,#8]
 1682              	.LVL220:
 1683 01ca 73E0     	 b .L148
 1684              	.LVL221:
 1685              	.L147:
1282:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
1283:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1284:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_XferCompl_Msk) != 0U) {                               /* data tra
 1686              	 .loc 1 1284 0
 1687 01cc 13F0010F 	 tst r3,#1
 1688 01d0 34D0     	 beq .L149
1285:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT   = USB_CH_HCINTx_ALL;                                                     
 1689              	 .loc 1 1285 0
 1690 01d2 40F2BB71 	 movw r1,#1979
 1691 01d6 8160     	 str r1,[r0,#8]
1286:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) == 0U) {                       /*  endpoin
 1692              	 .loc 1 1286 0
 1693 01d8 5EF80210 	 ldr r1,[lr,r2]
 1694 01dc 11F4004F 	 tst r1,#32768
 1695 01e0 19D1     	 bne .L150
1287:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;                                                      /*   disabl
 1696              	 .loc 1 1287 0
 1697 01e2 4FF0000C 	 mov ip,#0
 1698 01e6 C0F80CC0 	 str ip,[r0,#12]
1288:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active = 0U;                                             /*   transf
 1699              	 .loc 1 1288 0
 1700 01ea 84F808C0 	 strb ip,[r4,#8]
1289:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total += ptr_pipe->num_transferring;              /*   admin 
 1701              	 .loc 1 1289 0
 1702 01ee 54F8081C 	 ldr r1,[r4,#-8]
 1703 01f2 54F8043C 	 ldr r3,[r4,#-4]
 1704              	.LVL222:
 1705 01f6 1944     	 add r1,r1,r3
 1706 01f8 0B46     	 mov r3,r1
 1707 01fa 44F8081C 	 str r1,[r4,#-8]
1290:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
 1708              	 .loc 1 1290 0
 1709 01fe 44F804CC 	 str ip,[r4,#-4]
1291:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_pipe->num_transferred_total == ptr_pipe->num) {                     /*   all by
 1710              	 .loc 1 1291 0
 1711 0202 54F80C1C 	 ldr r1,[r4,#-12]
 1712 0206 8B42     	 cmp r3,r1
 1713 0208 40F03C81 	 bne .L151
1292:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use = 0U;                                                    /*    relea
 1714              	 .loc 1 1292 0
 1715 020c 84F807C0 	 strb ip,[r4,#7]
1293:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                       /*
 1716              	 .loc 1 1293 0
 1717 0210 84F80A80 	 strb r8,[r4,#10]
 1718 0214 36E1     	 b .L151
 1719              	.LVL223:
 1720              	.L150:
1294:../Libraries/XMCLib/src/xmc_usbh.c ****             }                                                                           
1295:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;                                                                 
1296:../Libraries/XMCLib/src/xmc_usbh.c ****           }                                                                             
1297:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                       /*  endpoin
 1721              	 .loc 1 1297 0
 1722 0216 5EF80210 	 ldr r1,[lr,r2]
 1723 021a 11F4004F 	 tst r1,#32768
 1724 021e 0DD0     	 beq .L149
 1725 0220 00E0     	 b .L175
 1726              	.LVL224:
 1727              	.L177:
 1728 0222 0023     	 movs r3,#0
 1729              	.LVL225:
 1730              	.L175:
1298:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
 1731              	 .loc 1 1298 0
 1732 0224 0021     	 movs r1,#0
 1733 0226 E171     	 strb r1,[r4,#7]
1299:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                         /*
 1734              	 .loc 1 1299 0
 1735 0228 84F80A80 	 strb r8,[r4,#10]
 1736              	.LVL226:
 1737              	.LBB50:
 1738              	.LBB51:
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1739              	 .loc 1 138 0
 1740 022c 0221     	 movs r1,#2
 1741 022e C160     	 str r1,[r0,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1742              	 .loc 1 139 0
 1743 0230 5EF80210 	 ldr r1,[lr,r2]
 1744 0234 41F04041 	 orr r1,r1,#-1073741824
 1745 0238 4EF80210 	 str r1,[lr,r2]
 1746              	.LVL227:
 1747              	.L149:
 1748              	.LBE51:
 1749              	.LBE50:
1300:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                            /*   trigge
1301:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1302:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1303:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_AckMsk_Msk) != 0U) {                                /* ACK rec
 1750              	 .loc 1 1303 0
 1751 023c 13F0200F 	 tst r3,#32
 1752 0240 38D0     	 beq .L148
1304:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT = USB_CH_HCINTMSK_AckMsk_Msk;                                    /*  clear 
 1753              	 .loc 1 1304 0
 1754 0242 2023     	 movs r3,#32
 1755              	.LVL228:
 1756 0244 8360     	 str r3,[r0,#8]
1305:../Libraries/XMCLib/src/xmc_usbh.c ****           is_nack[ch] = false;
 1757              	 .loc 1 1305 0
 1758 0246 0023     	 movs r3,#0
 1759 0248 3370     	 strb r3,[r6]
1306:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                        /*  endpoi
 1760              	 .loc 1 1306 0
 1761 024a 5EF80230 	 ldr r3,[lr,r2]
 1762 024e 13F4004F 	 tst r3,#32768
 1763 0252 1BD0     	 beq .L152
1307:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num != ptr_pipe->num_transferred_total) &&                    /*   if al
 1764              	 .loc 1 1307 0
 1765 0254 54F8081C 	 ldr r1,[r4,#-8]
 1766 0258 54F80C3C 	 ldr r3,[r4,#-12]
 1767 025c 8B42     	 cmp r3,r1
 1768 025e 00F01881 	 beq .L153
 1769              	 .loc 1 1307 0 is_stmt 0 discriminator 1
 1770 0262 54F8043C 	 ldr r3,[r4,#-4]
 1771 0266 002B     	 cmp r3,#0
 1772 0268 00F01381 	 beq .L153
1308:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
1309:../Libraries/XMCLib/src/xmc_usbh.c ****                ((ptr_pipe->num_transferred_total%ptr_pipe->ep_max_packet_size) == 0U)){  /*   if sh
 1773              	 .loc 1 1309 0 is_stmt 1
 1774 026c B4F800C0 	 ldrh ip,[r4]
 1775 0270 B1FBFCF3 	 udiv r3,r1,ip
 1776 0274 0CFB1311 	 mls r1,ip,r3,r1
1308:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
 1777              	 .loc 1 1308 0
 1778 0278 0029     	 cmp r1,#0
 1779 027a 40F00A81 	 bne .L153
1310:../Libraries/XMCLib/src/xmc_usbh.c ****                ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                                
 1780              	 .loc 1 1310 0
 1781 027e 5EF80230 	 ldr r3,[lr,r2]
 1782 0282 43F00043 	 orr r3,r3,#-2147483648
 1783 0286 4EF80230 	 str r3,[lr,r2]
 1784 028a 02E1     	 b .L153
 1785              	.L152:
 1786              	.LVL229:
 1787              	.LBB52:
 1788              	.LBB53:
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1789              	 .loc 1 138 0
 1790 028c 0223     	 movs r3,#2
 1791 028e C360     	 str r3,[r0,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1792              	 .loc 1 139 0
 1793 0290 5EF80230 	 ldr r3,[lr,r2]
 1794 0294 43F04043 	 orr r3,r3,#-1073741824
 1795 0298 4EF80230 	 str r3,[lr,r2]
 1796 029c F9E0     	 b .L153
 1797              	.L188:
 1798 029e 00BF     	 .align 2
 1799              	.L187:
 1800 02a0 00000000 	 .word .LANCHOR0
 1801 02a4 00000000 	 .word pipe
 1802 02a8 00000000 	 .word .LANCHOR1
 1803 02ac 14000000 	 .word pipe+20
 1804 02b0 00000000 	 .word is_nack
 1805              	.LVL230:
 1806              	.L148:
 1807              	.LBE53:
 1808              	.LBE52:
1311:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1312:../Libraries/XMCLib/src/xmc_usbh.c ****           } else {                                                                        /* endpoi
1313:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                              /*  trigg
1314:../Libraries/XMCLib/src/xmc_usbh.c ****           } 
1315:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
1316:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1317:../Libraries/XMCLib/src/xmc_usbh.c ****         /*local variable for HCCHAR*/
1318:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = ptr_ch->HCCHAR;
 1809              	 .loc 1 1318 0
 1810 02b4 5EF80210 	 ldr r1,[lr,r2]
 1811              	.LVL231:
1319:../Libraries/XMCLib/src/xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
 1812              	 .loc 1 1319 0
 1813 02b8 13F4F36F 	 tst r3,#1944
 1814 02bc 1BD0     	 beq .L154
1320:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTMSK_NakMsk_Msk   |                                     /* or NAK 
1321:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTx_ERRORS )) != 0U) &&                                  /* or tran
 1815              	 .loc 1 1321 0
 1816 02be 11F4004F 	 tst r1,#32768
 1817 02c2 18D1     	 bne .L154
1322:../Libraries/XMCLib/src/xmc_usbh.c ****             ((dat & USB_CH_HCCHAR_EPDir_Msk) == 0U))
1323:../Libraries/XMCLib/src/xmc_usbh.c ****         {                        /* and endpoint OUT */
1324:../Libraries/XMCLib/src/xmc_usbh.c **** 
1325:../Libraries/XMCLib/src/xmc_usbh.c ****             pktcnt = (uint32_t)((ptr_ch->HCTSIZ_BUFFERMODE & USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Msk)  
 1818              	 .loc 1 1325 0
 1819 02c4 0169     	 ldr r1,[r0,#16]
 1820              	.LVL232:
1326:../Libraries/XMCLib/src/xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
1327:../Libraries/XMCLib/src/xmc_usbh.c ****             mpsiz  = (ptr_ch->HCCHAR      ) & 0x000007FFU;
 1821              	 .loc 1 1327 0
 1822 02c6 5EF802C0 	 ldr ip,[lr,r2]
 1823 02ca CCF30A0C 	 ubfx ip,ip,#0,#11
 1824              	.LVL233:
 1825 02ce A346     	 mov fp,r4
1328:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num_transferring >= mpsiz) && (pktcnt > 0U)) {
 1826              	 .loc 1 1328 0
 1827 02d0 54F8049C 	 ldr r9,[r4,#-4]
 1828 02d4 CC45     	 cmp ip,r9
 1829 02d6 0BD8     	 bhi .L155
1325:../Libraries/XMCLib/src/xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
 1830              	 .loc 1 1325 0 discriminator 1
 1831 02d8 C1F3C941 	 ubfx r1,r1,#19,#10
 1832              	.LVL234:
 1833 02dc 0191     	 str r1,[sp,#4]
 1834              	 .loc 1 1328 0 discriminator 1
 1835 02de 39B1     	 cbz r1,.L155
 1836 02e0 54F8081C 	 ldr r1,[r4,#-8]
 1837 02e4 8944     	 add r9,r9,r1
1329:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
 1838              	 .loc 1 1329 0
 1839 02e6 0199     	 ldr r1,[sp,#4]
 1840 02e8 0CFB1191 	 mls r1,ip,r1,r9
 1841 02ec 44F8081C 	 str r1,[r4,#-8]
 1842              	.L155:
1330:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1331:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring = 0U;
 1843              	 .loc 1 1331 0
 1844 02f0 0021     	 movs r1,#0
 1845 02f2 4BF8041C 	 str r1,[fp,#-4]
 1846              	.LVL235:
 1847              	.L154:
1332:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1333:../Libraries/XMCLib/src/xmc_usbh.c **** 
1334:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_NakMsk_Msk)!=0U) {                                /* if NAK */
 1848              	 .loc 1 1334 0
 1849 02f6 13F0100F 	 tst r3,#16
 1850 02fa 28D0     	 beq .L156
1335:../Libraries/XMCLib/src/xmc_usbh.c ****             is_nack[ch] = true;
 1851              	 .loc 1 1335 0
 1852 02fc 86F80080 	 strb r8,[r6]
1336:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event |= (uint8_t)XMC_USBH_EVENT_HANDSHAKE_NAK;
 1853              	 .loc 1 1336 0
 1854 0300 A37A     	 ldrb r3,[r4,#10]
 1855 0302 43F00203 	 orr r3,r3,#2
 1856 0306 A372     	 strb r3,[r4,#10]
1337:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTMSK_NakMsk_Msk;                                /*    clear 
 1857              	 .loc 1 1337 0
 1858 0308 1023     	 movs r3,#16
 1859 030a 8360     	 str r3,[r0,#8]
1338:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                    /*    endpoi
 1860              	 .loc 1 1338 0
 1861 030c 5EF80230 	 ldr r3,[lr,r2]
 1862 0310 13F4004F 	 tst r3,#32768
 1863 0314 12D0     	 beq .L157
1339:../Libraries/XMCLib/src/xmc_usbh.c ****               if (ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) {                   /*
 1864              	 .loc 1 1339 0
 1865 0316 A379     	 ldrb r3,[r4,#6]
 1866 0318 032B     	 cmp r3,#3
 1867 031a 08D1     	 bne .L158
 1868              	.LVL236:
 1869              	.LBB54:
 1870              	.LBB55:
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1871              	 .loc 1 138 0
 1872 031c 0223     	 movs r3,#2
 1873 031e C360     	 str r3,[r0,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1874              	 .loc 1 139 0
 1875 0320 5EF80230 	 ldr r3,[lr,r2]
 1876 0324 43F04043 	 orr r3,r3,#-1073741824
 1877 0328 4EF80230 	 str r3,[lr,r2]
 1878 032c 3BE0     	 b .L161
 1879              	.LVL237:
 1880              	.L158:
 1881              	.LBE55:
 1882              	.LBE54:
1340:../Libraries/XMCLib/src/xmc_usbh.c ****                 XMC_lTriggerHaltChannel(ptr_ch);                                       /*      trig
1341:../Libraries/XMCLib/src/xmc_usbh.c ****               } else {                                                                 /*     is en
1342:../Libraries/XMCLib/src/xmc_usbh.c ****                 ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                             /*
 1883              	 .loc 1 1342 0
 1884 032e 5EF80230 	 ldr r3,[lr,r2]
 1885 0332 43F00043 	 orr r3,r3,#-2147483648
 1886 0336 4EF80230 	 str r3,[lr,r2]
 1887 033a 34E0     	 b .L161
 1888              	.L157:
 1889              	.LVL238:
 1890              	.LBB56:
 1891              	.LBB57:
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1892              	 .loc 1 138 0
 1893 033c 0223     	 movs r3,#2
 1894 033e C360     	 str r3,[r0,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1895              	 .loc 1 139 0
 1896 0340 5EF80230 	 ldr r3,[lr,r2]
 1897 0344 43F04043 	 orr r3,r3,#-1073741824
 1898 0348 4EF80230 	 str r3,[lr,r2]
 1899 034c 2BE0     	 b .L161
 1900              	.LVL239:
 1901              	.L156:
 1902              	.LBE57:
 1903              	.LBE56:
1343:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1344:../Libraries/XMCLib/src/xmc_usbh.c ****             } else { /* If endpoint OUT */                                             /*    endpoi
1345:../Libraries/XMCLib/src/xmc_usbh.c ****               XMC_lTriggerHaltChannel(ptr_ch);                                         /*     trigg
1346:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1347:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
1348:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1349:../Libraries/XMCLib/src/xmc_usbh.c **** 
1350:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_StallMsk_Msk) != 0U) {                              /* if STAL
 1904              	 .loc 1 1350 0
 1905 034e 13F0080F 	 tst r3,#8
 1906 0352 16D0     	 beq .L160
1351:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Reset the packet data toggle*/
1352:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT   = USB_CH_HCINTMSK_StallMsk_Msk;                              /*  clear 
 1907              	 .loc 1 1352 0
 1908 0354 0823     	 movs r3,#8
 1909              	.LVL240:
 1910 0356 8360     	 str r3,[r0,#8]
1353:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 1911              	 .loc 1 1353 0
 1912 0358 0023     	 movs r3,#0
 1913 035a E371     	 strb r3,[r4,#7]
1354:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet &= (uint32_t)(~XMC_USBH_PACKET_DATA_Msk);
 1914              	 .loc 1 1354 0
 1915 035c 54F8143C 	 ldr r3,[r4,#-20]
 1916 0360 23F0F003 	 bic r3,r3,#240
1355:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet   |=  (uint32_t)XMC_USBH_PACKET_DATA0;
 1917              	 .loc 1 1355 0
 1918 0364 43F01003 	 orr r3,r3,#16
 1919 0368 44F8143C 	 str r3,[r4,#-20]
1356:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_HANDSHAKE_STALL;                            /
 1920              	 .loc 1 1356 0
 1921 036c 1023     	 movs r3,#16
 1922 036e A372     	 strb r3,[r4,#10]
 1923              	.LVL241:
 1924              	.LBB58:
 1925              	.LBB59:
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1926              	 .loc 1 138 0
 1927 0370 0223     	 movs r3,#2
 1928 0372 C360     	 str r3,[r0,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1929              	 .loc 1 139 0
 1930 0374 5EF80230 	 ldr r3,[lr,r2]
 1931 0378 43F04043 	 orr r3,r3,#-1073741824
 1932 037c 4EF80230 	 str r3,[lr,r2]
 1933              	.LVL242:
 1934 0380 11E0     	 b .L161
 1935              	.LVL243:
 1936              	.L160:
 1937              	.LBE59:
 1938              	.LBE58:
1357:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
1358:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
1359:../Libraries/XMCLib/src/xmc_usbh.c ****         } 
1360:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTx_ERRORS) != 0U) {                                      /* if tran
 1939              	 .loc 1 1360 0
 1940 0382 13F4F06F 	 tst r3,#1920
 1941 0386 0ED0     	 beq .L161
1361:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTx_ERRORS;                                        /*  clear 
 1942              	 .loc 1 1361 0
 1943 0388 4FF4F063 	 mov r3,#1920
 1944              	.LVL244:
 1945 038c 8360     	 str r3,[r0,#8]
1362:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 1946              	 .loc 1 1362 0
 1947 038e 0023     	 movs r3,#0
 1948 0390 E371     	 strb r3,[r4,#7]
1363:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_BUS_ERROR;                                  /
 1949              	 .loc 1 1363 0
 1950 0392 4023     	 movs r3,#64
 1951 0394 A372     	 strb r3,[r4,#10]
 1952              	.LVL245:
 1953              	.LBB60:
 1954              	.LBB61:
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1955              	 .loc 1 138 0
 1956 0396 0223     	 movs r3,#2
 1957 0398 C360     	 str r3,[r0,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1958              	 .loc 1 139 0
 1959 039a 5EF80230 	 ldr r3,[lr,r2]
 1960 039e 43F04043 	 orr r3,r3,#-1073741824
 1961 03a2 4EF80230 	 str r3,[lr,r2]
 1962              	.LVL246:
 1963              	.L161:
 1964              	.LBE61:
 1965              	.LBE60:
1364:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
1365:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
1366:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1367:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((ptr_pipe->transfer_active == 0U) && (ptr_pipe->in_use == 0U) && (ptr_pipe->event != 0U
 1966              	 .loc 1 1367 0
 1967 03a6 237A     	 ldrb r3,[r4,#8]
 1968 03a8 43B9     	 cbnz r3,.L146
 1969              	 .loc 1 1367 0 is_stmt 0 discriminator 1
 1970 03aa E379     	 ldrb r3,[r4,#7]
 1971 03ac 33B9     	 cbnz r3,.L146
 1972              	 .loc 1 1367 0 discriminator 2
 1973 03ae A17A     	 ldrb r1,[r4,#10]
 1974 03b0 21B1     	 cbz r1,.L146
1368:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
 1975              	 .loc 1 1368 0 is_stmt 1
 1976 03b2 DAF80C30 	 ldr r3,[r10,#12]
 1977 03b6 9847     	 blx r3
 1978              	.LVL247:
1369:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->event  = 0U;
 1979              	 .loc 1 1369 0
 1980 03b8 0023     	 movs r3,#0
 1981 03ba A372     	 strb r3,[r4,#10]
 1982              	.LVL248:
 1983              	.L146:
1269:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Check for interrupt of all channels */
 1984              	 .loc 1 1269 0 discriminator 2
 1985 03bc 0135     	 adds r5,r5,#1
 1986              	.LVL249:
 1987 03be 2034     	 adds r4,r4,#32
 1988 03c0 0136     	 adds r6,r6,#1
 1989 03c2 0E2D     	 cmp r5,#14
 1990 03c4 7FF4E6AE 	 bne .L162
 1991 03c8 DDF800B0 	 ldr fp,[sp]
 1992              	.LVL250:
 1993              	.L145:
1370:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1371:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1372:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1373:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1374:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Check if remote wakeup event detected*/
1375:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_WkUpInt_Msk) != 0U)
 1994              	 .loc 1 1375 0
 1995 03cc BBF1000F 	 cmp fp,#0
 1996 03d0 63DA     	 bge .L163
1376:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1377:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_WkUpInt_Msk; /* Clea
 1997              	 .loc 1 1377 0
 1998 03d2 3B4B     	 ldr r3,.L189
 1999 03d4 1A68     	 ldr r2,[r3]
 2000 03d6 4FF00041 	 mov r1,#-2147483648
 2001 03da 5161     	 str r1,[r2,#20]
1378:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Recover PHY clock*/
1379:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 2002              	 .loc 1 1379 0
 2003 03dc 4FF48071 	 mov r1,#256
 2004 03e0 C2F8001E 	 str r1,[r2,#3584]
1380:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Callback function execution*/
1381:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_REMOTE_WAKEUP);
 2005              	 .loc 1 1381 0
 2006 03e4 9B68     	 ldr r3,[r3,#8]
 2007 03e6 0020     	 movs r0,#0
 2008 03e8 4021     	 movs r1,#64
 2009 03ea 9847     	 blx r3
 2010              	.LVL251:
 2011 03ec 55E0     	 b .L163
 2012              	.L171:
 2013 03ee A4F12000 	 sub r0,r4,#32
 2014              	.LVL252:
 2015 03f2 2246     	 mov r2,r4
1382:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1383:../Libraries/XMCLib/src/xmc_usbh.c **** 
1384:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle restarts of unfinished transfers (due to NAK or ACK) */
1385:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
1386:../Libraries/XMCLib/src/xmc_usbh.c ****   for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1387:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 2016              	 .loc 1 1387 0
 2017 03f4 14F8053C 	 ldrb r3,[r4,#-5]
 2018 03f8 012B     	 cmp r3,#1
 2019 03fa 32D1     	 bne .L164
 2020              	 .loc 1 1387 0 is_stmt 0 discriminator 1
 2021 03fc 14F8043C 	 ldrb r3,[r4,#-4]
 2022 0400 7BBB     	 cbnz r3,.L164
1388:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Restart periodic transfer if not in progress and interval expired */
1389:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) 
 2023              	 .loc 1 1389 0 is_stmt 1
 2024 0402 14F8063C 	 ldrb r3,[r4,#-6]
 2025 0406 032B     	 cmp r3,#3
 2026 0408 1BD0     	 beq .L165
1390:../Libraries/XMCLib/src/xmc_usbh.c ****       {
1391:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Data toggle if NACK not received*/
1392:../Libraries/XMCLib/src/xmc_usbh.c ****             if (!is_nack[ch])
 2027              	 .loc 1 1392 0
 2028 040a 2B78     	 ldrb r3,[r5]
 2029 040c B3B9     	 cbnz r3,.L166
1393:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1394:../Libraries/XMCLib/src/xmc_usbh.c ****               switch (ptr_pipe->packet & (uint32_t)XMC_USBH_PACKET_DATA_Msk)
 2030              	 .loc 1 1394 0
 2031 040e 54F8203C 	 ldr r3,[r4,#-32]
 2032 0412 03F0F001 	 and r1,r3,#240
 2033 0416 1029     	 cmp r1,#16
 2034 0418 02D0     	 beq .L168
 2035 041a 2029     	 cmp r1,#32
 2036 041c 07D0     	 beq .L169
 2037 041e 14E0     	 b .L167
 2038              	.L168:
1395:../Libraries/XMCLib/src/xmc_usbh.c ****               {
1396:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA0:
1397:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
 2039              	 .loc 1 1397 0
 2040 0420 23F0F003 	 bic r3,r3,#240
1398:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA1;
 2041              	 .loc 1 1398 0
 2042 0424 43F02003 	 orr r3,r3,#32
 2043 0428 44F8203C 	 str r3,[r4,#-32]
1399:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 2044              	 .loc 1 1399 0
 2045 042c 0DE0     	 b .L167
 2046              	.L169:
1400:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA1:
1401:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
 2047              	 .loc 1 1401 0
 2048 042e 23F0F003 	 bic r3,r3,#240
1402:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA0;
 2049              	 .loc 1 1402 0
 2050 0432 43F01003 	 orr r3,r3,#16
 2051 0436 44F8203C 	 str r3,[r4,#-32]
1403:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 2052              	 .loc 1 1403 0
 2053 043a 06E0     	 b .L167
 2054              	.L166:
1404:../Libraries/XMCLib/src/xmc_usbh.c ****                 default:
1405:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
1406:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1407:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1408:../Libraries/XMCLib/src/xmc_usbh.c ****             else
1409:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1410:../Libraries/XMCLib/src/xmc_usbh.c ****               is_nack[ch] = false;
 2055              	 .loc 1 1410 0
 2056 043c 0023     	 movs r3,#0
 2057 043e 2B70     	 strb r3,[r5]
 2058 0440 03E0     	 b .L167
 2059              	.L165:
1411:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1412:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1413:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT)&&(ptr_pipe->interrupt_trigge
 2060              	 .loc 1 1413 0 discriminator 1
 2061 0442 14F8033C 	 ldrb r3,[r4,#-3]
 2062 0446 012B     	 cmp r3,#1
 2063 0448 0BD1     	 bne .L164
 2064              	.L167:
1414:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT))
1415:../Libraries/XMCLib/src/xmc_usbh.c ****       {
1416:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->interrupt_triggered = 0U;
 2065              	 .loc 1 1416 0
 2066 044a 0023     	 movs r3,#0
 2067 044c 02F8033C 	 strb r3,[r2,#-3]
1417:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->transfer_active = 1U;
 2068              	 .loc 1 1417 0
 2069 0450 0123     	 movs r3,#1
 2070 0452 02F8043C 	 strb r3,[r2,#-4]
 2071 0456 3919     	 adds r1,r7,r4
1418:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_lStartTransfer (ptr_pipe, (((USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_reg
 2072              	 .loc 1 1418 0
 2073 0458 194B     	 ldr r3,.L189
 2074 045a 5B68     	 ldr r3,[r3,#4]
 2075 045c 1944     	 add r1,r1,r3
 2076 045e FFF7FEFF 	 bl XMC_lStartTransfer
 2077              	.LVL253:
 2078              	.L164:
 2079 0462 2034     	 adds r4,r4,#32
 2080              	.LVL254:
 2081 0464 0135     	 adds r5,r5,#1
 2082              	.LVL255:
1386:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 2083              	 .loc 1 1386 0 discriminator 2
 2084 0466 B442     	 cmp r4,r6
 2085 0468 C1D1     	 bne .L171
 2086 046a 26E0     	 b .L184
 2087              	.LVL256:
 2088              	.L132:
 2089 046c 04F00C04 	 and r4,r4,#12
 2090              	.LVL257:
1171:../Libraries/XMCLib/src/xmc_usbh.c ****         if (XMC_USBH0_device.port_reset_active == true) {
 2091              	 .loc 1 1171 0
 2092 0470 0C2C     	 cmp r4,#12
 2093 0472 3FF4ECAD 	 beq .L172
 2094 0476 F0E5     	 b .L130
 2095              	.LVL258:
 2096              	.L174:
1230:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 2097              	 .loc 1 1230 0
 2098 0478 DCF80030 	 ldr r3,[ip]
 2099              	.LVL259:
 2100 047c 4AE6     	 b .L173
 2101              	.LVL260:
 2102              	.L138:
1226:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 2103              	 .loc 1 1226 0
 2104 047e 002C     	 cmp r4,#0
 2105 0480 FAD1     	 bne .L174
 2106 0482 4DE6     	 b .L140
 2107              	.LVL261:
 2108              	.L151:
1297:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
 2109              	 .loc 1 1297 0
 2110 0484 5EF80230 	 ldr r3,[lr,r2]
 2111 0488 13F4004F 	 tst r3,#32768
 2112 048c 7FF4C9AE 	 bne .L177
 2113 0490 0FE0     	 b .L185
 2114              	.LVL262:
 2115              	.L153:
1318:../Libraries/XMCLib/src/xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
 2116              	 .loc 1 1318 0
 2117 0492 5EF80230 	 ldr r3,[lr,r2]
 2118 0496 0023     	 movs r3,#0
 2119 0498 59E7     	 b .L156
 2120              	.LVL263:
 2121              	.L163:
 2122 049a 0A4C     	 ldr r4,.L189+4
 2123 049c 0A4D     	 ldr r5,.L189+8
 2124 049e 04F5E076 	 add r6,r4,#448
 2125 04a2 A4F12007 	 sub r7,r4,#32
 2126 04a6 C7F1FF27 	 rsb r7,r7,#-16711936
 2127 04aa 07F57F07 	 add r7,r7,#16711680
 2128 04ae E037     	 adds r7,r7,#224
 2129 04b0 9DE7     	 b .L171
 2130              	.LVL264:
 2131              	.L185:
 2132 04b2 5EF80230 	 ldr r3,[lr,r2]
 2133 04b6 0023     	 movs r3,#0
 2134 04b8 1DE7     	 b .L154
 2135              	.LVL265:
 2136              	.L184:
1419:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1420:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1421:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_pipe++;
1422:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1423:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2137              	 .loc 1 1423 0
 2138 04ba 03B0     	 add sp,sp,#12
 2139              	.LCFI13:
 2140              	 .cfi_def_cfa_offset 36
 2141              	 
 2142 04bc BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 2143              	.LVL266:
 2144              	.L190:
 2145              	 .align 2
 2146              	.L189:
 2147 04c0 00000000 	 .word .LANCHOR0
 2148 04c4 20000000 	 .word pipe+32
 2149 04c8 00000000 	 .word is_nack
 2150              	 .cfi_endproc
 2151              	.LFE200:
 2153              	 .section .text.XMC_USBH_GetInterruptStatus,"ax",%progbits
 2154              	 .align 2
 2155              	 .global XMC_USBH_GetInterruptStatus
 2156              	 .thumb
 2157              	 .thumb_func
 2159              	XMC_USBH_GetInterruptStatus:
 2160              	.LFB201:
1424:../Libraries/XMCLib/src/xmc_usbh.c **** 
1425:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function provides host mode interrupt status*/
1426:../Libraries/XMCLib/src/xmc_usbh.c **** uint32_t XMC_USBH_GetInterruptStatus(void)
1427:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2161              	 .loc 1 1427 0
 2162              	 .cfi_startproc
 2163              	 
 2164              	 
 2165              	 
1428:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH0_device.global_register->GINTSTS_HOSTMODE;
 2166              	 .loc 1 1428 0
 2167 0000 014B     	 ldr r3,.L192
 2168 0002 1B68     	 ldr r3,[r3]
 2169 0004 5869     	 ldr r0,[r3,#20]
1429:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2170              	 .loc 1 1429 0
 2171 0006 7047     	 bx lr
 2172              	.L193:
 2173              	 .align 2
 2174              	.L192:
 2175 0008 00000000 	 .word .LANCHOR0
 2176              	 .cfi_endproc
 2177              	.LFE201:
 2179              	 .section .text.XMC_USBH_Select_VBUS,"ax",%progbits
 2180              	 .align 2
 2181              	 .global XMC_USBH_Select_VBUS
 2182              	 .thumb
 2183              	 .thumb_func
 2185              	XMC_USBH_Select_VBUS:
 2186              	.LFB202:
1430:../Libraries/XMCLib/src/xmc_usbh.c **** 
1431:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function selects the port pin used as DRIVEVBUS*/
1432:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_Select_VBUS(XMC_GPIO_PORT_t* port, uint32_t pin)
1433:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2187              	 .loc 1 1433 0
 2188              	 .cfi_startproc
 2189              	 
 2190              	 
 2191              	.LVL267:
 2192 0000 08B5     	 push {r3,lr}
 2193              	.LCFI14:
 2194              	 .cfi_def_cfa_offset 8
 2195              	 .cfi_offset 3,-8
 2196              	 .cfi_offset 14,-4
1434:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_port = port;
 2197              	 .loc 1 1434 0
 2198 0002 044B     	 ldr r3,.L196
 2199 0004 1860     	 str r0,[r3]
1435:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_pin = pin;
 2200              	 .loc 1 1435 0
 2201 0006 044B     	 ldr r3,.L196+4
 2202 0008 1960     	 str r1,[r3]
1436:../Libraries/XMCLib/src/xmc_usbh.c **** 
1437:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Configure the port pin alternate function*/
1438:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 2203              	 .loc 1 1438 0
 2204 000a C9B2     	 uxtb r1,r1
 2205              	.LVL268:
 2206 000c 8822     	 movs r2,#136
 2207 000e FFF7FEFF 	 bl XMC_GPIO_SetMode
 2208              	.LVL269:
 2209 0012 08BD     	 pop {r3,pc}
 2210              	.L197:
 2211              	 .align 2
 2212              	.L196:
 2213 0014 00000000 	 .word .LANCHOR3
 2214 0018 00000000 	 .word .LANCHOR4
 2215              	 .cfi_endproc
 2216              	.LFE202:
 2218              	 .section .text.XMC_USBH_TurnOffResumeBit,"ax",%progbits
 2219              	 .align 2
 2220              	 .global XMC_USBH_TurnOffResumeBit
 2221              	 .thumb
 2222              	 .thumb_func
 2224              	XMC_USBH_TurnOffResumeBit:
 2225              	.LFB203:
1439:../Libraries/XMCLib/src/xmc_usbh.c **** }
1440:../Libraries/XMCLib/src/xmc_usbh.c **** 
1441:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function asserts the remote wakeup request by device by clearing the resume bit*/
1442:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_TurnOffResumeBit(void)
1443:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2226              	 .loc 1 1443 0
 2227              	 .cfi_startproc
 2228              	 
 2229              	 
 2230              	 
1444:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
1445:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Clear resume bit*/
1446:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt = XMC_USBH0_device.global_register->HPRT;
 2231              	 .loc 1 1446 0
 2232 0000 044B     	 ldr r3,.L199
 2233 0002 1A68     	 ldr r2,[r3]
 2234 0004 D2F84034 	 ldr r3,[r2,#1088]
 2235              	.LVL270:
1447:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
1448:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 2236              	 .loc 1 1448 0
 2237 0008 23F04403 	 bic r3,r3,#68
 2238              	.LVL271:
1449:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.global_register->HPRT = hprt;
 2239              	 .loc 1 1449 0
 2240 000c C2F84034 	 str r3,[r2,#1088]
 2241 0010 7047     	 bx lr
 2242              	.L200:
 2243 0012 00BF     	 .align 2
 2244              	.L199:
 2245 0014 00000000 	 .word .LANCHOR0
 2246              	 .cfi_endproc
 2247              	.LFE203:
 2249              	 .section .text.XMC_USBH_osDelay,"ax",%progbits
 2250              	 .align 2
 2251              	 .weak XMC_USBH_osDelay
 2252              	 .thumb
 2253              	 .thumb_func
 2255              	XMC_USBH_osDelay:
 2256              	.LFB204:
1450:../Libraries/XMCLib/src/xmc_usbh.c **** }
1451:../Libraries/XMCLib/src/xmc_usbh.c **** 
1452:../Libraries/XMCLib/src/xmc_usbh.c **** 
1453:../Libraries/XMCLib/src/xmc_usbh.c **** 
1454:../Libraries/XMCLib/src/xmc_usbh.c **** /*USB host driver assembling all the implementation into a single CMSIS compliant structure type*/
1455:../Libraries/XMCLib/src/xmc_usbh.c **** XMC_USBH_DRIVER_t Driver_USBH0 = {
1456:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetVersion,
1457:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetCapabilities,
1458:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_Initialize,
1459:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_Uninitialize,
1460:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PowerControl,
1461:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortVbusOnOff,
1462:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortReset,
1463:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortSuspend,
1464:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortResume,
1465:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortGetState,
1466:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeCreate,
1467:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeModify,
1468:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeDelete,
1469:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeReset,
1470:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransfer,
1471:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransferGetResult,
1472:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransferAbort,
1473:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetFrameNumber
1474:../Libraries/XMCLib/src/xmc_usbh.c **** };
1475:../Libraries/XMCLib/src/xmc_usbh.c **** 
1476:../Libraries/XMCLib/src/xmc_usbh.c **** 
1477:../Libraries/XMCLib/src/xmc_usbh.c **** /*Weak definition of delay function*/
1478:../Libraries/XMCLib/src/xmc_usbh.c **** __WEAK uint8_t XMC_USBH_osDelay(uint32_t MS)
1479:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2257              	 .loc 1 1479 0
 2258              	 .cfi_startproc
 2259              	 
 2260              	 
 2261              	 
 2262              	.LVL272:
 2263              	.L202:
1480:../Libraries/XMCLib/src/xmc_usbh.c ****   /*A precise time delay implementation for this function has to be provided*/
1481:../Libraries/XMCLib/src/xmc_usbh.c ****   while (1)
1482:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1483:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Wait*/
1484:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 2264              	 .loc 1 1484 0 discriminator 1
 2265 0000 FEE7     	 b .L202
 2266              	 .cfi_endproc
 2267              	.LFE204:
 2269 0002 00BF     	 .section .text.XMC_USBH_PipeTransferAbort,"ax",%progbits
 2270              	 .align 2
 2271              	 .thumb
 2272              	 .thumb_func
 2274              	XMC_USBH_PipeTransferAbort:
 2275              	.LFB198:
1058:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 2276              	 .loc 1 1058 0
 2277              	 .cfi_startproc
 2278              	 
 2279              	 
 2280              	.LVL273:
 2281 0000 38B5     	 push {r3,r4,r5,lr}
 2282              	.LCFI15:
 2283              	 .cfi_def_cfa_offset 16
 2284              	 .cfi_offset 3,-16
 2285              	 .cfi_offset 4,-12
 2286              	 .cfi_offset 5,-8
 2287              	 .cfi_offset 14,-4
 2288              	.LVL274:
1066:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2289              	 .loc 1 1066 0
 2290 0002 294B     	 ldr r3,.L215
 2291 0004 5B7C     	 ldrb r3,[r3,#17]
 2292 0006 002B     	 cmp r3,#0
 2293 0008 3FD0     	 beq .L208
 2294 000a 0446     	 mov r4,r0
1072:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2295              	 .loc 1 1072 0
 2296 000c 0028     	 cmp r0,#0
 2297 000e 3FD0     	 beq .L209
1078:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2298              	 .loc 1 1078 0
 2299 0010 254B     	 ldr r3,.L215
 2300 0012 5B68     	 ldr r3,[r3,#4]
 2301 0014 C31A     	 subs r3,r0,r3
 2302 0016 5B11     	 asrs r3,r3,#5
 2303              	.LVL275:
1080:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->in_use = 0U;
 2304              	 .loc 1 1080 0
 2305 0018 244A     	 ldr r2,.L215+4
 2306 001a 02EB4312 	 add r2,r2,r3,lsl#5
 2307 001e 1832     	 adds r2,r2,#24
 2308 0020 D278     	 ldrb r2,[r2,#3]
 2309 0022 12F0FF0F 	 tst r2,#255
 2310 0026 36D0     	 beq .L210
1081:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Disable channel if not yet halted */
 2311              	 .loc 1 1081 0
 2312 0028 204A     	 ldr r2,.L215+4
 2313 002a 02EB4313 	 add r3,r2,r3,lsl#5
 2314              	.LVL276:
 2315 002e 0022     	 movs r2,#0
 2316 0030 DA76     	 strb r2,[r3,#27]
1083:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 2317              	 .loc 1 1083 0
 2318 0032 8368     	 ldr r3,[r0,#8]
 2319 0034 13F0020F 	 tst r3,#2
 2320 0038 30D1     	 bne .L211
1085:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 2321              	 .loc 1 1085 0
 2322 003a 0368     	 ldr r3,[r0]
 2323 003c 9342     	 cmp r3,r2
 2324 003e 30DA     	 bge .L212
 2325 0040 0546     	 mov r5,r0
1087:../Libraries/XMCLib/src/xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
 2326              	 .loc 1 1087 0
 2327 0042 EA60     	 str r2,[r5,#12]
1088:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
 2328              	 .loc 1 1088 0
 2329 0044 0120     	 movs r0,#1
 2330              	.LVL277:
 2331 0046 FFF7FEFF 	 bl XMC_USBH_osDelay
 2332              	.LVL278:
1089:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
 2333              	 .loc 1 1089 0
 2334 004a A368     	 ldr r3,[r4,#8]
 2335 004c 13F0100F 	 tst r3,#16
 2336 0050 04D0     	 beq .L205
1090:../Libraries/XMCLib/src/xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
 2337              	 .loc 1 1090 0
 2338 0052 40F2BB73 	 movw r3,#1979
 2339 0056 A360     	 str r3,[r4,#8]
 2340              	.LVL279:
1091:../Libraries/XMCLib/src/xmc_usbh.c ****             }
 2341              	 .loc 1 1091 0
 2342 0058 0020     	 movs r0,#0
 2343 005a 38BD     	 pop {r3,r4,r5,pc}
 2344              	.LVL280:
 2345              	.L205:
1095:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCCHAR =  (uint32_t)(ptr_ch->HCCHAR | USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR
 2346              	 .loc 1 1095 0
 2347 005c 40F2BB73 	 movw r3,#1979
 2348 0060 A360     	 str r3,[r4,#8]
1096:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2349              	 .loc 1 1096 0
 2350 0062 2368     	 ldr r3,[r4]
 2351 0064 43F04043 	 orr r3,r3,#-1073741824
 2352 0068 2360     	 str r3,[r4]
 2353              	.LVL281:
 2354 006a 41F28833 	 movw r3,#5000
1062:../Libraries/XMCLib/src/xmc_usbh.c ****   
 2355              	 .loc 1 1062 0
 2356 006e 4FF0FF30 	 mov r0,#-1
1101:../Libraries/XMCLib/src/xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
 2357              	 .loc 1 1101 0
 2358 0072 40F2BB75 	 movw r5,#1979
1102:../Libraries/XMCLib/src/xmc_usbh.c ****                 }
 2359              	 .loc 1 1102 0
 2360 0076 0021     	 movs r1,#0
 2361              	.LVL282:
 2362              	.L207:
1100:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
 2363              	 .loc 1 1100 0
 2364 0078 A268     	 ldr r2,[r4,#8]
 2365 007a 12F0020F 	 tst r2,#2
1101:../Libraries/XMCLib/src/xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
 2366              	 .loc 1 1101 0
 2367 007e 1CBF     	 itt ne
 2368 0080 A560     	 strne r5,[r4,#8]
 2369              	.LVL283:
1102:../Libraries/XMCLib/src/xmc_usbh.c ****                 }
 2370              	 .loc 1 1102 0
 2371 0082 0846     	 movne r0,r1
 2372              	.LVL284:
1099:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
 2373              	 .loc 1 1099 0
 2374 0084 013B     	 subs r3,r3,#1
 2375              	.LVL285:
 2376 0086 F7D1     	 bne .L207
 2377 0088 38BD     	 pop {r3,r4,r5,pc}
 2378              	.LVL286:
 2379              	.L208:
1062:../Libraries/XMCLib/src/xmc_usbh.c ****   
 2380              	 .loc 1 1062 0
 2381 008a 4FF0FF30 	 mov r0,#-1
 2382              	.LVL287:
 2383 008e 38BD     	 pop {r3,r4,r5,pc}
 2384              	.LVL288:
 2385              	.L209:
1074:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2386              	 .loc 1 1074 0
 2387 0090 6FF00400 	 mvn r0,#4
 2388              	.LVL289:
 2389 0094 38BD     	 pop {r3,r4,r5,pc}
 2390              	.LVL290:
 2391              	.L210:
1062:../Libraries/XMCLib/src/xmc_usbh.c ****   
 2392              	 .loc 1 1062 0
 2393 0096 4FF0FF30 	 mov r0,#-1
 2394              	.LVL291:
 2395 009a 38BD     	 pop {r3,r4,r5,pc}
 2396              	.LVL292:
 2397              	.L211:
 2398 009c 4FF0FF30 	 mov r0,#-1
 2399              	.LVL293:
 2400 00a0 38BD     	 pop {r3,r4,r5,pc}
 2401              	.LVL294:
 2402              	.L212:
 2403 00a2 4FF0FF30 	 mov r0,#-1
 2404              	.LVL295:
1113:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2405              	 .loc 1 1113 0
 2406 00a6 38BD     	 pop {r3,r4,r5,pc}
 2407              	.LVL296:
 2408              	.L216:
 2409              	 .align 2
 2410              	.L215:
 2411 00a8 00000000 	 .word .LANCHOR0
 2412 00ac 00000000 	 .word pipe
 2413              	 .cfi_endproc
 2414              	.LFE198:
 2416              	 .section .text.XMC_USBH_PortResume,"ax",%progbits
 2417              	 .align 2
 2418              	 .thumb
 2419              	 .thumb_func
 2421              	XMC_USBH_PortResume:
 2422              	.LFB190:
 622:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2423              	 .loc 1 622 0
 2424              	 .cfi_startproc
 2425              	 
 2426              	 
 2427              	.LVL297:
 625:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2428              	 .loc 1 625 0
 2429 0000 124B     	 ldr r3,.L223
 2430 0002 5B7C     	 ldrb r3,[r3,#17]
 2431 0004 DBB1     	 cbz r3,.L219
 631:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2432              	 .loc 1 631 0
 2433 0006 E8B9     	 cbnz r0,.L220
 622:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2434              	 .loc 1 622 0
 2435 0008 10B5     	 push {r4,lr}
 2436              	.LCFI16:
 2437              	 .cfi_def_cfa_offset 8
 2438              	 .cfi_offset 4,-8
 2439              	 .cfi_offset 14,-4
 638:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Set resume bit*/
 2440              	 .loc 1 638 0
 2441 000a 104C     	 ldr r4,.L223
 2442 000c 2268     	 ldr r2,[r4]
 2443 000e 4FF48073 	 mov r3,#256
 2444 0012 C2F8003E 	 str r3,[r2,#3584]
 640:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 2445              	 .loc 1 640 0
 2446 0016 D2F84034 	 ldr r3,[r2,#1088]
 2447              	.LVL298:
 641:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 2448              	 .loc 1 641 0
 2449 001a 23F00403 	 bic r3,r3,#4
 2450              	.LVL299:
 642:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 2451              	 .loc 1 642 0
 2452 001e 43F04003 	 orr r3,r3,#64
 2453              	.LVL300:
 643:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2454              	 .loc 1 643 0
 2455 0022 C2F84034 	 str r3,[r2,#1088]
 645:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2456              	 .loc 1 645 0
 2457 0026 1420     	 movs r0,#20
 2458              	.LVL301:
 2459 0028 FFF7FEFF 	 bl XMC_USBH_osDelay
 2460              	.LVL302:
 647:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 2461              	 .loc 1 647 0
 2462 002c 2268     	 ldr r2,[r4]
 2463 002e D2F84034 	 ldr r3,[r2,#1088]
 2464              	.LVL303:
 649:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 2465              	 .loc 1 649 0
 2466 0032 23F04403 	 bic r3,r3,#68
 2467              	.LVL304:
 650:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2468              	 .loc 1 650 0
 2469 0036 C2F84034 	 str r3,[r2,#1088]
 623:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 2470              	 .loc 1 623 0
 2471 003a 0020     	 movs r0,#0
 2472 003c 10BD     	 pop {r4,pc}
 2473              	.LVL305:
 2474              	.L219:
 2475              	.LCFI17:
 2476              	 .cfi_def_cfa_offset 0
 2477              	 .cfi_restore 4
 2478              	 .cfi_restore 14
 627:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 2479              	 .loc 1 627 0
 2480 003e 4FF0FF30 	 mov r0,#-1
 2481              	.LVL306:
 2482 0042 7047     	 bx lr
 2483              	.LVL307:
 2484              	.L220:
 633:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2485              	 .loc 1 633 0
 2486 0044 6FF00400 	 mvn r0,#4
 2487              	.LVL308:
 2488 0048 7047     	 bx lr
 2489              	.L224:
 2490 004a 00BF     	 .align 2
 2491              	.L223:
 2492 004c 00000000 	 .word .LANCHOR0
 2493              	 .cfi_endproc
 2494              	.LFE190:
 2496              	 .section .text.XMC_USBH_PortReset,"ax",%progbits
 2497              	 .align 2
 2498              	 .thumb
 2499              	 .thumb_func
 2501              	XMC_USBH_PortReset:
 2502              	.LFB188:
 535:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 2503              	 .loc 1 535 0
 2504              	 .cfi_startproc
 2505              	 
 2506              	 
 2507              	.LVL309:
 2508 0000 70B5     	 push {r4,r5,r6,lr}
 2509              	.LCFI18:
 2510              	 .cfi_def_cfa_offset 16
 2511              	 .cfi_offset 4,-16
 2512              	 .cfi_offset 5,-12
 2513              	 .cfi_offset 6,-8
 2514              	 .cfi_offset 14,-4
 2515              	.LVL310:
 538:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2516              	 .loc 1 538 0
 2517 0002 194B     	 ldr r3,.L233
 2518 0004 5B7C     	 ldrb r3,[r3,#17]
 2519 0006 53B3     	 cbz r3,.L229
 546:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2520              	 .loc 1 546 0
 2521 0008 0028     	 cmp r0,#0
 2522 000a 0CBF     	 ite eq
 2523 000c 0026     	 moveq r6,#0
 2524 000e 6FF00406 	 mvnne r6,#4
 2525              	.LVL311:
 549:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 2526              	 .loc 1 549 0
 2527 0012 154C     	 ldr r4,.L233
 2528 0014 0123     	 movs r3,#1
 2529 0016 A374     	 strb r3,[r4,#18]
 550:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 2530              	 .loc 1 550 0
 2531 0018 2268     	 ldr r2,[r4]
 2532 001a D2F84054 	 ldr r5,[r2,#1088]
 2533              	.LVL312:
 551:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 2534              	 .loc 1 551 0
 2535 001e 25F00403 	 bic r3,r5,#4
 2536              	.LVL313:
 552:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 2537              	 .loc 1 552 0
 2538 0022 43F48073 	 orr r3,r3,#256
 2539              	.LVL314:
 553:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 2540              	 .loc 1 553 0
 2541 0026 C2F84034 	 str r3,[r2,#1088]
 554:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 2542              	 .loc 1 554 0
 2543 002a 3220     	 movs r0,#50
 2544              	.LVL315:
 2545 002c FFF7FEFF 	 bl XMC_USBH_osDelay
 2546              	.LVL316:
 555:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 2547              	 .loc 1 555 0
 2548 0030 25F48275 	 bic r5,r5,#260
 2549              	.LVL317:
 556:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 2550              	 .loc 1 556 0
 2551 0034 2368     	 ldr r3,[r4]
 2552 0036 C3F84054 	 str r5,[r3,#1088]
 557:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2553              	 .loc 1 557 0
 2554 003a 3220     	 movs r0,#50
 2555 003c FFF7FEFF 	 bl XMC_USBH_osDelay
 2556              	.LVL318:
 560:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2557              	 .loc 1 560 0
 2558 0040 2268     	 ldr r2,[r4]
 2559              	.L228:
 560:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2560              	 .loc 1 560 0 is_stmt 0 discriminator 1
 2561 0042 D2F84034 	 ldr r3,[r2,#1088]
 2562 0046 13F0040F 	 tst r3,#4
 2563 004a FAD0     	 beq .L228
 565:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2564              	 .loc 1 565 0 is_stmt 1
 2565 004c 064B     	 ldr r3,.L233
 2566 004e 9B7C     	 ldrb r3,[r3,#18]
 2567 0050 3BB1     	 cbz r3,.L226
 567:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 2568              	 .loc 1 567 0
 2569 0052 0022     	 movs r2,#0
 2570 0054 044B     	 ldr r3,.L233
 2571 0056 9A74     	 strb r2,[r3,#18]
 2572              	.LVL319:
 568:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2573              	 .loc 1 568 0
 2574 0058 4FF0FF36 	 mov r6,#-1
 2575 005c 01E0     	 b .L226
 2576              	.LVL320:
 2577              	.L229:
 540:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 2578              	 .loc 1 540 0
 2579 005e 4FF0FF36 	 mov r6,#-1
 2580              	.LVL321:
 2581              	.L226:
 573:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2582              	 .loc 1 573 0
 2583 0062 3046     	 mov r0,r6
 2584 0064 70BD     	 pop {r4,r5,r6,pc}
 2585              	.LVL322:
 2586              	.L234:
 2587 0066 00BF     	 .align 2
 2588              	.L233:
 2589 0068 00000000 	 .word .LANCHOR0
 2590              	 .cfi_endproc
 2591              	.LFE188:
 2593              	 .section .text.XMC_USBH_PowerControl,"ax",%progbits
 2594              	 .align 2
 2595              	 .thumb
 2596              	 .thumb_func
 2598              	XMC_USBH_PowerControl:
 2599              	.LFB186:
 388:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2600              	 .loc 1 388 0
 2601              	 .cfi_startproc
 2602              	 
 2603              	 
 2604              	.LVL323:
 2605 0000 38B5     	 push {r3,r4,r5,lr}
 2606              	.LCFI19:
 2607              	 .cfi_def_cfa_offset 16
 2608              	 .cfi_offset 3,-16
 2609              	 .cfi_offset 4,-12
 2610              	 .cfi_offset 5,-8
 2611              	 .cfi_offset 14,-4
 2612              	.LVL324:
 391:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 2613              	 .loc 1 391 0
 2614 0002 10B1     	 cbz r0,.L237
 2615 0004 0228     	 cmp r0,#2
 2616 0006 27D0     	 beq .L238
 2617 0008 95E0     	 b .L247
 2618              	.L237:
 2619              	.LVL325:
 2620              	.LBB62:
 2621              	.LBB63:
 2622              	 .loc 2 1720 0
 2623 000a 4F4B     	 ldr r3,.L249
 2624 000c 4FF40062 	 mov r2,#2048
 2625 0010 C3F88C20 	 str r2,[r3,#140]
 2626              	.LBB64:
 2627              	.LBB65:
 2628              	 .loc 3 820 0
 2629              	
 2630 0014 BFF34F8F 	 dsb 0xF
 2631              	
 2632              	 .thumb
 2633              	.LBE65:
 2634              	.LBE64:
 2635              	.LBB66:
 2636              	.LBB67:
 809:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2637              	 .loc 3 809 0
 2638              	
 2639 0018 BFF36F8F 	 isb 0xF
 2640              	
 2641              	.LVL326:
 2642              	 .thumb
 2643              	.LBE67:
 2644              	.LBE66:
 2645              	.LBE63:
 2646              	.LBE62:
 2647              	.LBB68:
 2648              	.LBB69:
1721:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1722:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1723:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1724:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1725:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1726:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1727:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1728:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1729:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1730:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1731:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1732:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1733:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1734:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1735:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1736:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1737:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1738:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1739:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1740:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1741:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   else
1742:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1743:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1744:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1745:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1746:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1747:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1748:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1749:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1750:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1751:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1752:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1753:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1754:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1755:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1756:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1757:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1758:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1759:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1760:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1761:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1762:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1763:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1764:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1765:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1766:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1767:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1768:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1769:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1770:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1771:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1772:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1773:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 2649              	 .loc 2 1773 0
 2650 001c C3F88C21 	 str r2,[r3,#396]
 2651              	.LBE69:
 2652              	.LBE68:
 398:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 2653              	 .loc 1 398 0
 2654 0020 4A4D     	 ldr r5,.L249+4
 2655 0022 0024     	 movs r4,#0
 2656 0024 6C74     	 strb r4,[r5,#17]
 399:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 2657              	 .loc 1 399 0
 2658 0026 2B68     	 ldr r3,[r5]
 2659 0028 9A68     	 ldr r2,[r3,#8]
 2660 002a 22F00102 	 bic r2,r2,#1
 2661 002e 9A60     	 str r2,[r3,#8]
 2662              	.LVL327:
 401:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 2663              	 .loc 1 401 0
 2664 0030 D3F8002E 	 ldr r2,[r3,#3584]
 2665 0034 42F00102 	 orr r2,r2,#1
 2666 0038 C3F8002E 	 str r2,[r3,#3584]
 402:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 2667              	 .loc 1 402 0
 2668 003c FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 2669              	.LVL328:
 403:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 2670              	 .loc 1 403 0
 2671 0040 4348     	 ldr r0,.L249+8
 2672 0042 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 2673              	.LVL329:
 404:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 2674              	 .loc 1 404 0
 2675 0046 AC74     	 strb r4,[r5,#18]
 405:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 2676              	 .loc 1 405 0
 2677 0048 4248     	 ldr r0,.L249+12
 2678 004a 2146     	 mov r1,r4
 2679 004c 4FF4E072 	 mov r2,#448
 2680 0050 FFF7FEFF 	 bl memset
 2681              	.LVL330:
 389:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_value;
 2682              	 .loc 1 389 0
 2683 0054 2046     	 mov r0,r4
 406:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_FULL:
 2684              	 .loc 1 406 0
 2685 0056 38BD     	 pop {r3,r4,r5,pc}
 2686              	.LVL331:
 2687              	.L238:
 408:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2688              	 .loc 1 408 0
 2689 0058 3C4B     	 ldr r3,.L249+4
 2690 005a 1B7C     	 ldrb r3,[r3,#16]
 2691 005c 002B     	 cmp r3,#0
 2692 005e 6DD0     	 beq .L243
 413:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2693              	 .loc 1 413 0
 2694 0060 3A4B     	 ldr r3,.L249+4
 2695 0062 5B7C     	 ldrb r3,[r3,#17]
 2696 0064 022B     	 cmp r3,#2
 2697 0066 6CD0     	 beq .L244
 2698              	.LVL332:
 419:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 2699              	 .loc 1 419 0
 2700 0068 0220     	 movs r0,#2
 2701              	.LVL333:
 2702 006a FFF7FEFF 	 bl XMC_USBH_osDelay
 2703              	.LVL334:
 420:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 2704              	 .loc 1 420 0
 2705 006e 3848     	 ldr r0,.L249+8
 2706 0070 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 2707              	.LVL335:
 421:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 2708              	 .loc 1 421 0
 2709 0074 0220     	 movs r0,#2
 2710 0076 FFF7FEFF 	 bl XMC_USBH_osDelay
 2711              	.LVL336:
 422:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 2712              	 .loc 1 422 0
 2713 007a 6420     	 movs r0,#100
 2714 007c FFF7FEFF 	 bl XMC_USBH_osDelay
 2715              	.LVL337:
 423:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2716              	 .loc 1 423 0
 2717 0080 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 2718              	.LVL338:
 426:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 2719              	 .loc 1 426 0
 2720 0084 314B     	 ldr r3,.L249+4
 2721 0086 1B68     	 ldr r3,[r3]
 2722 0088 D3F8002E 	 ldr r2,[r3,#3584]
 2723 008c 22F00102 	 bic r2,r2,#1
 2724 0090 C3F8002E 	 str r2,[r3,#3584]
 427:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2725              	 .loc 1 427 0
 2726 0094 DA68     	 ldr r2,[r3,#12]
 2727 0096 42F04002 	 orr r2,r2,#64
 2728 009a DA60     	 str r2,[r3,#12]
 2729              	.L239:
 429:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2730              	 .loc 1 429 0 discriminator 1
 2731 009c 1A69     	 ldr r2,[r3,#16]
 2732 009e 002A     	 cmp r2,#0
 2733 00a0 FCDA     	 bge .L239
 434:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2734              	 .loc 1 434 0
 2735 00a2 1A69     	 ldr r2,[r3,#16]
 2736 00a4 42F00102 	 orr r2,r2,#1
 2737 00a8 1A61     	 str r2,[r3,#16]
 2738              	.L240:
 436:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2739              	 .loc 1 436 0 discriminator 1
 2740 00aa 1A69     	 ldr r2,[r3,#16]
 2741 00ac 12F0010F 	 tst r2,#1
 2742 00b0 FBD1     	 bne .L240
 440:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2743              	 .loc 1 440 0
 2744 00b2 6420     	 movs r0,#100
 2745 00b4 FFF7FEFF 	 bl XMC_USBH_osDelay
 2746              	.LVL339:
 442:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 2747              	 .loc 1 442 0
 2748 00b8 244C     	 ldr r4,.L249+4
 2749 00ba 0021     	 movs r1,#0
 2750 00bc A174     	 strb r1,[r4,#18]
 443:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2751              	 .loc 1 443 0
 2752 00be 2548     	 ldr r0,.L249+12
 2753 00c0 4FF4E072 	 mov r2,#448
 2754 00c4 FFF7FEFF 	 bl memset
 2755              	.LVL340:
 446:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 2756              	 .loc 1 446 0
 2757 00c8 2368     	 ldr r3,[r4]
 2758 00ca DA68     	 ldr r2,[r3,#12]
 2759              	.LVL341:
 447:../Libraries/XMCLib/src/xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 2760              	 .loc 1 447 0
 2761 00cc 02F0C042 	 and r2,r2,#1610612736
 2762              	.LVL342:
 2763 00d0 B2F1005F 	 cmp r2,#536870912
 2764 00d4 0AD0     	 beq .L241
 450:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 2765              	 .loc 1 450 0
 2766 00d6 DA68     	 ldr r2,[r3,#12]
 2767 00d8 22F08042 	 bic r2,r2,#1073741824
 2768 00dc DA60     	 str r2,[r3,#12]
 451:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 2769              	 .loc 1 451 0
 2770 00de DA68     	 ldr r2,[r3,#12]
 2771 00e0 42F00052 	 orr r2,r2,#536870912
 2772 00e4 DA60     	 str r2,[r3,#12]
 452:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 2773              	 .loc 1 452 0
 2774 00e6 6420     	 movs r0,#100
 2775 00e8 FFF7FEFF 	 bl XMC_USBH_osDelay
 2776              	.LVL343:
 2777              	.L241:
 456:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2778              	 .loc 1 456 0
 2779 00ec 1749     	 ldr r1,.L249+4
 2780 00ee 0B68     	 ldr r3,[r1]
 2781 00f0 D3F80024 	 ldr r2,[r3,#1024]
 2782 00f4 42F40172 	 orr r2,r2,#516
 2783 00f8 C3F80024 	 str r2,[r3,#1024]
 459:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 2784              	 .loc 1 459 0
 2785 00fc 4FF48D72 	 mov r2,#282
 2786 0100 5A62     	 str r2,[r3,#36]
 461:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 2787              	 .loc 1 461 0
 2788 0102 02F58012 	 add r2,r2,#1048576
 2789 0106 9A62     	 str r2,[r3,#40]
 463:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable channel interrupts */
 2790              	 .loc 1 463 0
 2791 0108 134A     	 ldr r2,.L249+16
 2792 010a C3F80021 	 str r2,[r3,#256]
 465:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Unmask interrupts */
 2793              	 .loc 1 465 0
 2794 010e 43F6FF72 	 movw r2,#16383
 2795 0112 C3F81824 	 str r2,[r3,#1048]
 467:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 2796              	 .loc 1 467 0
 2797 0116 114A     	 ldr r2,.L249+20
 2798 0118 9A61     	 str r2,[r3,#24]
 476:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable interrupts */
 2799              	 .loc 1 476 0
 2800 011a 0222     	 movs r2,#2
 2801 011c 4A74     	 strb r2,[r1,#17]
 478:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set highest interrupt priority */
 2802              	 .loc 1 478 0
 2803 011e 9A68     	 ldr r2,[r3,#8]
 2804 0120 42F00102 	 orr r2,r2,#1
 2805 0124 9A60     	 str r2,[r3,#8]
 2806              	.LVL344:
 2807              	.LBB70:
 2808              	.LBB71:
1774:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1775:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1776:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1777:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1778:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1779:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1780:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1781:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1782:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1783:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1784:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1785:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1786:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1787:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1788:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1789:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1790:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1791:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1792:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   else
1793:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1794:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1795:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
1796:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** }
1797:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1798:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** 
1799:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** /**
1800:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1801:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1802:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1803:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1804:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1805:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1806:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1807:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****  */
1808:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1809:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h **** {
1810:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1811:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   {
1812:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
 2809              	 .loc 2 1812 0
 2810 0126 084B     	 ldr r3,.L249
 2811 0128 0020     	 movs r0,#0
 2812 012a 83F86B03 	 strb r0,[r3,#875]
 2813              	.LVL345:
 2814              	.LBE71:
 2815              	.LBE70:
 2816              	.LBB72:
 2817              	.LBB73:
1684:E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Include\core_cm4.h ****   }
 2818              	 .loc 2 1684 0
 2819 012e 4FF40062 	 mov r2,#2048
 2820 0132 DA60     	 str r2,[r3,#12]
 2821 0134 38BD     	 pop {r3,r4,r5,pc}
 2822              	.LVL346:
 2823              	.L247:
 2824              	.LBE73:
 2825              	.LBE72:
 393:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 2826              	 .loc 1 393 0
 2827 0136 6FF00300 	 mvn r0,#3
 2828              	.LVL347:
 2829 013a 38BD     	 pop {r3,r4,r5,pc}
 2830              	.LVL348:
 2831              	.L243:
 410:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 2832              	 .loc 1 410 0
 2833 013c 4FF0FF30 	 mov r0,#-1
 2834              	.LVL349:
 2835 0140 38BD     	 pop {r3,r4,r5,pc}
 2836              	.LVL350:
 2837              	.L244:
 415:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 2838              	 .loc 1 415 0
 2839 0142 0020     	 movs r0,#0
 2840              	.LVL351:
 487:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2841              	 .loc 1 487 0
 2842 0144 38BD     	 pop {r3,r4,r5,pc}
 2843              	.L250:
 2844 0146 00BF     	 .align 2
 2845              	.L249:
 2846 0148 00E100E0 	 .word -536813312
 2847 014c 00000000 	 .word .LANCHOR0
 2848 0150 80000020 	 .word 536871040
 2849 0154 00000000 	 .word pipe
 2850 0158 2A010001 	 .word 16777514
 2851 015c 180000A3 	 .word -1560281064
 2852              	 .cfi_endproc
 2853              	.LFE186:
 2855              	 .section .text.XMC_USBH_Uninitialize,"ax",%progbits
 2856              	 .align 2
 2857              	 .thumb
 2858              	 .thumb_func
 2860              	XMC_USBH_Uninitialize:
 2861              	.LFB185:
 371:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 2862              	 .loc 1 371 0
 2863              	 .cfi_startproc
 2864              	 
 2865              	 
 2866 0000 10B5     	 push {r4,lr}
 2867              	.LCFI20:
 2868              	 .cfi_def_cfa_offset 8
 2869              	 .cfi_offset 4,-8
 2870              	 .cfi_offset 14,-4
 372:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 2871              	 .loc 1 372 0
 2872 0002 0024     	 movs r4,#0
 2873 0004 034B     	 ldr r3,.L253
 2874 0006 1C74     	 strb r4,[r3,#16]
 373:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 2875              	 .loc 1 373 0
 2876 0008 2046     	 mov r0,r4
 2877 000a FFF7FEFF 	 bl XMC_USBH_PowerControl
 2878              	.LVL352:
 375:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2879              	 .loc 1 375 0
 2880 000e 2046     	 mov r0,r4
 2881 0010 10BD     	 pop {r4,pc}
 2882              	.L254:
 2883 0012 00BF     	 .align 2
 2884              	.L253:
 2885 0014 00000000 	 .word .LANCHOR0
 2886              	 .cfi_endproc
 2887              	.LFE185:
 2889              	 .global Driver_USBH0
 2890              	 .comm pipe,448,4
 2891              	 .comm is_nack,14,4
 2892              	 .global VBUS_pin
 2893              	 .global VBUS_port
 2894              	 .section .data.XMC_USBH0_device,"aw",%progbits
 2895              	 .align 2
 2896              	 .set .LANCHOR0,.+0
 2899              	XMC_USBH0_device:
 2900 0000 00000450 	 .word 1342439424
 2901 0004 00050450 	 .word 1342440704
 2902 0008 00000000 	 .word 0
 2903 000c 00000000 	 .word 0
 2904 0010 00       	 .byte 0
 2905 0011 00       	 .byte 0
 2906 0012 00       	 .byte 0
 2907 0013 00       	 .space 1
 2908              	 .section .bss.XMC_USBH0_dfifo_ptr,"aw",%nobits
 2909              	 .align 2
 2910              	 .set .LANCHOR1,.+0
 2913              	XMC_USBH0_dfifo_ptr:
 2914 0000 00000000 	 .space 56
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2915              	 .section .data.VBUS_pin,"aw",%progbits
 2916              	 .align 2
 2917              	 .set .LANCHOR4,.+0
 2920              	VBUS_pin:
 2921 0000 02000000 	 .word 2
 2922              	 .section .data.VBUS_port,"aw",%progbits
 2923              	 .align 2
 2924              	 .set .LANCHOR3,.+0
 2927              	VBUS_port:
 2928 0000 00830248 	 .word 1208124160
 2929              	 .section .rodata.xmc_usbh_driver_version,"a",%progbits
 2930              	 .align 2
 2931              	 .set .LANCHOR2,.+0
 2934              	xmc_usbh_driver_version:
 2935 0000 0102     	 .short 513
 2936 0002 1201     	 .short 274
 2937              	 .section .rodata.Driver_USBH0,"a",%progbits
 2938              	 .align 2
 2941              	Driver_USBH0:
 2942 0000 00000000 	 .word XMC_USBH_GetVersion
 2943 0004 00000000 	 .word XMC_USBH_GetCapabilities
 2944 0008 00000000 	 .word XMC_USBH_Initialize
 2945 000c 00000000 	 .word XMC_USBH_Uninitialize
 2946 0010 00000000 	 .word XMC_USBH_PowerControl
 2947 0014 00000000 	 .word XMC_USBH_PortVbusOnOff
 2948 0018 00000000 	 .word XMC_USBH_PortReset
 2949 001c 00000000 	 .word XMC_USBH_PortSuspend
 2950 0020 00000000 	 .word XMC_USBH_PortResume
 2951 0024 00000000 	 .word XMC_USBH_PortGetState
 2952 0028 00000000 	 .word XMC_USBH_PipeCreate
 2953 002c 00000000 	 .word XMC_USBH_PipeModify
 2954 0030 00000000 	 .word XMC_USBH_PipeDelete
 2955 0034 00000000 	 .word XMC_USBH_PipeReset
 2956 0038 00000000 	 .word XMC_USBH_PipeTransfer
 2957 003c 00000000 	 .word XMC_USBH_PipeTransferGetResult
 2958 0040 00000000 	 .word XMC_USBH_PipeTransferAbort
 2959 0044 00000000 	 .word XMC_USBH_GetFrameNumber
 2960              	 .text
 2961              	.Letext0:
 2962              	 .file 4 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2963              	 .file 5 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2964              	 .file 6 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2965              	 .file 7 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc4_scu.h"
 2966              	 .file 8 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc4_gpio.h"
 2967              	 .file 9 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc_usbh.h"
 2968              	 .file 10 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 2969              	 .file 11 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/Libraries/XMCLib/inc/xmc_gpio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbh.c
    {standard input}:19     .text.XMC_lStartTransfer:00000000 $t
    {standard input}:23     .text.XMC_lStartTransfer:00000000 XMC_lStartTransfer
    {standard input}:128    .text.XMC_lStartTransfer:00000086 $d
    {standard input}:132    .text.XMC_lStartTransfer:0000008a $t
    {standard input}:333    .text.XMC_lStartTransfer:00000170 $d
    {standard input}:340    .text.XMC_USBH_GetVersion:00000000 $t
    {standard input}:344    .text.XMC_USBH_GetVersion:00000000 XMC_USBH_GetVersion
    {standard input}:370    .text.XMC_USBH_GetVersion:00000018 $d
    {standard input}:375    .text.XMC_USBH_GetCapabilities:00000000 $t
    {standard input}:379    .text.XMC_USBH_GetCapabilities:00000000 XMC_USBH_GetCapabilities
    {standard input}:398    .text.XMC_USBH_PortSuspend:00000000 $t
    {standard input}:402    .text.XMC_USBH_PortSuspend:00000000 XMC_USBH_PortSuspend
    {standard input}:451    .text.XMC_USBH_PortSuspend:00000038 $d
    {standard input}:456    .text.XMC_USBH_PortGetState:00000000 $t
    {standard input}:460    .text.XMC_USBH_PortGetState:00000000 XMC_USBH_PortGetState
    {standard input}:512    .text.XMC_USBH_PortGetState:0000003c $d
    {standard input}:517    .text.XMC_USBH_PipeModify:00000000 $t
    {standard input}:521    .text.XMC_USBH_PipeModify:00000000 XMC_USBH_PipeModify
    {standard input}:613    .text.XMC_USBH_PipeModify:0000005c $d
                            *COM*:000001c0 pipe
    {standard input}:620    .text.XMC_USBH_PipeReset:00000000 $t
    {standard input}:624    .text.XMC_USBH_PipeReset:00000000 XMC_USBH_PipeReset
    {standard input}:683    .text.XMC_USBH_PipeReset:0000003c $d
    {standard input}:689    .text.XMC_USBH_PipeTransfer:00000000 $t
    {standard input}:693    .text.XMC_USBH_PipeTransfer:00000000 XMC_USBH_PipeTransfer
    {standard input}:837    .text.XMC_USBH_PipeTransfer:000000b0 $d
    {standard input}:843    .text.XMC_USBH_PipeTransferGetResult:00000000 $t
    {standard input}:847    .text.XMC_USBH_PipeTransferGetResult:00000000 XMC_USBH_PipeTransferGetResult
    {standard input}:877    .text.XMC_USBH_PipeTransferGetResult:00000018 $d
    {standard input}:883    .text.XMC_USBH_GetFrameNumber:00000000 $t
    {standard input}:887    .text.XMC_USBH_GetFrameNumber:00000000 XMC_USBH_GetFrameNumber
    {standard input}:915    .text.XMC_USBH_GetFrameNumber:00000018 $d
    {standard input}:920    .text.XMC_USBH_PortVbusOnOff:00000000 $t
    {standard input}:924    .text.XMC_USBH_PortVbusOnOff:00000000 XMC_USBH_PortVbusOnOff
    {standard input}:1001   .text.XMC_USBH_PortVbusOnOff:0000005c $d
    {standard input}:1008   .text.XMC_USBH_Initialize:00000000 $t
    {standard input}:1012   .text.XMC_USBH_Initialize:00000000 XMC_USBH_Initialize
    {standard input}:1068   .text.XMC_USBH_Initialize:0000003c $d
    {standard input}:1077   .text.XMC_USBH_PipeDelete:00000000 $t
    {standard input}:1081   .text.XMC_USBH_PipeDelete:00000000 XMC_USBH_PipeDelete
    {standard input}:1158   .text.XMC_USBH_PipeDelete:0000004c $d
    {standard input}:1164   .text.XMC_USBH_PipeCreate:00000000 $t
    {standard input}:1168   .text.XMC_USBH_PipeCreate:00000000 XMC_USBH_PipeCreate
    {standard input}:1340   .text.XMC_USBH_PipeCreate:000000f8 $d
    {standard input}:1346   .text.XMC_USBH_HandleIrq:00000000 $t
    {standard input}:1351   .text.XMC_USBH_HandleIrq:00000000 XMC_USBH_HandleIrq
    {standard input}:1800   .text.XMC_USBH_HandleIrq:000002a0 $d
                            *COM*:0000000e is_nack
    {standard input}:1810   .text.XMC_USBH_HandleIrq:000002b4 $t
    {standard input}:2147   .text.XMC_USBH_HandleIrq:000004c0 $d
    {standard input}:2154   .text.XMC_USBH_GetInterruptStatus:00000000 $t
    {standard input}:2159   .text.XMC_USBH_GetInterruptStatus:00000000 XMC_USBH_GetInterruptStatus
    {standard input}:2175   .text.XMC_USBH_GetInterruptStatus:00000008 $d
    {standard input}:2180   .text.XMC_USBH_Select_VBUS:00000000 $t
    {standard input}:2185   .text.XMC_USBH_Select_VBUS:00000000 XMC_USBH_Select_VBUS
    {standard input}:2213   .text.XMC_USBH_Select_VBUS:00000014 $d
    {standard input}:2219   .text.XMC_USBH_TurnOffResumeBit:00000000 $t
    {standard input}:2224   .text.XMC_USBH_TurnOffResumeBit:00000000 XMC_USBH_TurnOffResumeBit
    {standard input}:2245   .text.XMC_USBH_TurnOffResumeBit:00000014 $d
    {standard input}:2250   .text.XMC_USBH_osDelay:00000000 $t
    {standard input}:2255   .text.XMC_USBH_osDelay:00000000 XMC_USBH_osDelay
    {standard input}:2270   .text.XMC_USBH_PipeTransferAbort:00000000 $t
    {standard input}:2274   .text.XMC_USBH_PipeTransferAbort:00000000 XMC_USBH_PipeTransferAbort
    {standard input}:2411   .text.XMC_USBH_PipeTransferAbort:000000a8 $d
    {standard input}:2417   .text.XMC_USBH_PortResume:00000000 $t
    {standard input}:2421   .text.XMC_USBH_PortResume:00000000 XMC_USBH_PortResume
    {standard input}:2492   .text.XMC_USBH_PortResume:0000004c $d
    {standard input}:2497   .text.XMC_USBH_PortReset:00000000 $t
    {standard input}:2501   .text.XMC_USBH_PortReset:00000000 XMC_USBH_PortReset
    {standard input}:2589   .text.XMC_USBH_PortReset:00000068 $d
    {standard input}:2594   .text.XMC_USBH_PowerControl:00000000 $t
    {standard input}:2598   .text.XMC_USBH_PowerControl:00000000 XMC_USBH_PowerControl
    {standard input}:2846   .text.XMC_USBH_PowerControl:00000148 $d
    {standard input}:2856   .text.XMC_USBH_Uninitialize:00000000 $t
    {standard input}:2860   .text.XMC_USBH_Uninitialize:00000000 XMC_USBH_Uninitialize
    {standard input}:2885   .text.XMC_USBH_Uninitialize:00000014 $d
    {standard input}:2941   .rodata.Driver_USBH0:00000000 Driver_USBH0
    {standard input}:2920   .data.VBUS_pin:00000000 VBUS_pin
    {standard input}:2927   .data.VBUS_port:00000000 VBUS_port
    {standard input}:2895   .data.XMC_USBH0_device:00000000 $d
    {standard input}:2899   .data.XMC_USBH0_device:00000000 XMC_USBH0_device
    {standard input}:2909   .bss.XMC_USBH0_dfifo_ptr:00000000 $d
    {standard input}:2913   .bss.XMC_USBH0_dfifo_ptr:00000000 XMC_USBH0_dfifo_ptr
    {standard input}:2916   .data.VBUS_pin:00000000 $d
    {standard input}:2923   .data.VBUS_port:00000000 $d
    {standard input}:2930   .rodata.xmc_usbh_driver_version:00000000 $d
    {standard input}:2934   .rodata.xmc_usbh_driver_version:00000000 xmc_usbh_driver_version
    {standard input}:2938   .rodata.Driver_USBH0:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3466fc6a3db32493c997d085de4c7a28
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stddef.h.39.c744ceb84abf2f8351653f0e2622da1c
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4002528de975c0fcce6c551c15d87b8c
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.xmc_device.h.61.ba2d082e12f51240746cffdd60d42b81
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.48aa5dfcc4adf36b323cf9dbe32c793a
                           .group:00000000 wm4.core_cm4.h.174.824e0532337e90525b645435b961cc25
                           .group:00000000 wm4.mpu_armv7.h.32.7da498ea6f18d3b74a42202d7c1d394e
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1460.8860499b404961ffcfbb8d1fefcb2146
                           .group:00000000 wm4.xmc_common.h.92.bbcf261068c7c74d7033b80d0dbf155c
                           .group:00000000 wm4.xmc4_scu.h.83.0449f5880ac071460ec1a8072311ea51
                           .group:00000000 wm4.xmc_gpio.h.51.99a4c0bd520ffa931ac6d8600dce89c4
                           .group:00000000 wm4.xmc4_gpio_map.h.74.66e9110cf801b78826ef5354da51c32f
                           .group:00000000 wm4.xmc4_gpio.h.79.ce6c49508b5a7769c66e7e3c21dcdfe4
                           .group:00000000 wm4.xmc_usbh.h.102.1614571f7a8c0da259c62ca2b88c8108

UNDEFINED SYMBOLS
XMC_GPIO_SetMode
memset
XMC_SCU_POWER_DisableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
