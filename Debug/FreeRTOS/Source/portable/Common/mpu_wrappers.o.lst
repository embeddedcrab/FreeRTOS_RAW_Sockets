   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .eabi_attribute 28,1
   5              	 .fpu fpv4-sp-d16
   6              	 .eabi_attribute 23,1
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "mpu_wrappers.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.xPortRaisePrivilege,"ax",%progbits
  19              	 .align 2
  20              	 .global xPortRaisePrivilege
  21              	 .thumb
  22              	 .thumb_func
  24              	xPortRaisePrivilege:
  25              	.LFB5:
  26              	 .file 1 "../FreeRTOS/Source/portable/Common/mpu_wrappers.c"
   1:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*
   2:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * FreeRTOS Kernel V10.4.1
   3:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  *
   5:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * the Software without restriction, including without limitation the rights to
   8:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * subject to the following conditions:
  11:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  *
  12:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * copies or substantial portions of the Software.
  14:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  *
  15:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  *
  22:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * https://www.FreeRTOS.org
  23:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * https://github.com/FreeRTOS
  24:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  *
  25:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  */
  26:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  27:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*
  28:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * Implementation of the wrapper functions used to raise the processor privilege
  29:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * before calling a standard FreeRTOS API function.
  30:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  */
  31:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  32:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * task.h is included from an application file. */
  35:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  37:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /* Scheduler includes. */
  38:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "FreeRTOS.h"
  39:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "task.h"
  40:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "queue.h"
  41:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "timers.h"
  42:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "event_groups.h"
  43:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "stream_buffer.h"
  44:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #include "mpu_prototypes.h"
  45:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  46:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  47:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  48:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /**
  49:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * @brief Calls the port specific code to raise the privilege.
  50:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  *
  51:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * @return pdFALSE if privilege was raised, pdTRUE otherwise.
  52:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  */
  53:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t xPortRaisePrivilege( void ) FREERTOS_SYSTEM_CALL;
  54:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  55:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /**
  56:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * @brief If xRunningPrivileged is not pdTRUE, calls the port specific
  57:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  * code to reset the privilege, otherwise does nothing.
  58:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****  */
  59:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void vPortResetPrivilege( BaseType_t xRunningPrivileged );
  60:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  61:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  62:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t xPortRaisePrivilege( void ) /* FREERTOS_SYSTEM_CALL */
  63:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
  27              	 .loc 1 63 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 10B5     	 push {r4,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 4,-8
  35              	 .cfi_offset 14,-4
  64:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged;
  65:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  66:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     /* Check whether the processor is already privileged. */
  67:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xRunningPrivileged = portIS_PRIVILEGED();
  36              	 .loc 1 67 0
  37 0002 FFF7FEFF 	 bl portIS_PRIVILEGED
  38              	.LVL0:
  68:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  69:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     /* If the processor is not already privileged, raise privilege. */
  70:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     if( xRunningPrivileged == pdFALSE )
  39              	 .loc 1 70 0
  40 0006 0446     	 mov r4,r0
  41 0008 08B9     	 cbnz r0,.L2
  42              	.LBB2:
  71:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
  72:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         portRAISE_PRIVILEGE();
  43              	 .loc 1 72 0
  44 000a FFF7FEFF 	 bl portRAISE_PRIVILEGE
  45              	.LVL1:
  46              	.L2:
  47              	.LBE2:
  73:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
  74:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  75:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xRunningPrivileged;
  76:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
  48              	 .loc 1 76 0
  49 000e 2046     	 mov r0,r4
  50 0010 10BD     	 pop {r4,pc}
  51              	 .cfi_endproc
  52              	.LFE5:
  54 0012 00BF     	 .section .text.vPortResetPrivilege,"ax",%progbits
  55              	 .align 2
  56              	 .global vPortResetPrivilege
  57              	 .thumb
  58              	 .thumb_func
  60              	vPortResetPrivilege:
  61              	.LFB6:
  77:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  78:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  79:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void vPortResetPrivilege( BaseType_t xRunningPrivileged )
  80:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
  62              	 .loc 1 80 0
  63              	 .cfi_startproc
  64              	 
  65              	 
  66              	.LVL2:
  81:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     if( xRunningPrivileged == pdFALSE )
  67              	 .loc 1 81 0
  68 0000 18B9     	 cbnz r0,.L7
  80:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     if( xRunningPrivileged == pdFALSE )
  69              	 .loc 1 80 0
  70 0002 08B5     	 push {r3,lr}
  71              	.LCFI1:
  72              	 .cfi_def_cfa_offset 8
  73              	 .cfi_offset 3,-8
  74              	 .cfi_offset 14,-4
  75              	.LBB3:
  82:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
  83:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         portRESET_PRIVILEGE();
  76              	 .loc 1 83 0
  77 0004 FFF7FEFF 	 bl portRESET_PRIVILEGE
  78              	.LVL3:
  79 0008 08BD     	 pop {r3,pc}
  80              	.LVL4:
  81              	.L7:
  82              	.LCFI2:
  83              	 .cfi_def_cfa_offset 0
  84              	 .cfi_restore 3
  85              	 .cfi_restore 14
  86 000a 7047     	 bx lr
  87              	.LBE3:
  88              	 .cfi_endproc
  89              	.LFE6:
  91              	 .section .text.MPU_xTaskCreateRestricted,"ax",%progbits
  92              	 .align 2
  93              	 .global MPU_xTaskCreateRestricted
  94              	 .thumb
  95              	 .thumb_func
  97              	MPU_xTaskCreateRestricted:
  98              	.LFB7:
  84:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
  85:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
  86:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  87:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  88:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
  89:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
  90:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           TaskHandle_t * pxCreatedTask ) /* FREERTOS_SYSTEM_CALL */
  91:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
  99              	 .loc 1 91 0
 100              	 .cfi_startproc
 101              	 
 102              	 
 103              	.LVL5:
 104 0000 70B5     	 push {r4,r5,r6,lr}
 105              	.LCFI3:
 106              	 .cfi_def_cfa_offset 16
 107              	 .cfi_offset 4,-16
 108              	 .cfi_offset 5,-12
 109              	 .cfi_offset 6,-8
 110              	 .cfi_offset 14,-4
 111 0002 0646     	 mov r6,r0
 112 0004 0C46     	 mov r4,r1
  92:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
  93:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 113              	 .loc 1 93 0
 114 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 115              	.LVL6:
 116 000a 0546     	 mov r5,r0
 117              	.LVL7:
  94:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
  95:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskCreateRestricted( pxTaskDefinition, pxCreatedTask );
 118              	 .loc 1 95 0
 119 000c 3046     	 mov r0,r6
 120              	.LVL8:
 121 000e 2146     	 mov r1,r4
 122 0010 FFF7FEFF 	 bl xTaskCreateRestricted
 123              	.LVL9:
 124 0014 0446     	 mov r4,r0
 125              	.LVL10:
  96:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 126              	 .loc 1 96 0
 127 0016 2846     	 mov r0,r5
 128              	.LVL11:
 129 0018 FFF7FEFF 	 bl vPortResetPrivilege
 130              	.LVL12:
  97:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
  98:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 131              	 .loc 1 98 0
 132 001c 2046     	 mov r0,r4
 133 001e 70BD     	 pop {r4,r5,r6,pc}
 134              	 .cfi_endproc
 135              	.LFE7:
 137              	 .section .text.MPU_xTaskCreate,"ax",%progbits
 138              	 .align 2
 139              	 .global MPU_xTaskCreate
 140              	 .thumb
 141              	 .thumb_func
 143              	MPU_xTaskCreate:
 144              	.LFB8:
  99:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* conifgSUPPORT_DYNAMIC_ALLOCATION */
 100:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 101:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 102:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 103:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 104:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                 TaskHandle_t * pxCreatedTask ) /* FREERTOS_SYSTEM_C
 105:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 106:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 107:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 108:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 109:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskCreateRestrictedStatic( pxTaskDefinition, pxCreatedTask );
 110:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 111:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 112:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 113:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* conifgSUPPORT_DYNAMIC_ALLOCATION */
 114:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 115:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 116:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 117:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskCreate( TaskFunction_t pvTaskCode,
 118:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                 const char * const pcName,
 119:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                 uint16_t usStackDepth,
 120:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                 void * pvParameters,
 121:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                 UBaseType_t uxPriority,
 122:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                 TaskHandle_t * pxCreatedTask ) /* FREERTOS_SYSTEM_CALL */
 123:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 145              	 .loc 1 123 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	.LVL13:
 150 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 151              	.LCFI4:
 152              	 .cfi_def_cfa_offset 24
 153              	 .cfi_offset 4,-24
 154              	 .cfi_offset 5,-20
 155              	 .cfi_offset 6,-16
 156              	 .cfi_offset 7,-12
 157              	 .cfi_offset 8,-8
 158              	 .cfi_offset 14,-4
 159 0004 82B0     	 sub sp,sp,#8
 160              	.LCFI5:
 161              	 .cfi_def_cfa_offset 32
 162 0006 8046     	 mov r8,r0
 163 0008 0F46     	 mov r7,r1
 164 000a 1646     	 mov r6,r2
 165 000c 1C46     	 mov r4,r3
 124:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 125:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 166              	 .loc 1 125 0
 167 000e FFF7FEFF 	 bl xPortRaisePrivilege
 168              	.LVL14:
 169 0012 0546     	 mov r5,r0
 170              	.LVL15:
 126:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 127:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskCreate( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreate
 171              	 .loc 1 127 0
 172 0014 089B     	 ldr r3,[sp,#32]
 173 0016 0093     	 str r3,[sp]
 174 0018 099B     	 ldr r3,[sp,#36]
 175 001a 0193     	 str r3,[sp,#4]
 176 001c 4046     	 mov r0,r8
 177              	.LVL16:
 178 001e 3946     	 mov r1,r7
 179 0020 3246     	 mov r2,r6
 180 0022 2346     	 mov r3,r4
 181 0024 FFF7FEFF 	 bl xTaskCreate
 182              	.LVL17:
 183 0028 0446     	 mov r4,r0
 184              	.LVL18:
 128:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 185              	 .loc 1 128 0
 186 002a 2846     	 mov r0,r5
 187              	.LVL19:
 188 002c FFF7FEFF 	 bl vPortResetPrivilege
 189              	.LVL20:
 129:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 130:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 190              	 .loc 1 130 0
 191 0030 2046     	 mov r0,r4
 192 0032 02B0     	 add sp,sp,#8
 193              	.LCFI6:
 194              	 .cfi_def_cfa_offset 24
 195              	 
 196 0034 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 197              	 .cfi_endproc
 198              	.LFE8:
 200              	 .section .text.MPU_vTaskAllocateMPURegions,"ax",%progbits
 201              	 .align 2
 202              	 .global MPU_vTaskAllocateMPURegions
 203              	 .thumb
 204              	 .thumb_func
 206              	MPU_vTaskAllocateMPURegions:
 207              	.LFB9:
 131:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 132:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 133:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 134:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 135:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHandle_t MPU_xTaskCreateStatic( TaskFunction_t pxTaskCode,
 136:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         const char * const pcName,
 137:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         const uint32_t ulStackDepth,
 138:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         void * const pvParameters,
 139:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         UBaseType_t uxPriority,
 140:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         StackType_t * const puxStackBuffer,
 141:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         StaticTask_t * const pxTaskBuffer ) /* FREERTOS_SYSTEM_CALL
 142:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 143:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TaskHandle_t xReturn;
 144:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 145:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 146:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskCreateStatic( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, pu
 147:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 148:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 149:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 150:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 151:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 152:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 153:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void MPU_vTaskAllocateMPURegions( TaskHandle_t xTask,
 154:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                   const MemoryRegion_t * const xRegions ) /* FREERTOS_SYSTEM_CALL *
 155:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 208              	 .loc 1 155 0
 209              	 .cfi_startproc
 210              	 
 211              	 
 212              	.LVL21:
 213 0000 70B5     	 push {r4,r5,r6,lr}
 214              	.LCFI7:
 215              	 .cfi_def_cfa_offset 16
 216              	 .cfi_offset 4,-16
 217              	 .cfi_offset 5,-12
 218              	 .cfi_offset 6,-8
 219              	 .cfi_offset 14,-4
 220 0002 0646     	 mov r6,r0
 221 0004 0D46     	 mov r5,r1
 156:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 222              	 .loc 1 156 0
 223 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 224              	.LVL22:
 225 000a 0446     	 mov r4,r0
 226              	.LVL23:
 157:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 158:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vTaskAllocateMPURegions( xTask, xRegions );
 227              	 .loc 1 158 0
 228 000c 3046     	 mov r0,r6
 229              	.LVL24:
 230 000e 2946     	 mov r1,r5
 231 0010 FFF7FEFF 	 bl vTaskAllocateMPURegions
 232              	.LVL25:
 159:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 233              	 .loc 1 159 0
 234 0014 2046     	 mov r0,r4
 235 0016 FFF7FEFF 	 bl vPortResetPrivilege
 236              	.LVL26:
 237 001a 70BD     	 pop {r4,r5,r6,pc}
 238              	 .cfi_endproc
 239              	.LFE9:
 241              	 .section .text.MPU_vTaskDelete,"ax",%progbits
 242              	 .align 2
 243              	 .global MPU_vTaskDelete
 244              	 .thumb
 245              	 .thumb_func
 247              	MPU_vTaskDelete:
 248              	.LFB10:
 160:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 161:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 162:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 163:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelete == 1 )
 164:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskDelete( TaskHandle_t pxTaskToDelete ) /* FREERTOS_SYSTEM_CALL */
 165:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 249              	 .loc 1 165 0
 250              	 .cfi_startproc
 251              	 
 252              	 
 253              	.LVL27:
 254 0000 38B5     	 push {r3,r4,r5,lr}
 255              	.LCFI8:
 256              	 .cfi_def_cfa_offset 16
 257              	 .cfi_offset 3,-16
 258              	 .cfi_offset 4,-12
 259              	 .cfi_offset 5,-8
 260              	 .cfi_offset 14,-4
 261 0002 0546     	 mov r5,r0
 166:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 262              	 .loc 1 166 0
 263 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 264              	.LVL28:
 265 0008 0446     	 mov r4,r0
 266              	.LVL29:
 167:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 168:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskDelete( pxTaskToDelete );
 267              	 .loc 1 168 0
 268 000a 2846     	 mov r0,r5
 269              	.LVL30:
 270 000c FFF7FEFF 	 bl vTaskDelete
 271              	.LVL31:
 169:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 272              	 .loc 1 169 0
 273 0010 2046     	 mov r0,r4
 274 0012 FFF7FEFF 	 bl vPortResetPrivilege
 275              	.LVL32:
 276 0016 38BD     	 pop {r3,r4,r5,pc}
 277              	 .cfi_endproc
 278              	.LFE10:
 280              	 .section .text.MPU_vTaskDelayUntil,"ax",%progbits
 281              	 .align 2
 282              	 .global MPU_vTaskDelayUntil
 283              	 .thumb
 284              	 .thumb_func
 286              	MPU_vTaskDelayUntil:
 287              	.LFB11:
 170:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 171:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 172:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 173:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 174:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 175:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
 176:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                               TickType_t xTimeIncrement ) /* FREERTOS_SYSTEM_CALL */
 177:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 288              	 .loc 1 177 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292              	.LVL33:
 293 0000 70B5     	 push {r4,r5,r6,lr}
 294              	.LCFI9:
 295              	 .cfi_def_cfa_offset 16
 296              	 .cfi_offset 4,-16
 297              	 .cfi_offset 5,-12
 298              	 .cfi_offset 6,-8
 299              	 .cfi_offset 14,-4
 300 0002 0646     	 mov r6,r0
 301 0004 0D46     	 mov r5,r1
 178:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 302              	 .loc 1 178 0
 303 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 304              	.LVL34:
 305 000a 0446     	 mov r4,r0
 306              	.LVL35:
 179:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 180:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskDelayUntil( pxPreviousWakeTime, xTimeIncrement );
 307              	 .loc 1 180 0
 308 000c 3046     	 mov r0,r6
 309              	.LVL36:
 310 000e 2946     	 mov r1,r5
 311 0010 FFF7FEFF 	 bl vTaskDelayUntil
 312              	.LVL37:
 181:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 313              	 .loc 1 181 0
 314 0014 2046     	 mov r0,r4
 315 0016 FFF7FEFF 	 bl vPortResetPrivilege
 316              	.LVL38:
 317 001a 70BD     	 pop {r4,r5,r6,pc}
 318              	 .cfi_endproc
 319              	.LFE11:
 321              	 .section .text.MPU_vTaskDelay,"ax",%progbits
 322              	 .align 2
 323              	 .global MPU_vTaskDelay
 324              	 .thumb
 325              	 .thumb_func
 327              	MPU_vTaskDelay:
 328              	.LFB12:
 182:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 183:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 184:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 185:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 186:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
 187:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskAbortDelay( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL */
 188:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 189:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 190:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 191:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 192:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskAbortDelay( xTask );
 193:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 194:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 195:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 196:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 197:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 198:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 199:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelay == 1 )
 200:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskDelay( TickType_t xTicksToDelay ) /* FREERTOS_SYSTEM_CALL */
 201:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 329              	 .loc 1 201 0
 330              	 .cfi_startproc
 331              	 
 332              	 
 333              	.LVL39:
 334 0000 38B5     	 push {r3,r4,r5,lr}
 335              	.LCFI10:
 336              	 .cfi_def_cfa_offset 16
 337              	 .cfi_offset 3,-16
 338              	 .cfi_offset 4,-12
 339              	 .cfi_offset 5,-8
 340              	 .cfi_offset 14,-4
 341 0002 0546     	 mov r5,r0
 202:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 342              	 .loc 1 202 0
 343 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 344              	.LVL40:
 345 0008 0446     	 mov r4,r0
 346              	.LVL41:
 203:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 204:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskDelay( xTicksToDelay );
 347              	 .loc 1 204 0
 348 000a 2846     	 mov r0,r5
 349              	.LVL42:
 350 000c FFF7FEFF 	 bl vTaskDelay
 351              	.LVL43:
 205:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 352              	 .loc 1 205 0
 353 0010 2046     	 mov r0,r4
 354 0012 FFF7FEFF 	 bl vPortResetPrivilege
 355              	.LVL44:
 356 0016 38BD     	 pop {r3,r4,r5,pc}
 357              	 .cfi_endproc
 358              	.LFE12:
 360              	 .section .text.MPU_uxTaskPriorityGet,"ax",%progbits
 361              	 .align 2
 362              	 .global MPU_uxTaskPriorityGet
 363              	 .thumb
 364              	 .thumb_func
 366              	MPU_uxTaskPriorityGet:
 367              	.LFB13:
 206:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 207:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 208:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 209:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 210:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 211:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t MPU_uxTaskPriorityGet( const TaskHandle_t pxTask ) /* FREERTOS_SYSTEM_CALL */
 212:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 368              	 .loc 1 212 0
 369              	 .cfi_startproc
 370              	 
 371              	 
 372              	.LVL45:
 373 0000 38B5     	 push {r3,r4,r5,lr}
 374              	.LCFI11:
 375              	 .cfi_def_cfa_offset 16
 376              	 .cfi_offset 3,-16
 377              	 .cfi_offset 4,-12
 378              	 .cfi_offset 5,-8
 379              	 .cfi_offset 14,-4
 380 0002 0446     	 mov r4,r0
 213:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         UBaseType_t uxReturn;
 214:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 381              	 .loc 1 214 0
 382 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 383              	.LVL46:
 384 0008 0546     	 mov r5,r0
 385              	.LVL47:
 215:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 216:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uxReturn = uxTaskPriorityGet( pxTask );
 386              	 .loc 1 216 0
 387 000a 2046     	 mov r0,r4
 388              	.LVL48:
 389 000c FFF7FEFF 	 bl uxTaskPriorityGet
 390              	.LVL49:
 391 0010 0446     	 mov r4,r0
 392              	.LVL50:
 217:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 393              	 .loc 1 217 0
 394 0012 2846     	 mov r0,r5
 395              	.LVL51:
 396 0014 FFF7FEFF 	 bl vPortResetPrivilege
 397              	.LVL52:
 218:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return uxReturn;
 219:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 398              	 .loc 1 219 0
 399 0018 2046     	 mov r0,r4
 400 001a 38BD     	 pop {r3,r4,r5,pc}
 401              	 .cfi_endproc
 402              	.LFE13:
 404              	 .section .text.MPU_vTaskPrioritySet,"ax",%progbits
 405              	 .align 2
 406              	 .global MPU_vTaskPrioritySet
 407              	 .thumb
 408              	 .thumb_func
 410              	MPU_vTaskPrioritySet:
 411              	.LFB14:
 220:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 221:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 222:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 223:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 224:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskPrioritySet( TaskHandle_t pxTask,
 225:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                UBaseType_t uxNewPriority ) /* FREERTOS_SYSTEM_CALL */
 226:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 412              	 .loc 1 226 0
 413              	 .cfi_startproc
 414              	 
 415              	 
 416              	.LVL53:
 417 0000 70B5     	 push {r4,r5,r6,lr}
 418              	.LCFI12:
 419              	 .cfi_def_cfa_offset 16
 420              	 .cfi_offset 4,-16
 421              	 .cfi_offset 5,-12
 422              	 .cfi_offset 6,-8
 423              	 .cfi_offset 14,-4
 424 0002 0646     	 mov r6,r0
 425 0004 0D46     	 mov r5,r1
 227:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 426              	 .loc 1 227 0
 427 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 428              	.LVL54:
 429 000a 0446     	 mov r4,r0
 430              	.LVL55:
 228:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 229:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskPrioritySet( pxTask, uxNewPriority );
 431              	 .loc 1 229 0
 432 000c 3046     	 mov r0,r6
 433              	.LVL56:
 434 000e 2946     	 mov r1,r5
 435 0010 FFF7FEFF 	 bl vTaskPrioritySet
 436              	.LVL57:
 230:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 437              	 .loc 1 230 0
 438 0014 2046     	 mov r0,r4
 439 0016 FFF7FEFF 	 bl vPortResetPrivilege
 440              	.LVL58:
 441 001a 70BD     	 pop {r4,r5,r6,pc}
 442              	 .cfi_endproc
 443              	.LFE14:
 445              	 .section .text.MPU_vTaskGetInfo,"ax",%progbits
 446              	 .align 2
 447              	 .global MPU_vTaskGetInfo
 448              	 .thumb
 449              	 .thumb_func
 451              	MPU_vTaskGetInfo:
 452              	.LFB15:
 231:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 232:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 233:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 234:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 235:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_eTaskGetState == 1 )
 236:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     eTaskState MPU_eTaskGetState( TaskHandle_t pxTask ) /* FREERTOS_SYSTEM_CALL */
 237:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 238:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 239:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         eTaskState eReturn;
 240:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 241:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         eReturn = eTaskGetState( pxTask );
 242:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 243:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return eReturn;
 244:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 245:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 246:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 247:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 248:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 249:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskGetInfo( TaskHandle_t xTask,
 250:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                            TaskStatus_t * pxTaskStatus,
 251:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                            BaseType_t xGetFreeStackSpace,
 252:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                            eTaskState eState ) /* FREERTOS_SYSTEM_CALL */
 253:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 453              	 .loc 1 253 0
 454              	 .cfi_startproc
 455              	 
 456              	 
 457              	.LVL59:
 458 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 459              	.LCFI13:
 460              	 .cfi_def_cfa_offset 24
 461              	 .cfi_offset 4,-24
 462              	 .cfi_offset 5,-20
 463              	 .cfi_offset 6,-16
 464              	 .cfi_offset 7,-12
 465              	 .cfi_offset 8,-8
 466              	 .cfi_offset 14,-4
 467 0004 8046     	 mov r8,r0
 468 0006 0F46     	 mov r7,r1
 469 0008 1646     	 mov r6,r2
 470 000a 1D46     	 mov r5,r3
 254:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 471              	 .loc 1 254 0
 472 000c FFF7FEFF 	 bl xPortRaisePrivilege
 473              	.LVL60:
 474 0010 0446     	 mov r4,r0
 475              	.LVL61:
 255:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 256:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskGetInfo( xTask, pxTaskStatus, xGetFreeStackSpace, eState );
 476              	 .loc 1 256 0
 477 0012 4046     	 mov r0,r8
 478              	.LVL62:
 479 0014 3946     	 mov r1,r7
 480 0016 3246     	 mov r2,r6
 481 0018 2B46     	 mov r3,r5
 482 001a FFF7FEFF 	 bl vTaskGetInfo
 483              	.LVL63:
 257:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 484              	 .loc 1 257 0
 485 001e 2046     	 mov r0,r4
 486 0020 FFF7FEFF 	 bl vPortResetPrivilege
 487              	.LVL64:
 488 0024 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 489              	 .cfi_endproc
 490              	.LFE15:
 492              	 .section .text.MPU_vTaskSuspend,"ax",%progbits
 493              	 .align 2
 494              	 .global MPU_vTaskSuspend
 495              	 .thumb
 496              	 .thumb_func
 498              	MPU_vTaskSuspend:
 499              	.LFB16:
 258:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 259:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TRACE_FACILITY == 1 ) */
 260:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 261:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 262:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
 263:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHandle_t MPU_xTaskGetIdleTaskHandle( void ) /* FREERTOS_SYSTEM_CALL */
 264:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 265:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TaskHandle_t xReturn;
 266:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 267:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 268:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGetIdleTaskHandle();
 269:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 270:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 271:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 272:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 273:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 274:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 275:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 276:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskSuspend( TaskHandle_t pxTaskToSuspend ) /* FREERTOS_SYSTEM_CALL */
 277:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 500              	 .loc 1 277 0
 501              	 .cfi_startproc
 502              	 
 503              	 
 504              	.LVL65:
 505 0000 38B5     	 push {r3,r4,r5,lr}
 506              	.LCFI14:
 507              	 .cfi_def_cfa_offset 16
 508              	 .cfi_offset 3,-16
 509              	 .cfi_offset 4,-12
 510              	 .cfi_offset 5,-8
 511              	 .cfi_offset 14,-4
 512 0002 0546     	 mov r5,r0
 278:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 513              	 .loc 1 278 0
 514 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 515              	.LVL66:
 516 0008 0446     	 mov r4,r0
 517              	.LVL67:
 279:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 280:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskSuspend( pxTaskToSuspend );
 518              	 .loc 1 280 0
 519 000a 2846     	 mov r0,r5
 520              	.LVL68:
 521 000c FFF7FEFF 	 bl vTaskSuspend
 522              	.LVL69:
 281:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 523              	 .loc 1 281 0
 524 0010 2046     	 mov r0,r4
 525 0012 FFF7FEFF 	 bl vPortResetPrivilege
 526              	.LVL70:
 527 0016 38BD     	 pop {r3,r4,r5,pc}
 528              	 .cfi_endproc
 529              	.LFE16:
 531              	 .section .text.MPU_vTaskResume,"ax",%progbits
 532              	 .align 2
 533              	 .global MPU_vTaskResume
 534              	 .thumb
 535              	 .thumb_func
 537              	MPU_vTaskResume:
 538              	.LFB17:
 282:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 283:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 284:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 285:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 286:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 287:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskResume( TaskHandle_t pxTaskToResume ) /* FREERTOS_SYSTEM_CALL */
 288:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 539              	 .loc 1 288 0
 540              	 .cfi_startproc
 541              	 
 542              	 
 543              	.LVL71:
 544 0000 38B5     	 push {r3,r4,r5,lr}
 545              	.LCFI15:
 546              	 .cfi_def_cfa_offset 16
 547              	 .cfi_offset 3,-16
 548              	 .cfi_offset 4,-12
 549              	 .cfi_offset 5,-8
 550              	 .cfi_offset 14,-4
 551 0002 0546     	 mov r5,r0
 289:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 552              	 .loc 1 289 0
 553 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 554              	.LVL72:
 555 0008 0446     	 mov r4,r0
 556              	.LVL73:
 290:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 291:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskResume( pxTaskToResume );
 557              	 .loc 1 291 0
 558 000a 2846     	 mov r0,r5
 559              	.LVL74:
 560 000c FFF7FEFF 	 bl vTaskResume
 561              	.LVL75:
 292:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 562              	 .loc 1 292 0
 563 0010 2046     	 mov r0,r4
 564 0012 FFF7FEFF 	 bl vPortResetPrivilege
 565              	.LVL76:
 566 0016 38BD     	 pop {r3,r4,r5,pc}
 567              	 .cfi_endproc
 568              	.LFE17:
 570              	 .section .text.MPU_vTaskSuspendAll,"ax",%progbits
 571              	 .align 2
 572              	 .global MPU_vTaskSuspendAll
 573              	 .thumb
 574              	 .thumb_func
 576              	MPU_vTaskSuspendAll:
 577              	.LFB18:
 293:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 294:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 295:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 296:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 297:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void MPU_vTaskSuspendAll( void ) /* FREERTOS_SYSTEM_CALL */
 298:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 578              	 .loc 1 298 0
 579              	 .cfi_startproc
 580              	 
 581              	 
 582 0000 10B5     	 push {r4,lr}
 583              	.LCFI16:
 584              	 .cfi_def_cfa_offset 8
 585              	 .cfi_offset 4,-8
 586              	 .cfi_offset 14,-4
 299:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 587              	 .loc 1 299 0
 588 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 589              	.LVL77:
 590 0006 0446     	 mov r4,r0
 591              	.LVL78:
 300:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 301:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vTaskSuspendAll();
 592              	 .loc 1 301 0
 593 0008 FFF7FEFF 	 bl vTaskSuspendAll
 594              	.LVL79:
 302:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 595              	 .loc 1 302 0
 596 000c 2046     	 mov r0,r4
 597 000e FFF7FEFF 	 bl vPortResetPrivilege
 598              	.LVL80:
 599 0012 10BD     	 pop {r4,pc}
 600              	 .cfi_endproc
 601              	.LFE18:
 603              	 .section .text.MPU_xTaskResumeAll,"ax",%progbits
 604              	 .align 2
 605              	 .global MPU_xTaskResumeAll
 606              	 .thumb
 607              	 .thumb_func
 609              	MPU_xTaskResumeAll:
 610              	.LFB19:
 303:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 304:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 305:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 306:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xTaskResumeAll( void ) /* FREERTOS_SYSTEM_CALL */
 307:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 611              	 .loc 1 307 0
 612              	 .cfi_startproc
 613              	 
 614              	 
 615 0000 38B5     	 push {r3,r4,r5,lr}
 616              	.LCFI17:
 617              	 .cfi_def_cfa_offset 16
 618              	 .cfi_offset 3,-16
 619              	 .cfi_offset 4,-12
 620              	 .cfi_offset 5,-8
 621              	 .cfi_offset 14,-4
 308:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 309:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 622              	 .loc 1 309 0
 623 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 624              	.LVL81:
 625 0006 0546     	 mov r5,r0
 626              	.LVL82:
 310:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 311:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xTaskResumeAll();
 627              	 .loc 1 311 0
 628 0008 FFF7FEFF 	 bl xTaskResumeAll
 629              	.LVL83:
 630 000c 0446     	 mov r4,r0
 631              	.LVL84:
 312:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 632              	 .loc 1 312 0
 633 000e 2846     	 mov r0,r5
 634              	.LVL85:
 635 0010 FFF7FEFF 	 bl vPortResetPrivilege
 636              	.LVL86:
 313:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 314:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 637              	 .loc 1 314 0
 638 0014 2046     	 mov r0,r4
 639 0016 38BD     	 pop {r3,r4,r5,pc}
 640              	 .cfi_endproc
 641              	.LFE19:
 643              	 .section .text.MPU_xTaskGetTickCount,"ax",%progbits
 644              	 .align 2
 645              	 .global MPU_xTaskGetTickCount
 646              	 .thumb
 647              	 .thumb_func
 649              	MPU_xTaskGetTickCount:
 650              	.LFB20:
 315:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 316:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 317:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** TickType_t MPU_xTaskGetTickCount( void ) /* FREERTOS_SYSTEM_CALL */
 318:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 651              	 .loc 1 318 0
 652              	 .cfi_startproc
 653              	 
 654              	 
 655 0000 38B5     	 push {r3,r4,r5,lr}
 656              	.LCFI18:
 657              	 .cfi_def_cfa_offset 16
 658              	 .cfi_offset 3,-16
 659              	 .cfi_offset 4,-12
 660              	 .cfi_offset 5,-8
 661              	 .cfi_offset 14,-4
 319:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TickType_t xReturn;
 320:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 662              	 .loc 1 320 0
 663 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 664              	.LVL87:
 665 0006 0546     	 mov r5,r0
 666              	.LVL88:
 321:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 322:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xTaskGetTickCount();
 667              	 .loc 1 322 0
 668 0008 FFF7FEFF 	 bl xTaskGetTickCount
 669              	.LVL89:
 670 000c 0446     	 mov r4,r0
 671              	.LVL90:
 323:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 672              	 .loc 1 323 0
 673 000e 2846     	 mov r0,r5
 674              	.LVL91:
 675 0010 FFF7FEFF 	 bl vPortResetPrivilege
 676              	.LVL92:
 324:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 325:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 677              	 .loc 1 325 0
 678 0014 2046     	 mov r0,r4
 679 0016 38BD     	 pop {r3,r4,r5,pc}
 680              	 .cfi_endproc
 681              	.LFE20:
 683              	 .section .text.MPU_uxTaskGetNumberOfTasks,"ax",%progbits
 684              	 .align 2
 685              	 .global MPU_uxTaskGetNumberOfTasks
 686              	 .thumb
 687              	 .thumb_func
 689              	MPU_uxTaskGetNumberOfTasks:
 690              	.LFB21:
 326:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 327:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 328:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** UBaseType_t MPU_uxTaskGetNumberOfTasks( void ) /* FREERTOS_SYSTEM_CALL */
 329:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 691              	 .loc 1 329 0
 692              	 .cfi_startproc
 693              	 
 694              	 
 695 0000 38B5     	 push {r3,r4,r5,lr}
 696              	.LCFI19:
 697              	 .cfi_def_cfa_offset 16
 698              	 .cfi_offset 3,-16
 699              	 .cfi_offset 4,-12
 700              	 .cfi_offset 5,-8
 701              	 .cfi_offset 14,-4
 330:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t uxReturn;
 331:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 702              	 .loc 1 331 0
 703 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 704              	.LVL93:
 705 0006 0546     	 mov r5,r0
 706              	.LVL94:
 332:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 333:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     uxReturn = uxTaskGetNumberOfTasks();
 707              	 .loc 1 333 0
 708 0008 FFF7FEFF 	 bl uxTaskGetNumberOfTasks
 709              	.LVL95:
 710 000c 0446     	 mov r4,r0
 711              	.LVL96:
 334:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 712              	 .loc 1 334 0
 713 000e 2846     	 mov r0,r5
 714              	.LVL97:
 715 0010 FFF7FEFF 	 bl vPortResetPrivilege
 716              	.LVL98:
 335:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return uxReturn;
 336:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 717              	 .loc 1 336 0
 718 0014 2046     	 mov r0,r4
 719 0016 38BD     	 pop {r3,r4,r5,pc}
 720              	 .cfi_endproc
 721              	.LFE21:
 723              	 .section .text.MPU_pcTaskGetName,"ax",%progbits
 724              	 .align 2
 725              	 .global MPU_pcTaskGetName
 726              	 .thumb
 727              	 .thumb_func
 729              	MPU_pcTaskGetName:
 730              	.LFB22:
 337:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 338:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 339:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** char * MPU_pcTaskGetName( TaskHandle_t xTaskToQuery ) /* FREERTOS_SYSTEM_CALL */
 340:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 731              	 .loc 1 340 0
 732              	 .cfi_startproc
 733              	 
 734              	 
 735              	.LVL99:
 736 0000 38B5     	 push {r3,r4,r5,lr}
 737              	.LCFI20:
 738              	 .cfi_def_cfa_offset 16
 739              	 .cfi_offset 3,-16
 740              	 .cfi_offset 4,-12
 741              	 .cfi_offset 5,-8
 742              	 .cfi_offset 14,-4
 743 0002 0446     	 mov r4,r0
 341:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     char * pcReturn;
 342:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 744              	 .loc 1 342 0
 745 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 746              	.LVL100:
 747 0008 0546     	 mov r5,r0
 748              	.LVL101:
 343:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 344:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     pcReturn = pcTaskGetName( xTaskToQuery );
 749              	 .loc 1 344 0
 750 000a 2046     	 mov r0,r4
 751              	.LVL102:
 752 000c FFF7FEFF 	 bl pcTaskGetName
 753              	.LVL103:
 754 0010 0446     	 mov r4,r0
 755              	.LVL104:
 345:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 756              	 .loc 1 345 0
 757 0012 2846     	 mov r0,r5
 758              	.LVL105:
 759 0014 FFF7FEFF 	 bl vPortResetPrivilege
 760              	.LVL106:
 346:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return pcReturn;
 347:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 761              	 .loc 1 347 0
 762 0018 2046     	 mov r0,r4
 763 001a 38BD     	 pop {r3,r4,r5,pc}
 764              	 .cfi_endproc
 765              	.LFE22:
 767              	 .section .text.MPU_uxTaskGetSystemState,"ax",%progbits
 768              	 .align 2
 769              	 .global MPU_uxTaskGetSystemState
 770              	 .thumb
 771              	 .thumb_func
 773              	MPU_uxTaskGetSystemState:
 774              	.LFB23:
 348:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 349:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 350:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 351:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHandle_t MPU_xTaskGetHandle( const char * pcNameToQuery ) /* FREERTOS_SYSTEM_CALL */
 352:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 353:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TaskHandle_t xReturn;
 354:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 355:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 356:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGetHandle( pcNameToQuery );
 357:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 358:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 359:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 360:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 361:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 362:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 363:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
 364:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskList( char * pcWriteBuffer ) /* FREERTOS_SYSTEM_CALL */
 365:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 366:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 367:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 368:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskList( pcWriteBuffer );
 369:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 370:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 371:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 372:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 373:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 374:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
 375:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskGetRunTimeStats( char * pcWriteBuffer ) /* FREERTOS_SYSTEM_CALL */
 376:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 377:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 378:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 379:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskGetRunTimeStats( pcWriteBuffer );
 380:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 381:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 382:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 383:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 384:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 385:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
 386:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     uint32_t MPU_ulTaskGetIdleRunTimeCounter( void ) /* FREERTOS_SYSTEM_CALL */
 387:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 388:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uint32_t xReturn;
 389:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 390:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 391:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = ulTaskGetIdleRunTimeCounter();
 392:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 393:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 394:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 395:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 396:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 397:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 398:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 399:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskSetApplicationTaskTag( TaskHandle_t xTask,
 400:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                          TaskHookFunction_t pxTagValue ) /* FREERTOS_SYSTEM_CALL */
 401:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 402:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 403:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 404:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskSetApplicationTaskTag( xTask, pxTagValue );
 405:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 406:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 407:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 408:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 409:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 410:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 411:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHookFunction_t MPU_xTaskGetApplicationTaskTag( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL
 412:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 413:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TaskHookFunction_t xReturn;
 414:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 415:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 416:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGetApplicationTaskTag( xTask );
 417:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 418:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 419:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 420:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 421:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 422:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 423:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 424:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
 425:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                 BaseType_t xIndex,
 426:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                 void * pvValue ) /* FREERTOS_SYSTEM_CALL */
 427:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 428:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 429:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 430:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTaskSetThreadLocalStoragePointer( xTaskToSet, xIndex, pvValue );
 431:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 432:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 433:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 434:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 435:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 436:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 437:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void * MPU_pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
 438:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                    BaseType_t xIndex ) /* FREERTOS_SYSTEM_CALL */
 439:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 440:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         void * pvReturn;
 441:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 442:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 443:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         pvReturn = pvTaskGetThreadLocalStoragePointer( xTaskToQuery, xIndex );
 444:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 445:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return pvReturn;
 446:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 447:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 ) */
 448:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 449:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 450:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 451:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskCallApplicationTaskHook( TaskHandle_t xTask,
 452:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                  void * pvParameter ) /* FREERTOS_SYSTEM_CALL */
 453:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 454:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 455:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 456:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 457:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskCallApplicationTaskHook( xTask, pvParameter );
 458:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 459:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 460:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 461:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_APPLICATION_TASK_TAG == 1 ) */
 462:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 463:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 464:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 465:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t MPU_uxTaskGetSystemState( TaskStatus_t * pxTaskStatusArray,
 466:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           UBaseType_t uxArraySize,
 467:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           uint32_t * pulTotalRunTime ) /* FREERTOS_SYSTEM_CALL */
 468:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 775              	 .loc 1 468 0
 776              	 .cfi_startproc
 777              	 
 778              	 
 779              	.LVL107:
 780 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 781              	.LCFI21:
 782              	 .cfi_def_cfa_offset 24
 783              	 .cfi_offset 3,-24
 784              	 .cfi_offset 4,-20
 785              	 .cfi_offset 5,-16
 786              	 .cfi_offset 6,-12
 787              	 .cfi_offset 7,-8
 788              	 .cfi_offset 14,-4
 789 0002 0746     	 mov r7,r0
 790 0004 0E46     	 mov r6,r1
 791 0006 1446     	 mov r4,r2
 469:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         UBaseType_t uxReturn;
 470:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 792              	 .loc 1 470 0
 793 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 794              	.LVL108:
 795 000c 0546     	 mov r5,r0
 796              	.LVL109:
 471:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 472:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uxReturn = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, pulTotalRunTime );
 797              	 .loc 1 472 0
 798 000e 3846     	 mov r0,r7
 799              	.LVL110:
 800 0010 3146     	 mov r1,r6
 801 0012 2246     	 mov r2,r4
 802 0014 FFF7FEFF 	 bl uxTaskGetSystemState
 803              	.LVL111:
 804 0018 0446     	 mov r4,r0
 805              	.LVL112:
 473:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 806              	 .loc 1 473 0
 807 001a 2846     	 mov r0,r5
 808              	.LVL113:
 809 001c FFF7FEFF 	 bl vPortResetPrivilege
 810              	.LVL114:
 474:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return uxReturn;
 475:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 811              	 .loc 1 475 0
 812 0020 2046     	 mov r0,r4
 813 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 814              	 .cfi_endproc
 815              	.LFE23:
 817              	 .section .text.MPU_xTaskCatchUpTicks,"ax",%progbits
 818              	 .align 2
 819              	 .global MPU_xTaskCatchUpTicks
 820              	 .thumb
 821              	 .thumb_func
 823              	MPU_xTaskCatchUpTicks:
 824              	.LFB24:
 476:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TRACE_FACILITY == 1 ) */
 477:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 478:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 479:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xTaskCatchUpTicks( TickType_t xTicksToCatchUp ) /* FREERTOS_SYSTEM_CALL */
 480:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 825              	 .loc 1 480 0
 826              	 .cfi_startproc
 827              	 
 828              	 
 829              	.LVL115:
 830 0000 38B5     	 push {r3,r4,r5,lr}
 831              	.LCFI22:
 832              	 .cfi_def_cfa_offset 16
 833              	 .cfi_offset 3,-16
 834              	 .cfi_offset 4,-12
 835              	 .cfi_offset 5,-8
 836              	 .cfi_offset 14,-4
 837 0002 0446     	 mov r4,r0
 481:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 482:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 838              	 .loc 1 482 0
 839 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 840              	.LVL116:
 841 0008 0546     	 mov r5,r0
 842              	.LVL117:
 483:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 484:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xTaskCatchUpTicks( xTicksToCatchUp );
 843              	 .loc 1 484 0
 844 000a 2046     	 mov r0,r4
 845              	.LVL118:
 846 000c FFF7FEFF 	 bl xTaskCatchUpTicks
 847              	.LVL119:
 848 0010 0446     	 mov r4,r0
 849              	.LVL120:
 485:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 850              	 .loc 1 485 0
 851 0012 2846     	 mov r0,r5
 852              	.LVL121:
 853 0014 FFF7FEFF 	 bl vPortResetPrivilege
 854              	.LVL122:
 486:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 487:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 855              	 .loc 1 487 0
 856 0018 2046     	 mov r0,r4
 857 001a 38BD     	 pop {r3,r4,r5,pc}
 858              	 .cfi_endproc
 859              	.LFE24:
 861              	 .section .text.MPU_vTaskSetTimeOutState,"ax",%progbits
 862              	 .align 2
 863              	 .global MPU_vTaskSetTimeOutState
 864              	 .thumb
 865              	 .thumb_func
 867              	MPU_vTaskSetTimeOutState:
 868              	.LFB25:
 488:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 489:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 490:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
 491:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t MPU_uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL */
 492:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 493:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         UBaseType_t uxReturn;
 494:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 495:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 496:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uxReturn = uxTaskGetStackHighWaterMark( xTask );
 497:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 498:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return uxReturn;
 499:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 500:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 501:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 502:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 503:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
 504:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     configSTACK_DEPTH_TYPE MPU_uxTaskGetStackHighWaterMark2( TaskHandle_t xTask ) /* FREERTOS_SYSTE
 505:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 506:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         configSTACK_DEPTH_TYPE uxReturn;
 507:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 508:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 509:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uxReturn = uxTaskGetStackHighWaterMark2( xTask );
 510:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 511:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return uxReturn;
 512:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 513:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 514:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 515:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 516:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetCurrentTaskHandle == 1 )
 517:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHandle_t MPU_xTaskGetCurrentTaskHandle( void ) /* FREERTOS_SYSTEM_CALL */
 518:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 519:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TaskHandle_t xReturn;
 520:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 521:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 522:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGetCurrentTaskHandle();
 523:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 524:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 525:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 526:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 527:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 528:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 529:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetSchedulerState == 1 )
 530:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskGetSchedulerState( void ) /* FREERTOS_SYSTEM_CALL */
 531:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 532:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 533:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 534:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 535:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGetSchedulerState();
 536:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 537:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 538:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 539:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 540:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 541:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 542:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void MPU_vTaskSetTimeOutState( TimeOut_t * const pxTimeOut ) /* FREERTOS_SYSTEM_CALL */
 543:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 869              	 .loc 1 543 0
 870              	 .cfi_startproc
 871              	 
 872              	 
 873              	.LVL123:
 874 0000 38B5     	 push {r3,r4,r5,lr}
 875              	.LCFI23:
 876              	 .cfi_def_cfa_offset 16
 877              	 .cfi_offset 3,-16
 878              	 .cfi_offset 4,-12
 879              	 .cfi_offset 5,-8
 880              	 .cfi_offset 14,-4
 881 0002 0546     	 mov r5,r0
 544:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 882              	 .loc 1 544 0
 883 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 884              	.LVL124:
 885 0008 0446     	 mov r4,r0
 886              	.LVL125:
 545:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 546:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vTaskSetTimeOutState( pxTimeOut );
 887              	 .loc 1 546 0
 888 000a 2846     	 mov r0,r5
 889              	.LVL126:
 890 000c FFF7FEFF 	 bl vTaskSetTimeOutState
 891              	.LVL127:
 547:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 892              	 .loc 1 547 0
 893 0010 2046     	 mov r0,r4
 894 0012 FFF7FEFF 	 bl vPortResetPrivilege
 895              	.LVL128:
 896 0016 38BD     	 pop {r3,r4,r5,pc}
 897              	 .cfi_endproc
 898              	.LFE25:
 900              	 .section .text.MPU_xTaskCheckForTimeOut,"ax",%progbits
 901              	 .align 2
 902              	 .global MPU_xTaskCheckForTimeOut
 903              	 .thumb
 904              	 .thumb_func
 906              	MPU_xTaskCheckForTimeOut:
 907              	.LFB26:
 548:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 549:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 550:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 551:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
 552:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                      TickType_t * const pxTicksToWait ) /* FREERTOS_SYSTEM_CALL */
 553:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 908              	 .loc 1 553 0
 909              	 .cfi_startproc
 910              	 
 911              	 
 912              	.LVL129:
 913 0000 70B5     	 push {r4,r5,r6,lr}
 914              	.LCFI24:
 915              	 .cfi_def_cfa_offset 16
 916              	 .cfi_offset 4,-16
 917              	 .cfi_offset 5,-12
 918              	 .cfi_offset 6,-8
 919              	 .cfi_offset 14,-4
 920 0002 0646     	 mov r6,r0
 921 0004 0C46     	 mov r4,r1
 554:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 555:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 922              	 .loc 1 555 0
 923 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 924              	.LVL130:
 925 000a 0546     	 mov r5,r0
 926              	.LVL131:
 556:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 557:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xTaskCheckForTimeOut( pxTimeOut, pxTicksToWait );
 927              	 .loc 1 557 0
 928 000c 3046     	 mov r0,r6
 929              	.LVL132:
 930 000e 2146     	 mov r1,r4
 931 0010 FFF7FEFF 	 bl xTaskCheckForTimeOut
 932              	.LVL133:
 933 0014 0446     	 mov r4,r0
 934              	.LVL134:
 558:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 935              	 .loc 1 558 0
 936 0016 2846     	 mov r0,r5
 937              	.LVL135:
 938 0018 FFF7FEFF 	 bl vPortResetPrivilege
 939              	.LVL136:
 559:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 560:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 940              	 .loc 1 560 0
 941 001c 2046     	 mov r0,r4
 942 001e 70BD     	 pop {r4,r5,r6,pc}
 943              	 .cfi_endproc
 944              	.LFE26:
 946              	 .section .text.MPU_xTaskGenericNotify,"ax",%progbits
 947              	 .align 2
 948              	 .global MPU_xTaskGenericNotify
 949              	 .thumb
 950              	 .thumb_func
 952              	MPU_xTaskGenericNotify:
 953              	.LFB27:
 561:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 562:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 563:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 564:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskGenericNotify( TaskHandle_t xTaskToNotify,
 565:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                        UBaseType_t uxIndexToNotify,
 566:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                        uint32_t ulValue,
 567:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                        eNotifyAction eAction,
 568:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                        uint32_t * pulPreviousNotificationValue ) /* FREERTOS_SYSTEM
 569:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 954              	 .loc 1 569 0
 955              	 .cfi_startproc
 956              	 
 957              	 
 958              	.LVL137:
 959 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 960              	.LCFI25:
 961              	 .cfi_def_cfa_offset 24
 962              	 .cfi_offset 4,-24
 963              	 .cfi_offset 5,-20
 964              	 .cfi_offset 6,-16
 965              	 .cfi_offset 7,-12
 966              	 .cfi_offset 8,-8
 967              	 .cfi_offset 14,-4
 968 0004 82B0     	 sub sp,sp,#8
 969              	.LCFI26:
 970              	 .cfi_def_cfa_offset 32
 971 0006 8046     	 mov r8,r0
 972 0008 0F46     	 mov r7,r1
 973 000a 1646     	 mov r6,r2
 974 000c 1C46     	 mov r4,r3
 570:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 571:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 975              	 .loc 1 571 0
 976 000e FFF7FEFF 	 bl xPortRaisePrivilege
 977              	.LVL138:
 978 0012 0546     	 mov r5,r0
 979              	.LVL139:
 572:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 573:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGenericNotify( xTaskToNotify, uxIndexToNotify, ulValue, eAction, pulPrevious
 980              	 .loc 1 573 0
 981 0014 089B     	 ldr r3,[sp,#32]
 982 0016 0093     	 str r3,[sp]
 983 0018 4046     	 mov r0,r8
 984              	.LVL140:
 985 001a 3946     	 mov r1,r7
 986 001c 3246     	 mov r2,r6
 987 001e 2346     	 mov r3,r4
 988 0020 FFF7FEFF 	 bl xTaskGenericNotify
 989              	.LVL141:
 990 0024 0446     	 mov r4,r0
 991              	.LVL142:
 574:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 992              	 .loc 1 574 0
 993 0026 2846     	 mov r0,r5
 994              	.LVL143:
 995 0028 FFF7FEFF 	 bl vPortResetPrivilege
 996              	.LVL144:
 575:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 576:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 997              	 .loc 1 576 0
 998 002c 2046     	 mov r0,r4
 999 002e 02B0     	 add sp,sp,#8
 1000              	.LCFI27:
 1001              	 .cfi_def_cfa_offset 24
 1002              	 
 1003 0030 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1004              	 .cfi_endproc
 1005              	.LFE27:
 1007              	 .section .text.MPU_xTaskGenericNotifyWait,"ax",%progbits
 1008              	 .align 2
 1009              	 .global MPU_xTaskGenericNotifyWait
 1010              	 .thumb
 1011              	 .thumb_func
 1013              	MPU_xTaskGenericNotifyWait:
 1014              	.LFB28:
 577:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
 578:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 579:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 580:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 581:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskGenericNotifyWait( UBaseType_t uxIndexToWaitOn,
 582:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            uint32_t ulBitsToClearOnEntry,
 583:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            uint32_t ulBitsToClearOnExit,
 584:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            uint32_t * pulNotificationValue,
 585:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
 586:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1015              	 .loc 1 586 0
 1016              	 .cfi_startproc
 1017              	 
 1018              	 
 1019              	.LVL145:
 1020 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1021              	.LCFI28:
 1022              	 .cfi_def_cfa_offset 24
 1023              	 .cfi_offset 4,-24
 1024              	 .cfi_offset 5,-20
 1025              	 .cfi_offset 6,-16
 1026              	 .cfi_offset 7,-12
 1027              	 .cfi_offset 8,-8
 1028              	 .cfi_offset 14,-4
 1029 0004 82B0     	 sub sp,sp,#8
 1030              	.LCFI29:
 1031              	 .cfi_def_cfa_offset 32
 1032 0006 8046     	 mov r8,r0
 1033 0008 0F46     	 mov r7,r1
 1034 000a 1646     	 mov r6,r2
 1035 000c 1C46     	 mov r4,r3
 587:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 588:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1036              	 .loc 1 588 0
 1037 000e FFF7FEFF 	 bl xPortRaisePrivilege
 1038              	.LVL146:
 1039 0012 0546     	 mov r5,r0
 1040              	.LVL147:
 589:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 590:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGenericNotifyWait( uxIndexToWaitOn, ulBitsToClearOnEntry, ulBitsToClearOnExi
 1041              	 .loc 1 590 0
 1042 0014 089B     	 ldr r3,[sp,#32]
 1043 0016 0093     	 str r3,[sp]
 1044 0018 4046     	 mov r0,r8
 1045              	.LVL148:
 1046 001a 3946     	 mov r1,r7
 1047 001c 3246     	 mov r2,r6
 1048 001e 2346     	 mov r3,r4
 1049 0020 FFF7FEFF 	 bl xTaskGenericNotifyWait
 1050              	.LVL149:
 1051 0024 0446     	 mov r4,r0
 1052              	.LVL150:
 591:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1053              	 .loc 1 591 0
 1054 0026 2846     	 mov r0,r5
 1055              	.LVL151:
 1056 0028 FFF7FEFF 	 bl vPortResetPrivilege
 1057              	.LVL152:
 592:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 593:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1058              	 .loc 1 593 0
 1059 002c 2046     	 mov r0,r4
 1060 002e 02B0     	 add sp,sp,#8
 1061              	.LCFI30:
 1062              	 .cfi_def_cfa_offset 24
 1063              	 
 1064 0030 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1065              	 .cfi_endproc
 1066              	.LFE28:
 1068              	 .section .text.MPU_ulTaskGenericNotifyTake,"ax",%progbits
 1069              	 .align 2
 1070              	 .global MPU_ulTaskGenericNotifyTake
 1071              	 .thumb
 1072              	 .thumb_func
 1074              	MPU_ulTaskGenericNotifyTake:
 1075              	.LFB29:
 594:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
 595:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 596:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 597:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 598:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     uint32_t MPU_ulTaskGenericNotifyTake( UBaseType_t uxIndexToWaitOn,
 599:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           BaseType_t xClearCountOnExit,
 600:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
 601:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1076              	 .loc 1 601 0
 1077              	 .cfi_startproc
 1078              	 
 1079              	 
 1080              	.LVL153:
 1081 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1082              	.LCFI31:
 1083              	 .cfi_def_cfa_offset 24
 1084              	 .cfi_offset 3,-24
 1085              	 .cfi_offset 4,-20
 1086              	 .cfi_offset 5,-16
 1087              	 .cfi_offset 6,-12
 1088              	 .cfi_offset 7,-8
 1089              	 .cfi_offset 14,-4
 1090 0002 0746     	 mov r7,r0
 1091 0004 0E46     	 mov r6,r1
 1092 0006 1446     	 mov r4,r2
 602:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uint32_t ulReturn;
 603:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1093              	 .loc 1 603 0
 1094 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 1095              	.LVL154:
 1096 000c 0546     	 mov r5,r0
 1097              	.LVL155:
 604:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 605:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         ulReturn = ulTaskGenericNotifyTake( uxIndexToWaitOn, xClearCountOnExit, xTicksToWait );
 1098              	 .loc 1 605 0
 1099 000e 3846     	 mov r0,r7
 1100              	.LVL156:
 1101 0010 3146     	 mov r1,r6
 1102 0012 2246     	 mov r2,r4
 1103 0014 FFF7FEFF 	 bl ulTaskGenericNotifyTake
 1104              	.LVL157:
 1105 0018 0446     	 mov r4,r0
 1106              	.LVL158:
 606:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1107              	 .loc 1 606 0
 1108 001a 2846     	 mov r0,r5
 1109              	.LVL159:
 1110 001c FFF7FEFF 	 bl vPortResetPrivilege
 1111              	.LVL160:
 607:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return ulReturn;
 608:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1112              	 .loc 1 608 0
 1113 0020 2046     	 mov r0,r4
 1114 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1115              	 .cfi_endproc
 1116              	.LFE29:
 1118              	 .section .text.MPU_xTaskGenericNotifyStateClear,"ax",%progbits
 1119              	 .align 2
 1120              	 .global MPU_xTaskGenericNotifyStateClear
 1121              	 .thumb
 1122              	 .thumb_func
 1124              	MPU_xTaskGenericNotifyStateClear:
 1125              	.LFB30:
 609:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
 610:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 611:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 612:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 613:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTaskGenericNotifyStateClear( TaskHandle_t xTask,
 614:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                  UBaseType_t uxIndexToClear ) /* FREERTOS_SYSTEM_CA
 615:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1126              	 .loc 1 615 0
 1127              	 .cfi_startproc
 1128              	 
 1129              	 
 1130              	.LVL161:
 1131 0000 70B5     	 push {r4,r5,r6,lr}
 1132              	.LCFI32:
 1133              	 .cfi_def_cfa_offset 16
 1134              	 .cfi_offset 4,-16
 1135              	 .cfi_offset 5,-12
 1136              	 .cfi_offset 6,-8
 1137              	 .cfi_offset 14,-4
 1138 0002 0646     	 mov r6,r0
 1139 0004 0C46     	 mov r4,r1
 616:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 617:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1140              	 .loc 1 617 0
 1141 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 1142              	.LVL162:
 1143 000a 0546     	 mov r5,r0
 1144              	.LVL163:
 618:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 619:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTaskGenericNotifyStateClear( xTask, uxIndexToClear );
 1145              	 .loc 1 619 0
 1146 000c 3046     	 mov r0,r6
 1147              	.LVL164:
 1148 000e 2146     	 mov r1,r4
 1149 0010 FFF7FEFF 	 bl xTaskGenericNotifyStateClear
 1150              	.LVL165:
 1151 0014 0446     	 mov r4,r0
 1152              	.LVL166:
 620:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1153              	 .loc 1 620 0
 1154 0016 2846     	 mov r0,r5
 1155              	.LVL167:
 1156 0018 FFF7FEFF 	 bl vPortResetPrivilege
 1157              	.LVL168:
 621:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 622:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1158              	 .loc 1 622 0
 1159 001c 2046     	 mov r0,r4
 1160 001e 70BD     	 pop {r4,r5,r6,pc}
 1161              	 .cfi_endproc
 1162              	.LFE30:
 1164              	 .section .text.MPU_ulTaskGenericNotifyValueClear,"ax",%progbits
 1165              	 .align 2
 1166              	 .global MPU_ulTaskGenericNotifyValueClear
 1167              	 .thumb
 1168              	 .thumb_func
 1170              	MPU_ulTaskGenericNotifyValueClear:
 1171              	.LFB31:
 623:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
 624:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 625:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 626:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 627:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     uint32_t MPU_ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
 628:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                 UBaseType_t uxIndexToClear,
 629:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                 uint32_t ulBitsToClear ) /* FREERTOS_SYSTEM_CALL */
 630:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1172              	 .loc 1 630 0
 1173              	 .cfi_startproc
 1174              	 
 1175              	 
 1176              	.LVL169:
 1177 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1178              	.LCFI33:
 1179              	 .cfi_def_cfa_offset 24
 1180              	 .cfi_offset 3,-24
 1181              	 .cfi_offset 4,-20
 1182              	 .cfi_offset 5,-16
 1183              	 .cfi_offset 6,-12
 1184              	 .cfi_offset 7,-8
 1185              	 .cfi_offset 14,-4
 1186 0002 0746     	 mov r7,r0
 1187 0004 0E46     	 mov r6,r1
 1188 0006 1446     	 mov r4,r2
 631:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uint32_t ulReturn;
 632:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1189              	 .loc 1 632 0
 1190 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 1191              	.LVL170:
 1192 000c 0546     	 mov r5,r0
 1193              	.LVL171:
 633:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 634:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         ulReturn = ulTaskGenericNotifyValueClear( xTask, uxIndexToClear, ulBitsToClear );
 1194              	 .loc 1 634 0
 1195 000e 3846     	 mov r0,r7
 1196              	.LVL172:
 1197 0010 3146     	 mov r1,r6
 1198 0012 2246     	 mov r2,r4
 1199 0014 FFF7FEFF 	 bl ulTaskGenericNotifyValueClear
 1200              	.LVL173:
 1201 0018 0446     	 mov r4,r0
 1202              	.LVL174:
 635:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1203              	 .loc 1 635 0
 1204 001a 2846     	 mov r0,r5
 1205              	.LVL175:
 1206 001c FFF7FEFF 	 bl vPortResetPrivilege
 1207              	.LVL176:
 636:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return ulReturn;
 637:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1208              	 .loc 1 637 0
 1209 0020 2046     	 mov r0,r4
 1210 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1211              	 .cfi_endproc
 1212              	.LFE31:
 1214              	 .section .text.MPU_xQueueGenericCreate,"ax",%progbits
 1215              	 .align 2
 1216              	 .global MPU_xQueueGenericCreate
 1217              	 .thumb
 1218              	 .thumb_func
 1220              	MPU_xQueueGenericCreate:
 1221              	.LFB32:
 638:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
 639:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 640:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 641:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 642:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueHandle_t MPU_xQueueGenericCreate( UBaseType_t uxQueueLength,
 643:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            UBaseType_t uxItemSize,
 644:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            uint8_t ucQueueType ) /* FREERTOS_SYSTEM_CALL */
 645:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1222              	 .loc 1 645 0
 1223              	 .cfi_startproc
 1224              	 
 1225              	 
 1226              	.LVL177:
 1227 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1228              	.LCFI34:
 1229              	 .cfi_def_cfa_offset 24
 1230              	 .cfi_offset 3,-24
 1231              	 .cfi_offset 4,-20
 1232              	 .cfi_offset 5,-16
 1233              	 .cfi_offset 6,-12
 1234              	 .cfi_offset 7,-8
 1235              	 .cfi_offset 14,-4
 1236 0002 0746     	 mov r7,r0
 1237 0004 0E46     	 mov r6,r1
 1238 0006 1446     	 mov r4,r2
 646:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueHandle_t xReturn;
 647:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1239              	 .loc 1 647 0
 1240 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 1241              	.LVL178:
 1242 000c 0546     	 mov r5,r0
 1243              	.LVL179:
 648:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 649:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueGenericCreate( uxQueueLength, uxItemSize, ucQueueType );
 1244              	 .loc 1 649 0
 1245 000e 3846     	 mov r0,r7
 1246              	.LVL180:
 1247 0010 3146     	 mov r1,r6
 1248 0012 2246     	 mov r2,r4
 1249 0014 FFF7FEFF 	 bl xQueueGenericCreate
 1250              	.LVL181:
 1251 0018 0446     	 mov r4,r0
 1252              	.LVL182:
 650:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1253              	 .loc 1 650 0
 1254 001a 2846     	 mov r0,r5
 1255              	.LVL183:
 1256 001c FFF7FEFF 	 bl vPortResetPrivilege
 1257              	.LVL184:
 651:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 652:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1258              	 .loc 1 652 0
 1259 0020 2046     	 mov r0,r4
 1260 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1261              	 .cfi_endproc
 1262              	.LFE32:
 1264              	 .section .text.MPU_xQueueGenericReset,"ax",%progbits
 1265              	 .align 2
 1266              	 .global MPU_xQueueGenericReset
 1267              	 .thumb
 1268              	 .thumb_func
 1270              	MPU_xQueueGenericReset:
 1271              	.LFB33:
 653:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 654:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 655:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 656:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 657:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueHandle_t MPU_xQueueGenericCreateStatic( const UBaseType_t uxQueueLength,
 658:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                  const UBaseType_t uxItemSize,
 659:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                  uint8_t * pucQueueStorage,
 660:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                  StaticQueue_t * pxStaticQueue,
 661:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                  const uint8_t ucQueueType ) /* FREERTOS_SYSTEM_CAL
 662:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 663:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueHandle_t xReturn;
 664:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 665:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 666:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueGenericCreateStatic( uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQu
 667:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 668:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 669:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 670:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 671:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 672:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 673:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericReset( QueueHandle_t pxQueue,
 674:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                    BaseType_t xNewQueue ) /* FREERTOS_SYSTEM_CALL */
 675:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1272              	 .loc 1 675 0
 1273              	 .cfi_startproc
 1274              	 
 1275              	 
 1276              	.LVL185:
 1277 0000 70B5     	 push {r4,r5,r6,lr}
 1278              	.LCFI35:
 1279              	 .cfi_def_cfa_offset 16
 1280              	 .cfi_offset 4,-16
 1281              	 .cfi_offset 5,-12
 1282              	 .cfi_offset 6,-8
 1283              	 .cfi_offset 14,-4
 1284 0002 0646     	 mov r6,r0
 1285 0004 0C46     	 mov r4,r1
 676:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 677:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1286              	 .loc 1 677 0
 1287 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 1288              	.LVL186:
 1289 000a 0546     	 mov r5,r0
 1290              	.LVL187:
 678:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 679:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xQueueGenericReset( pxQueue, xNewQueue );
 1291              	 .loc 1 679 0
 1292 000c 3046     	 mov r0,r6
 1293              	.LVL188:
 1294 000e 2146     	 mov r1,r4
 1295 0010 FFF7FEFF 	 bl xQueueGenericReset
 1296              	.LVL189:
 1297 0014 0446     	 mov r4,r0
 1298              	.LVL190:
 680:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1299              	 .loc 1 680 0
 1300 0016 2846     	 mov r0,r5
 1301              	.LVL191:
 1302 0018 FFF7FEFF 	 bl vPortResetPrivilege
 1303              	.LVL192:
 681:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 682:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1304              	 .loc 1 682 0
 1305 001c 2046     	 mov r0,r4
 1306 001e 70BD     	 pop {r4,r5,r6,pc}
 1307              	 .cfi_endproc
 1308              	.LFE33:
 1310              	 .section .text.MPU_xQueueGenericSend,"ax",%progbits
 1311              	 .align 2
 1312              	 .global MPU_xQueueGenericSend
 1313              	 .thumb
 1314              	 .thumb_func
 1316              	MPU_xQueueGenericSend:
 1317              	.LFB34:
 683:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 684:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 685:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericSend( QueueHandle_t xQueue,
 686:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                   const void * const pvItemToQueue,
 687:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                   TickType_t xTicksToWait,
 688:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                   BaseType_t xCopyPosition ) /* FREERTOS_SYSTEM_CALL */
 689:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1318              	 .loc 1 689 0
 1319              	 .cfi_startproc
 1320              	 
 1321              	 
 1322              	.LVL193:
 1323 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1324              	.LCFI36:
 1325              	 .cfi_def_cfa_offset 24
 1326              	 .cfi_offset 4,-24
 1327              	 .cfi_offset 5,-20
 1328              	 .cfi_offset 6,-16
 1329              	 .cfi_offset 7,-12
 1330              	 .cfi_offset 8,-8
 1331              	 .cfi_offset 14,-4
 1332 0004 8046     	 mov r8,r0
 1333 0006 0F46     	 mov r7,r1
 1334 0008 1646     	 mov r6,r2
 1335 000a 1C46     	 mov r4,r3
 690:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 691:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1336              	 .loc 1 691 0
 1337 000c FFF7FEFF 	 bl xPortRaisePrivilege
 1338              	.LVL194:
 1339 0010 0546     	 mov r5,r0
 1340              	.LVL195:
 692:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 693:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xQueueGenericSend( xQueue, pvItemToQueue, xTicksToWait, xCopyPosition );
 1341              	 .loc 1 693 0
 1342 0012 4046     	 mov r0,r8
 1343              	.LVL196:
 1344 0014 3946     	 mov r1,r7
 1345 0016 3246     	 mov r2,r6
 1346 0018 2346     	 mov r3,r4
 1347 001a FFF7FEFF 	 bl xQueueGenericSend
 1348              	.LVL197:
 1349 001e 0446     	 mov r4,r0
 1350              	.LVL198:
 694:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1351              	 .loc 1 694 0
 1352 0020 2846     	 mov r0,r5
 1353              	.LVL199:
 1354 0022 FFF7FEFF 	 bl vPortResetPrivilege
 1355              	.LVL200:
 695:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 696:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1356              	 .loc 1 696 0
 1357 0026 2046     	 mov r0,r4
 1358 0028 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1359              	 .cfi_endproc
 1360              	.LFE34:
 1362              	 .section .text.MPU_uxQueueMessagesWaiting,"ax",%progbits
 1363              	 .align 2
 1364              	 .global MPU_uxQueueMessagesWaiting
 1365              	 .thumb
 1366              	 .thumb_func
 1368              	MPU_uxQueueMessagesWaiting:
 1369              	.LFB35:
 697:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 698:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 699:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** UBaseType_t MPU_uxQueueMessagesWaiting( const QueueHandle_t pxQueue ) /* FREERTOS_SYSTEM_CALL */
 700:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1370              	 .loc 1 700 0
 1371              	 .cfi_startproc
 1372              	 
 1373              	 
 1374              	.LVL201:
 1375 0000 38B5     	 push {r3,r4,r5,lr}
 1376              	.LCFI37:
 1377              	 .cfi_def_cfa_offset 16
 1378              	 .cfi_offset 3,-16
 1379              	 .cfi_offset 4,-12
 1380              	 .cfi_offset 5,-8
 1381              	 .cfi_offset 14,-4
 1382 0002 0446     	 mov r4,r0
 701:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1383              	 .loc 1 701 0
 1384 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1385              	.LVL202:
 1386 0008 0546     	 mov r5,r0
 1387              	.LVL203:
 702:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t uxReturn;
 703:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 704:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     uxReturn = uxQueueMessagesWaiting( pxQueue );
 1388              	 .loc 1 704 0
 1389 000a 2046     	 mov r0,r4
 1390              	.LVL204:
 1391 000c FFF7FEFF 	 bl uxQueueMessagesWaiting
 1392              	.LVL205:
 1393 0010 0446     	 mov r4,r0
 1394              	.LVL206:
 705:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1395              	 .loc 1 705 0
 1396 0012 2846     	 mov r0,r5
 1397              	.LVL207:
 1398 0014 FFF7FEFF 	 bl vPortResetPrivilege
 1399              	.LVL208:
 706:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return uxReturn;
 707:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1400              	 .loc 1 707 0
 1401 0018 2046     	 mov r0,r4
 1402 001a 38BD     	 pop {r3,r4,r5,pc}
 1403              	 .cfi_endproc
 1404              	.LFE35:
 1406              	 .section .text.MPU_uxQueueSpacesAvailable,"ax",%progbits
 1407              	 .align 2
 1408              	 .global MPU_uxQueueSpacesAvailable
 1409              	 .thumb
 1410              	 .thumb_func
 1412              	MPU_uxQueueSpacesAvailable:
 1413              	.LFB36:
 708:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 709:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 710:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** UBaseType_t MPU_uxQueueSpacesAvailable( const QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 711:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1414              	 .loc 1 711 0
 1415              	 .cfi_startproc
 1416              	 
 1417              	 
 1418              	.LVL209:
 1419 0000 38B5     	 push {r3,r4,r5,lr}
 1420              	.LCFI38:
 1421              	 .cfi_def_cfa_offset 16
 1422              	 .cfi_offset 3,-16
 1423              	 .cfi_offset 4,-12
 1424              	 .cfi_offset 5,-8
 1425              	 .cfi_offset 14,-4
 1426 0002 0446     	 mov r4,r0
 712:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1427              	 .loc 1 712 0
 1428 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1429              	.LVL210:
 1430 0008 0546     	 mov r5,r0
 1431              	.LVL211:
 713:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t uxReturn;
 714:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 715:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     uxReturn = uxQueueSpacesAvailable( xQueue );
 1432              	 .loc 1 715 0
 1433 000a 2046     	 mov r0,r4
 1434              	.LVL212:
 1435 000c FFF7FEFF 	 bl uxQueueSpacesAvailable
 1436              	.LVL213:
 1437 0010 0446     	 mov r4,r0
 1438              	.LVL214:
 716:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1439              	 .loc 1 716 0
 1440 0012 2846     	 mov r0,r5
 1441              	.LVL215:
 1442 0014 FFF7FEFF 	 bl vPortResetPrivilege
 1443              	.LVL216:
 717:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return uxReturn;
 718:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1444              	 .loc 1 718 0
 1445 0018 2046     	 mov r0,r4
 1446 001a 38BD     	 pop {r3,r4,r5,pc}
 1447              	 .cfi_endproc
 1448              	.LFE36:
 1450              	 .section .text.MPU_xQueueReceive,"ax",%progbits
 1451              	 .align 2
 1452              	 .global MPU_xQueueReceive
 1453              	 .thumb
 1454              	 .thumb_func
 1456              	MPU_xQueueReceive:
 1457              	.LFB37:
 719:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 720:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 721:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueReceive( QueueHandle_t pxQueue,
 722:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                               void * const pvBuffer,
 723:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                               TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
 724:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1458              	 .loc 1 724 0
 1459              	 .cfi_startproc
 1460              	 
 1461              	 
 1462              	.LVL217:
 1463 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1464              	.LCFI39:
 1465              	 .cfi_def_cfa_offset 24
 1466              	 .cfi_offset 3,-24
 1467              	 .cfi_offset 4,-20
 1468              	 .cfi_offset 5,-16
 1469              	 .cfi_offset 6,-12
 1470              	 .cfi_offset 7,-8
 1471              	 .cfi_offset 14,-4
 1472 0002 0746     	 mov r7,r0
 1473 0004 0E46     	 mov r6,r1
 1474 0006 1446     	 mov r4,r2
 725:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1475              	 .loc 1 725 0
 1476 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 1477              	.LVL218:
 1478 000c 0546     	 mov r5,r0
 1479              	.LVL219:
 726:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 727:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 728:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xQueueReceive( pxQueue, pvBuffer, xTicksToWait );
 1480              	 .loc 1 728 0
 1481 000e 3846     	 mov r0,r7
 1482              	.LVL220:
 1483 0010 3146     	 mov r1,r6
 1484 0012 2246     	 mov r2,r4
 1485 0014 FFF7FEFF 	 bl xQueueReceive
 1486              	.LVL221:
 1487 0018 0446     	 mov r4,r0
 1488              	.LVL222:
 729:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1489              	 .loc 1 729 0
 1490 001a 2846     	 mov r0,r5
 1491              	.LVL223:
 1492 001c FFF7FEFF 	 bl vPortResetPrivilege
 1493              	.LVL224:
 730:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 731:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1494              	 .loc 1 731 0
 1495 0020 2046     	 mov r0,r4
 1496 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1497              	 .cfi_endproc
 1498              	.LFE37:
 1500              	 .section .text.MPU_xQueuePeek,"ax",%progbits
 1501              	 .align 2
 1502              	 .global MPU_xQueuePeek
 1503              	 .thumb
 1504              	 .thumb_func
 1506              	MPU_xQueuePeek:
 1507              	.LFB38:
 732:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 733:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 734:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueuePeek( QueueHandle_t xQueue,
 735:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                            void * const pvBuffer,
 736:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                            TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
 737:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1508              	 .loc 1 737 0
 1509              	 .cfi_startproc
 1510              	 
 1511              	 
 1512              	.LVL225:
 1513 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1514              	.LCFI40:
 1515              	 .cfi_def_cfa_offset 24
 1516              	 .cfi_offset 3,-24
 1517              	 .cfi_offset 4,-20
 1518              	 .cfi_offset 5,-16
 1519              	 .cfi_offset 6,-12
 1520              	 .cfi_offset 7,-8
 1521              	 .cfi_offset 14,-4
 1522 0002 0746     	 mov r7,r0
 1523 0004 0E46     	 mov r6,r1
 1524 0006 1446     	 mov r4,r2
 738:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1525              	 .loc 1 738 0
 1526 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 1527              	.LVL226:
 1528 000c 0546     	 mov r5,r0
 1529              	.LVL227:
 739:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 740:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 741:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xQueuePeek( xQueue, pvBuffer, xTicksToWait );
 1530              	 .loc 1 741 0
 1531 000e 3846     	 mov r0,r7
 1532              	.LVL228:
 1533 0010 3146     	 mov r1,r6
 1534 0012 2246     	 mov r2,r4
 1535 0014 FFF7FEFF 	 bl xQueuePeek
 1536              	.LVL229:
 1537 0018 0446     	 mov r4,r0
 1538              	.LVL230:
 742:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1539              	 .loc 1 742 0
 1540 001a 2846     	 mov r0,r5
 1541              	.LVL231:
 1542 001c FFF7FEFF 	 bl vPortResetPrivilege
 1543              	.LVL232:
 743:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 744:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1544              	 .loc 1 744 0
 1545 0020 2046     	 mov r0,r4
 1546 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1547              	 .cfi_endproc
 1548              	.LFE38:
 1550              	 .section .text.MPU_xQueueSemaphoreTake,"ax",%progbits
 1551              	 .align 2
 1552              	 .global MPU_xQueueSemaphoreTake
 1553              	 .thumb
 1554              	 .thumb_func
 1556              	MPU_xQueueSemaphoreTake:
 1557              	.LFB39:
 745:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 746:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 747:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueSemaphoreTake( QueueHandle_t xQueue,
 748:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                     TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
 749:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1558              	 .loc 1 749 0
 1559              	 .cfi_startproc
 1560              	 
 1561              	 
 1562              	.LVL233:
 1563 0000 70B5     	 push {r4,r5,r6,lr}
 1564              	.LCFI41:
 1565              	 .cfi_def_cfa_offset 16
 1566              	 .cfi_offset 4,-16
 1567              	 .cfi_offset 5,-12
 1568              	 .cfi_offset 6,-8
 1569              	 .cfi_offset 14,-4
 1570 0002 0646     	 mov r6,r0
 1571 0004 0C46     	 mov r4,r1
 750:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1572              	 .loc 1 750 0
 1573 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 1574              	.LVL234:
 1575 000a 0546     	 mov r5,r0
 1576              	.LVL235:
 751:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
 752:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 753:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xQueueSemaphoreTake( xQueue, xTicksToWait );
 1577              	 .loc 1 753 0
 1578 000c 3046     	 mov r0,r6
 1579              	.LVL236:
 1580 000e 2146     	 mov r1,r4
 1581 0010 FFF7FEFF 	 bl xQueueSemaphoreTake
 1582              	.LVL237:
 1583 0014 0446     	 mov r4,r0
 1584              	.LVL238:
 754:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1585              	 .loc 1 754 0
 1586 0016 2846     	 mov r0,r5
 1587              	.LVL239:
 1588 0018 FFF7FEFF 	 bl vPortResetPrivilege
 1589              	.LVL240:
 755:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
 756:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 1590              	 .loc 1 756 0
 1591 001c 2046     	 mov r0,r4
 1592 001e 70BD     	 pop {r4,r5,r6,pc}
 1593              	 .cfi_endproc
 1594              	.LFE39:
 1596              	 .section .text.MPU_xQueueCreateMutex,"ax",%progbits
 1597              	 .align 2
 1598              	 .global MPU_xQueueCreateMutex
 1599              	 .thumb
 1600              	 .thumb_func
 1602              	MPU_xQueueCreateMutex:
 1603              	.LFB40:
 757:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 758:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 759:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 760:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHandle_t MPU_xQueueGetMutexHolder( QueueHandle_t xSemaphore ) /* FREERTOS_SYSTEM_CALL */
 761:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 762:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 763:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         void * xReturn;
 764:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 765:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueGetMutexHolder( xSemaphore );
 766:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 767:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 768:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 769:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 770:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 771:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 772:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 773:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueHandle_t MPU_xQueueCreateMutex( const uint8_t ucQueueType ) /* FREERTOS_SYSTEM_CALL */
 774:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1604              	 .loc 1 774 0
 1605              	 .cfi_startproc
 1606              	 
 1607              	 
 1608              	.LVL241:
 1609 0000 38B5     	 push {r3,r4,r5,lr}
 1610              	.LCFI42:
 1611              	 .cfi_def_cfa_offset 16
 1612              	 .cfi_offset 3,-16
 1613              	 .cfi_offset 4,-12
 1614              	 .cfi_offset 5,-8
 1615              	 .cfi_offset 14,-4
 1616 0002 0446     	 mov r4,r0
 775:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueHandle_t xReturn;
 776:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1617              	 .loc 1 776 0
 1618 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1619              	.LVL242:
 1620 0008 0546     	 mov r5,r0
 1621              	.LVL243:
 777:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 778:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueCreateMutex( ucQueueType );
 1622              	 .loc 1 778 0
 1623 000a 2046     	 mov r0,r4
 1624              	.LVL244:
 1625 000c FFF7FEFF 	 bl xQueueCreateMutex
 1626              	.LVL245:
 1627 0010 0446     	 mov r4,r0
 1628              	.LVL246:
 779:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1629              	 .loc 1 779 0
 1630 0012 2846     	 mov r0,r5
 1631              	.LVL247:
 1632 0014 FFF7FEFF 	 bl vPortResetPrivilege
 1633              	.LVL248:
 780:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 781:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1634              	 .loc 1 781 0
 1635 0018 2046     	 mov r0,r4
 1636 001a 38BD     	 pop {r3,r4,r5,pc}
 1637              	 .cfi_endproc
 1638              	.LFE40:
 1640              	 .section .text.MPU_xQueueCreateCountingSemaphore,"ax",%progbits
 1641              	 .align 2
 1642              	 .global MPU_xQueueCreateCountingSemaphore
 1643              	 .thumb
 1644              	 .thumb_func
 1646              	MPU_xQueueCreateCountingSemaphore:
 1647              	.LFB41:
 782:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 783:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 784:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 785:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 786:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueHandle_t MPU_xQueueCreateMutexStatic( const uint8_t ucQueueType,
 787:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                StaticQueue_t * pxStaticQueue ) /* FREERTOS_SYSTEM_C
 788:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 789:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueHandle_t xReturn;
 790:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 791:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 792:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueCreateMutexStatic( ucQueueType, pxStaticQueue );
 793:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 794:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 795:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 796:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) ) */
 797:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 798:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 799:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 800:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueHandle_t MPU_xQueueCreateCountingSemaphore( UBaseType_t uxCountValue,
 801:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                      UBaseType_t uxInitialCount ) /* FREERTOS_SYSTE
 802:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1648              	 .loc 1 802 0
 1649              	 .cfi_startproc
 1650              	 
 1651              	 
 1652              	.LVL249:
 1653 0000 70B5     	 push {r4,r5,r6,lr}
 1654              	.LCFI43:
 1655              	 .cfi_def_cfa_offset 16
 1656              	 .cfi_offset 4,-16
 1657              	 .cfi_offset 5,-12
 1658              	 .cfi_offset 6,-8
 1659              	 .cfi_offset 14,-4
 1660 0002 0646     	 mov r6,r0
 1661 0004 0C46     	 mov r4,r1
 803:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueHandle_t xReturn;
 804:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1662              	 .loc 1 804 0
 1663 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 1664              	.LVL250:
 1665 000a 0546     	 mov r5,r0
 1666              	.LVL251:
 805:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 806:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueCreateCountingSemaphore( uxCountValue, uxInitialCount );
 1667              	 .loc 1 806 0
 1668 000c 3046     	 mov r0,r6
 1669              	.LVL252:
 1670 000e 2146     	 mov r1,r4
 1671 0010 FFF7FEFF 	 bl xQueueCreateCountingSemaphore
 1672              	.LVL253:
 1673 0014 0446     	 mov r4,r0
 1674              	.LVL254:
 807:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1675              	 .loc 1 807 0
 1676 0016 2846     	 mov r0,r5
 1677              	.LVL255:
 1678 0018 FFF7FEFF 	 bl vPortResetPrivilege
 1679              	.LVL256:
 808:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 809:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1680              	 .loc 1 809 0
 1681 001c 2046     	 mov r0,r4
 1682 001e 70BD     	 pop {r4,r5,r6,pc}
 1683              	 .cfi_endproc
 1684              	.LFE41:
 1686              	 .section .text.MPU_xQueueTakeMutexRecursive,"ax",%progbits
 1687              	 .align 2
 1688              	 .global MPU_xQueueTakeMutexRecursive
 1689              	 .thumb
 1690              	 .thumb_func
 1692              	MPU_xQueueTakeMutexRecursive:
 1693              	.LFB42:
 810:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) 
 811:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 812:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 813:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 814:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 815:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueHandle_t MPU_xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount,
 816:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                            const UBaseType_t uxInitialCount,
 817:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                            StaticQueue_t * pxStaticQueue ) /* FREER
 818:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 819:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueHandle_t xReturn;
 820:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 821:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 822:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueCreateCountingSemaphoreStatic( uxMaxCount, uxInitialCount, pxStaticQueue );
 823:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 824:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 825:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 826:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 827:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 828:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 829:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 830:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xQueueTakeMutexRecursive( QueueHandle_t xMutex,
 831:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                              TickType_t xBlockTime ) /* FREERTOS_SYSTEM_CALL */
 832:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1694              	 .loc 1 832 0
 1695              	 .cfi_startproc
 1696              	 
 1697              	 
 1698              	.LVL257:
 1699 0000 70B5     	 push {r4,r5,r6,lr}
 1700              	.LCFI44:
 1701              	 .cfi_def_cfa_offset 16
 1702              	 .cfi_offset 4,-16
 1703              	 .cfi_offset 5,-12
 1704              	 .cfi_offset 6,-8
 1705              	 .cfi_offset 14,-4
 1706 0002 0646     	 mov r6,r0
 1707 0004 0C46     	 mov r4,r1
 833:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 834:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1708              	 .loc 1 834 0
 1709 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 1710              	.LVL258:
 1711 000a 0546     	 mov r5,r0
 1712              	.LVL259:
 835:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 836:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueTakeMutexRecursive( xMutex, xBlockTime );
 1713              	 .loc 1 836 0
 1714 000c 3046     	 mov r0,r6
 1715              	.LVL260:
 1716 000e 2146     	 mov r1,r4
 1717 0010 FFF7FEFF 	 bl xQueueTakeMutexRecursive
 1718              	.LVL261:
 1719 0014 0446     	 mov r4,r0
 1720              	.LVL262:
 837:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1721              	 .loc 1 837 0
 1722 0016 2846     	 mov r0,r5
 1723              	.LVL263:
 1724 0018 FFF7FEFF 	 bl vPortResetPrivilege
 1725              	.LVL264:
 838:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 839:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1726              	 .loc 1 839 0
 1727 001c 2046     	 mov r0,r4
 1728 001e 70BD     	 pop {r4,r5,r6,pc}
 1729              	 .cfi_endproc
 1730              	.LFE42:
 1732              	 .section .text.MPU_xQueueGiveMutexRecursive,"ax",%progbits
 1733              	 .align 2
 1734              	 .global MPU_xQueueGiveMutexRecursive
 1735              	 .thumb
 1736              	 .thumb_func
 1738              	MPU_xQueueGiveMutexRecursive:
 1739              	.LFB43:
 840:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_RECURSIVE_MUTEXES == 1 ) */
 841:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 842:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 843:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 844:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xQueueGiveMutexRecursive( QueueHandle_t xMutex ) /* FREERTOS_SYSTEM_CALL */
 845:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1740              	 .loc 1 845 0
 1741              	 .cfi_startproc
 1742              	 
 1743              	 
 1744              	.LVL265:
 1745 0000 38B5     	 push {r3,r4,r5,lr}
 1746              	.LCFI45:
 1747              	 .cfi_def_cfa_offset 16
 1748              	 .cfi_offset 3,-16
 1749              	 .cfi_offset 4,-12
 1750              	 .cfi_offset 5,-8
 1751              	 .cfi_offset 14,-4
 1752 0002 0446     	 mov r4,r0
 846:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 847:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1753              	 .loc 1 847 0
 1754 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1755              	.LVL266:
 1756 0008 0546     	 mov r5,r0
 1757              	.LVL267:
 848:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 849:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueGiveMutexRecursive( xMutex );
 1758              	 .loc 1 849 0
 1759 000a 2046     	 mov r0,r4
 1760              	.LVL268:
 1761 000c FFF7FEFF 	 bl xQueueGiveMutexRecursive
 1762              	.LVL269:
 1763 0010 0446     	 mov r4,r0
 1764              	.LVL270:
 850:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1765              	 .loc 1 850 0
 1766 0012 2846     	 mov r0,r5
 1767              	.LVL271:
 1768 0014 FFF7FEFF 	 bl vPortResetPrivilege
 1769              	.LVL272:
 851:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 852:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1770              	 .loc 1 852 0
 1771 0018 2046     	 mov r0,r4
 1772 001a 38BD     	 pop {r3,r4,r5,pc}
 1773              	 .cfi_endproc
 1774              	.LFE43:
 1776              	 .section .text.MPU_vQueueAddToRegistry,"ax",%progbits
 1777              	 .align 2
 1778              	 .global MPU_vQueueAddToRegistry
 1779              	 .thumb
 1780              	 .thumb_func
 1782              	MPU_vQueueAddToRegistry:
 1783              	.LFB44:
 853:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 854:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 855:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 856:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_QUEUE_SETS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 857:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueSetHandle_t MPU_xQueueCreateSet( UBaseType_t uxEventQueueLength ) /* FREERTOS_SYSTEM_CALL 
 858:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 859:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueSetHandle_t xReturn;
 860:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 861:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 862:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueCreateSet( uxEventQueueLength );
 863:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 864:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 865:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 866:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 867:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 868:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 869:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 870:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     QueueSetMemberHandle_t MPU_xQueueSelectFromSet( QueueSetHandle_t xQueueSet,
 871:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                     TickType_t xBlockTimeTicks ) /* FREERTOS_SYSTEM
 872:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 873:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         QueueSetMemberHandle_t xReturn;
 874:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 875:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 876:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueSelectFromSet( xQueueSet, xBlockTimeTicks );
 877:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 878:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 879:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 880:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_QUEUE_SETS == 1 ) */
 881:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 882:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 883:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 884:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore,
 885:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                    QueueSetHandle_t xQueueSet ) /* FREERTOS_SYSTEM_CALL */
 886:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 887:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 888:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 889:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 890:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueAddToSet( xQueueOrSemaphore, xQueueSet );
 891:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 892:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 893:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 894:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_QUEUE_SETS == 1 ) */
 895:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 896:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 897:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 898:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore,
 899:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                         QueueSetHandle_t xQueueSet ) /* FREERTOS_SYSTEM_CALL */
 900:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 901:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
 902:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 903:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 904:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xQueueRemoveFromSet( xQueueOrSemaphore, xQueueSet );
 905:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 906:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 907:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 908:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_QUEUE_SETS == 1 ) */
 909:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 910:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 911:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 912:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vQueueAddToRegistry( QueueHandle_t xQueue,
 913:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                   const char * pcName ) /* FREERTOS_SYSTEM_CALL */
 914:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1784              	 .loc 1 914 0
 1785              	 .cfi_startproc
 1786              	 
 1787              	 
 1788              	.LVL273:
 1789 0000 70B5     	 push {r4,r5,r6,lr}
 1790              	.LCFI46:
 1791              	 .cfi_def_cfa_offset 16
 1792              	 .cfi_offset 4,-16
 1793              	 .cfi_offset 5,-12
 1794              	 .cfi_offset 6,-8
 1795              	 .cfi_offset 14,-4
 1796 0002 0646     	 mov r6,r0
 1797 0004 0D46     	 mov r5,r1
 915:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1798              	 .loc 1 915 0
 1799 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 1800              	.LVL274:
 1801 000a 0446     	 mov r4,r0
 1802              	.LVL275:
 916:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 917:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vQueueAddToRegistry( xQueue, pcName );
 1803              	 .loc 1 917 0
 1804 000c 3046     	 mov r0,r6
 1805              	.LVL276:
 1806 000e 2946     	 mov r1,r5
 1807 0010 FFF7FEFF 	 bl vQueueAddToRegistry
 1808              	.LVL277:
 918:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 919:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1809              	 .loc 1 919 0
 1810 0014 2046     	 mov r0,r4
 1811 0016 FFF7FEFF 	 bl vPortResetPrivilege
 1812              	.LVL278:
 1813 001a 70BD     	 pop {r4,r5,r6,pc}
 1814              	 .cfi_endproc
 1815              	.LFE44:
 1817              	 .section .text.MPU_vQueueUnregisterQueue,"ax",%progbits
 1818              	 .align 2
 1819              	 .global MPU_vQueueUnregisterQueue
 1820              	 .thumb
 1821              	 .thumb_func
 1823              	MPU_vQueueUnregisterQueue:
 1824              	.LFB45:
 920:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 921:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 922:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 923:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 924:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 925:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vQueueUnregisterQueue( QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 926:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1825              	 .loc 1 926 0
 1826              	 .cfi_startproc
 1827              	 
 1828              	 
 1829              	.LVL279:
 1830 0000 38B5     	 push {r3,r4,r5,lr}
 1831              	.LCFI47:
 1832              	 .cfi_def_cfa_offset 16
 1833              	 .cfi_offset 3,-16
 1834              	 .cfi_offset 4,-12
 1835              	 .cfi_offset 5,-8
 1836              	 .cfi_offset 14,-4
 1837 0002 0546     	 mov r5,r0
 927:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1838              	 .loc 1 927 0
 1839 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1840              	.LVL280:
 1841 0008 0446     	 mov r4,r0
 1842              	.LVL281:
 928:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 929:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vQueueUnregisterQueue( xQueue );
 1843              	 .loc 1 929 0
 1844 000a 2846     	 mov r0,r5
 1845              	.LVL282:
 1846 000c FFF7FEFF 	 bl vQueueUnregisterQueue
 1847              	.LVL283:
 930:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 931:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1848              	 .loc 1 931 0
 1849 0010 2046     	 mov r0,r4
 1850 0012 FFF7FEFF 	 bl vPortResetPrivilege
 1851              	.LVL284:
 1852 0016 38BD     	 pop {r3,r4,r5,pc}
 1853              	 .cfi_endproc
 1854              	.LFE45:
 1856              	 .section .text.MPU_pcQueueGetName,"ax",%progbits
 1857              	 .align 2
 1858              	 .global MPU_pcQueueGetName
 1859              	 .thumb
 1860              	 .thumb_func
 1862              	MPU_pcQueueGetName:
 1863              	.LFB46:
 932:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 933:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
 934:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 935:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 936:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 937:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     const char * MPU_pcQueueGetName( QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 938:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1864              	 .loc 1 938 0
 1865              	 .cfi_startproc
 1866              	 
 1867              	 
 1868              	.LVL285:
 1869 0000 38B5     	 push {r3,r4,r5,lr}
 1870              	.LCFI48:
 1871              	 .cfi_def_cfa_offset 16
 1872              	 .cfi_offset 3,-16
 1873              	 .cfi_offset 4,-12
 1874              	 .cfi_offset 5,-8
 1875              	 .cfi_offset 14,-4
 1876 0002 0446     	 mov r4,r0
 939:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1877              	 .loc 1 939 0
 1878 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1879              	.LVL286:
 1880 0008 0546     	 mov r5,r0
 1881              	.LVL287:
 940:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         const char * pcReturn;
 941:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 942:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         pcReturn = pcQueueGetName( xQueue );
 1882              	 .loc 1 942 0
 1883 000a 2046     	 mov r0,r4
 1884              	.LVL288:
 1885 000c FFF7FEFF 	 bl pcQueueGetName
 1886              	.LVL289:
 1887 0010 0446     	 mov r4,r0
 1888              	.LVL290:
 943:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 944:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1889              	 .loc 1 944 0
 1890 0012 2846     	 mov r0,r5
 1891              	.LVL291:
 1892 0014 FFF7FEFF 	 bl vPortResetPrivilege
 1893              	.LVL292:
 945:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return pcReturn;
 946:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 1894              	 .loc 1 946 0
 1895 0018 2046     	 mov r0,r4
 1896 001a 38BD     	 pop {r3,r4,r5,pc}
 1897              	 .cfi_endproc
 1898              	.LFE46:
 1900              	 .section .text.MPU_vQueueDelete,"ax",%progbits
 1901              	 .align 2
 1902              	 .global MPU_vQueueDelete
 1903              	 .thumb
 1904              	 .thumb_func
 1906              	MPU_vQueueDelete:
 1907              	.LFB47:
 947:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if configQUEUE_REGISTRY_SIZE > 0 */
 948:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 949:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 950:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void MPU_vQueueDelete( QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 951:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 1908              	 .loc 1 951 0
 1909              	 .cfi_startproc
 1910              	 
 1911              	 
 1912              	.LVL293:
 1913 0000 38B5     	 push {r3,r4,r5,lr}
 1914              	.LCFI49:
 1915              	 .cfi_def_cfa_offset 16
 1916              	 .cfi_offset 3,-16
 1917              	 .cfi_offset 4,-12
 1918              	 .cfi_offset 5,-8
 1919              	 .cfi_offset 14,-4
 1920 0002 0546     	 mov r5,r0
 952:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1921              	 .loc 1 952 0
 1922 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 1923              	.LVL294:
 1924 0008 0446     	 mov r4,r0
 1925              	.LVL295:
 953:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 954:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vQueueDelete( xQueue );
 1926              	 .loc 1 954 0
 1927 000a 2846     	 mov r0,r5
 1928              	.LVL296:
 1929 000c FFF7FEFF 	 bl vQueueDelete
 1930              	.LVL297:
 955:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 956:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 1931              	 .loc 1 956 0
 1932 0010 2046     	 mov r0,r4
 1933 0012 FFF7FEFF 	 bl vPortResetPrivilege
 1934              	.LVL298:
 1935 0016 38BD     	 pop {r3,r4,r5,pc}
 1936              	 .cfi_endproc
 1937              	.LFE47:
 1939              	 .section .text.MPU_vPortInitialiseBlocks,"ax",%progbits
 1940              	 .align 2
 1941              	 .global MPU_vPortInitialiseBlocks
 1942              	 .thumb
 1943              	 .thumb_func
 1945              	MPU_vPortInitialiseBlocks:
 1946              	.LFB48:
 957:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 958:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 959:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 960:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 961:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vPortInitialiseBlocks( void ) /* FREERTOS_SYSTEM_CALL */
 962:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1947              	 .loc 1 962 0
 1948              	 .cfi_startproc
 1949              	 
 1950              	 
 1951 0000 10B5     	 push {r4,lr}
 1952              	.LCFI50:
 1953              	 .cfi_def_cfa_offset 8
 1954              	 .cfi_offset 4,-8
 1955              	 .cfi_offset 14,-4
 963:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1956              	 .loc 1 963 0
 1957 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 1958              	.LVL299:
 1959 0006 0446     	 mov r4,r0
 1960              	.LVL300:
 964:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 965:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortInitialiseBlocks();
 1961              	 .loc 1 965 0
 1962 0008 FFF7FEFF 	 bl vPortInitialiseBlocks
 1963              	.LVL301:
 966:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 967:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 1964              	 .loc 1 967 0
 1965 000c 2046     	 mov r0,r4
 1966 000e FFF7FEFF 	 bl vPortResetPrivilege
 1967              	.LVL302:
 1968 0012 10BD     	 pop {r4,pc}
 1969              	 .cfi_endproc
 1970              	.LFE48:
 1972              	 .section .text.MPU_xPortGetFreeHeapSize,"ax",%progbits
 1973              	 .align 2
 1974              	 .global MPU_xPortGetFreeHeapSize
 1975              	 .thumb
 1976              	 .thumb_func
 1978              	MPU_xPortGetFreeHeapSize:
 1979              	.LFB49:
 968:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 969:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 970:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 971:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 972:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 973:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     size_t MPU_xPortGetFreeHeapSize( void ) /* FREERTOS_SYSTEM_CALL */
 974:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 1980              	 .loc 1 974 0
 1981              	 .cfi_startproc
 1982              	 
 1983              	 
 1984 0000 38B5     	 push {r3,r4,r5,lr}
 1985              	.LCFI51:
 1986              	 .cfi_def_cfa_offset 16
 1987              	 .cfi_offset 3,-16
 1988              	 .cfi_offset 4,-12
 1989              	 .cfi_offset 5,-8
 1990              	 .cfi_offset 14,-4
 975:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         size_t xReturn;
 976:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1991              	 .loc 1 976 0
 1992 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 1993              	.LVL303:
 1994 0006 0546     	 mov r5,r0
 1995              	.LVL304:
 977:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 978:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xPortGetFreeHeapSize();
 1996              	 .loc 1 978 0
 1997 0008 FFF7FEFF 	 bl xPortGetFreeHeapSize
 1998              	.LVL305:
 1999 000c 0446     	 mov r4,r0
 2000              	.LVL306:
 979:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 980:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2001              	 .loc 1 980 0
 2002 000e 2846     	 mov r0,r5
 2003              	.LVL307:
 2004 0010 FFF7FEFF 	 bl vPortResetPrivilege
 2005              	.LVL308:
 981:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 982:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
 983:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2006              	 .loc 1 983 0
 2007 0014 2046     	 mov r0,r4
 2008 0016 38BD     	 pop {r3,r4,r5,pc}
 2009              	 .cfi_endproc
 2010              	.LFE49:
 2012              	 .section .text.MPU_xTimerCreate,"ax",%progbits
 2013              	 .align 2
 2014              	 .global MPU_xTimerCreate
 2015              	 .thumb
 2016              	 .thumb_func
 2018              	MPU_xTimerCreate:
 2019              	.LFB50:
 984:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 985:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 986:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 987:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) )
 988:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TimerHandle_t MPU_xTimerCreate( const char * const pcTimerName,
 989:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                     const TickType_t xTimerPeriodInTicks,
 990:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                     const UBaseType_t uxAutoReload,
 991:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                     void * const pvTimerID,
 992:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                     TimerCallbackFunction_t pxCallbackFunction ) /* FREERTOS_SYSTEM
 993:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2020              	 .loc 1 993 0
 2021              	 .cfi_startproc
 2022              	 
 2023              	 
 2024              	.LVL309:
 2025 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 2026              	.LCFI52:
 2027              	 .cfi_def_cfa_offset 24
 2028              	 .cfi_offset 4,-24
 2029              	 .cfi_offset 5,-20
 2030              	 .cfi_offset 6,-16
 2031              	 .cfi_offset 7,-12
 2032              	 .cfi_offset 8,-8
 2033              	 .cfi_offset 14,-4
 2034 0004 82B0     	 sub sp,sp,#8
 2035              	.LCFI53:
 2036              	 .cfi_def_cfa_offset 32
 2037 0006 8046     	 mov r8,r0
 2038 0008 0F46     	 mov r7,r1
 2039 000a 1646     	 mov r6,r2
 2040 000c 1C46     	 mov r4,r3
 994:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TimerHandle_t xReturn;
 995:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2041              	 .loc 1 995 0
 2042 000e FFF7FEFF 	 bl xPortRaisePrivilege
 2043              	.LVL310:
 2044 0012 0546     	 mov r5,r0
 2045              	.LVL311:
 996:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
 997:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerCreate( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallba
 2046              	 .loc 1 997 0
 2047 0014 089B     	 ldr r3,[sp,#32]
 2048 0016 0093     	 str r3,[sp]
 2049 0018 4046     	 mov r0,r8
 2050              	.LVL312:
 2051 001a 3946     	 mov r1,r7
 2052 001c 3246     	 mov r2,r6
 2053 001e 2346     	 mov r3,r4
 2054 0020 FFF7FEFF 	 bl xTimerCreate
 2055              	.LVL313:
 2056 0024 0446     	 mov r4,r0
 2057              	.LVL314:
 998:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2058              	 .loc 1 998 0
 2059 0026 2846     	 mov r0,r5
 2060              	.LVL315:
 2061 0028 FFF7FEFF 	 bl vPortResetPrivilege
 2062              	.LVL316:
 999:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1000:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1001:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2063              	 .loc 1 1001 0
 2064 002c 2046     	 mov r0,r4
 2065 002e 02B0     	 add sp,sp,#8
 2066              	.LCFI54:
 2067              	 .cfi_def_cfa_offset 24
 2068              	 
 2069 0030 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 2070              	 .cfi_endproc
 2071              	.LFE50:
 2073              	 .section .text.MPU_pvTimerGetTimerID,"ax",%progbits
 2074              	 .align 2
 2075              	 .global MPU_pvTimerGetTimerID
 2076              	 .thumb
 2077              	 .thumb_func
 2079              	MPU_pvTimerGetTimerID:
 2080              	.LFB51:
1002:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) ) */
1003:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1004:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1005:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) )
1006:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TimerHandle_t MPU_xTimerCreateStatic( const char * const pcTimerName,
1007:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           const TickType_t xTimerPeriodInTicks,
1008:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           const UBaseType_t uxAutoReload,
1009:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           void * const pvTimerID,
1010:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
1011:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                           StaticTimer_t * pxTimerBuffer ) /* FREERTOS_SYSTEM_CALL *
1012:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
1013:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TimerHandle_t xReturn;
1014:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1015:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1016:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerCreateStatic( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, px
1017:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
1018:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1019:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1020:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
1021:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) ) */
1022:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1023:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1024:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1025:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void * MPU_pvTimerGetTimerID( const TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1026:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2081              	 .loc 1 1026 0
 2082              	 .cfi_startproc
 2083              	 
 2084              	 
 2085              	.LVL317:
 2086 0000 38B5     	 push {r3,r4,r5,lr}
 2087              	.LCFI55:
 2088              	 .cfi_def_cfa_offset 16
 2089              	 .cfi_offset 3,-16
 2090              	 .cfi_offset 4,-12
 2091              	 .cfi_offset 5,-8
 2092              	 .cfi_offset 14,-4
 2093 0002 0446     	 mov r4,r0
1027:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         void * pvReturn;
1028:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2094              	 .loc 1 1028 0
 2095 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2096              	.LVL318:
 2097 0008 0546     	 mov r5,r0
 2098              	.LVL319:
1029:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1030:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         pvReturn = pvTimerGetTimerID( xTimer );
 2099              	 .loc 1 1030 0
 2100 000a 2046     	 mov r0,r4
 2101              	.LVL320:
 2102 000c FFF7FEFF 	 bl pvTimerGetTimerID
 2103              	.LVL321:
 2104 0010 0446     	 mov r4,r0
 2105              	.LVL322:
1031:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2106              	 .loc 1 1031 0
 2107 0012 2846     	 mov r0,r5
 2108              	.LVL323:
 2109 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2110              	.LVL324:
1032:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1033:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return pvReturn;
1034:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2111              	 .loc 1 1034 0
 2112 0018 2046     	 mov r0,r4
 2113 001a 38BD     	 pop {r3,r4,r5,pc}
 2114              	 .cfi_endproc
 2115              	.LFE51:
 2117              	 .section .text.MPU_vTimerSetTimerID,"ax",%progbits
 2118              	 .align 2
 2119              	 .global MPU_vTimerSetTimerID
 2120              	 .thumb
 2121              	 .thumb_func
 2123              	MPU_vTimerSetTimerID:
 2124              	.LFB52:
1035:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1036:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1037:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1038:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1039:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTimerSetTimerID( TimerHandle_t xTimer,
1040:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                void * pvNewID ) /* FREERTOS_SYSTEM_CALL */
1041:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2125              	 .loc 1 1041 0
 2126              	 .cfi_startproc
 2127              	 
 2128              	 
 2129              	.LVL325:
 2130 0000 70B5     	 push {r4,r5,r6,lr}
 2131              	.LCFI56:
 2132              	 .cfi_def_cfa_offset 16
 2133              	 .cfi_offset 4,-16
 2134              	 .cfi_offset 5,-12
 2135              	 .cfi_offset 6,-8
 2136              	 .cfi_offset 14,-4
 2137 0002 0646     	 mov r6,r0
 2138 0004 0D46     	 mov r5,r1
1042:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2139              	 .loc 1 1042 0
 2140 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 2141              	.LVL326:
 2142 000a 0446     	 mov r4,r0
 2143              	.LVL327:
1043:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1044:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTimerSetTimerID( xTimer, pvNewID );
 2144              	 .loc 1 1044 0
 2145 000c 3046     	 mov r0,r6
 2146              	.LVL328:
 2147 000e 2946     	 mov r1,r5
 2148 0010 FFF7FEFF 	 bl vTimerSetTimerID
 2149              	.LVL329:
1045:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2150              	 .loc 1 1045 0
 2151 0014 2046     	 mov r0,r4
 2152 0016 FFF7FEFF 	 bl vPortResetPrivilege
 2153              	.LVL330:
 2154 001a 70BD     	 pop {r4,r5,r6,pc}
 2155              	 .cfi_endproc
 2156              	.LFE52:
 2158              	 .section .text.MPU_xTimerIsTimerActive,"ax",%progbits
 2159              	 .align 2
 2160              	 .global MPU_xTimerIsTimerActive
 2161              	 .thumb
 2162              	 .thumb_func
 2164              	MPU_xTimerIsTimerActive:
 2165              	.LFB53:
1046:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
1047:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
1048:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1049:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1050:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1051:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTimerIsTimerActive( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1052:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2166              	 .loc 1 1052 0
 2167              	 .cfi_startproc
 2168              	 
 2169              	 
 2170              	.LVL331:
 2171 0000 38B5     	 push {r3,r4,r5,lr}
 2172              	.LCFI57:
 2173              	 .cfi_def_cfa_offset 16
 2174              	 .cfi_offset 3,-16
 2175              	 .cfi_offset 4,-12
 2176              	 .cfi_offset 5,-8
 2177              	 .cfi_offset 14,-4
 2178 0002 0446     	 mov r4,r0
1053:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
1054:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2179              	 .loc 1 1054 0
 2180 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2181              	.LVL332:
 2182 0008 0546     	 mov r5,r0
 2183              	.LVL333:
1055:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1056:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerIsTimerActive( xTimer );
 2184              	 .loc 1 1056 0
 2185 000a 2046     	 mov r0,r4
 2186              	.LVL334:
 2187 000c FFF7FEFF 	 bl xTimerIsTimerActive
 2188              	.LVL335:
 2189 0010 0446     	 mov r4,r0
 2190              	.LVL336:
1057:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2191              	 .loc 1 1057 0
 2192 0012 2846     	 mov r0,r5
 2193              	.LVL337:
 2194 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2195              	.LVL338:
1058:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1059:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1060:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2196              	 .loc 1 1060 0
 2197 0018 2046     	 mov r0,r4
 2198 001a 38BD     	 pop {r3,r4,r5,pc}
 2199              	 .cfi_endproc
 2200              	.LFE53:
 2202              	 .section .text.MPU_xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 2203              	 .align 2
 2204              	 .global MPU_xTimerGetTimerDaemonTaskHandle
 2205              	 .thumb
 2206              	 .thumb_func
 2208              	MPU_xTimerGetTimerDaemonTaskHandle:
 2209              	.LFB54:
1061:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1062:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1063:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1064:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1065:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TaskHandle_t MPU_xTimerGetTimerDaemonTaskHandle( void ) /* FREERTOS_SYSTEM_CALL */
1066:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2210              	 .loc 1 1066 0
 2211              	 .cfi_startproc
 2212              	 
 2213              	 
 2214 0000 38B5     	 push {r3,r4,r5,lr}
 2215              	.LCFI58:
 2216              	 .cfi_def_cfa_offset 16
 2217              	 .cfi_offset 3,-16
 2218              	 .cfi_offset 4,-12
 2219              	 .cfi_offset 5,-8
 2220              	 .cfi_offset 14,-4
1067:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TaskHandle_t xReturn;
1068:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2221              	 .loc 1 1068 0
 2222 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 2223              	.LVL339:
 2224 0006 0546     	 mov r5,r0
 2225              	.LVL340:
1069:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1070:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerGetTimerDaemonTaskHandle();
 2226              	 .loc 1 1070 0
 2227 0008 FFF7FEFF 	 bl xTimerGetTimerDaemonTaskHandle
 2228              	.LVL341:
 2229 000c 0446     	 mov r4,r0
 2230              	.LVL342:
1071:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2231              	 .loc 1 1071 0
 2232 000e 2846     	 mov r0,r5
 2233              	.LVL343:
 2234 0010 FFF7FEFF 	 bl vPortResetPrivilege
 2235              	.LVL344:
1072:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1073:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1074:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2236              	 .loc 1 1074 0
 2237 0014 2046     	 mov r0,r4
 2238 0016 38BD     	 pop {r3,r4,r5,pc}
 2239              	 .cfi_endproc
 2240              	.LFE54:
 2242              	 .section .text.MPU_vTimerSetReloadMode,"ax",%progbits
 2243              	 .align 2
 2244              	 .global MPU_vTimerSetReloadMode
 2245              	 .thumb
 2246              	 .thumb_func
 2248              	MPU_vTimerSetReloadMode:
 2249              	.LFB55:
1075:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1076:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1077:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1078:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 1 ) )
1079:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,
1080:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            void * pvParameter1,
1081:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            uint32_t ulParameter2,
1082:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                            TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
1083:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
1084:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
1085:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1086:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1087:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerPendFunctionCall( xFunctionToPend, pvParameter1, ulParameter2, xTicksToWait
1088:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
1089:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1090:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1091:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
1092:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 1 ) ) */
1093:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1094:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1095:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1096:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     void MPU_vTimerSetReloadMode( TimerHandle_t xTimer,
1097:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                   const UBaseType_t uxAutoReload ) /* FREERTOS_SYSTEM_CALL */
1098:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2250              	 .loc 1 1098 0
 2251              	 .cfi_startproc
 2252              	 
 2253              	 
 2254              	.LVL345:
 2255 0000 70B5     	 push {r4,r5,r6,lr}
 2256              	.LCFI59:
 2257              	 .cfi_def_cfa_offset 16
 2258              	 .cfi_offset 4,-16
 2259              	 .cfi_offset 5,-12
 2260              	 .cfi_offset 6,-8
 2261              	 .cfi_offset 14,-4
 2262 0002 0646     	 mov r6,r0
 2263 0004 0D46     	 mov r5,r1
1099:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2264              	 .loc 1 1099 0
 2265 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 2266              	.LVL346:
 2267 000a 0446     	 mov r4,r0
 2268              	.LVL347:
1100:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1101:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vTimerSetReloadMode( xTimer, uxAutoReload );
 2269              	 .loc 1 1101 0
 2270 000c 3046     	 mov r0,r6
 2271              	.LVL348:
 2272 000e 2946     	 mov r1,r5
 2273 0010 FFF7FEFF 	 bl vTimerSetReloadMode
 2274              	.LVL349:
1102:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2275              	 .loc 1 1102 0
 2276 0014 2046     	 mov r0,r4
 2277 0016 FFF7FEFF 	 bl vPortResetPrivilege
 2278              	.LVL350:
 2279 001a 70BD     	 pop {r4,r5,r6,pc}
 2280              	 .cfi_endproc
 2281              	.LFE55:
 2283              	 .section .text.MPU_uxTimerGetReloadMode,"ax",%progbits
 2284              	 .align 2
 2285              	 .global MPU_uxTimerGetReloadMode
 2286              	 .thumb
 2287              	 .thumb_func
 2289              	MPU_uxTimerGetReloadMode:
 2290              	.LFB56:
1103:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
1104:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
1105:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1106:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1107:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1108:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     UBaseType_t MPU_uxTimerGetReloadMode( TimerHandle_t xTimer )
1109:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2291              	 .loc 1 1109 0
 2292              	 .cfi_startproc
 2293              	 
 2294              	 
 2295              	.LVL351:
 2296 0000 38B5     	 push {r3,r4,r5,lr}
 2297              	.LCFI60:
 2298              	 .cfi_def_cfa_offset 16
 2299              	 .cfi_offset 3,-16
 2300              	 .cfi_offset 4,-12
 2301              	 .cfi_offset 5,-8
 2302              	 .cfi_offset 14,-4
 2303 0002 0446     	 mov r4,r0
1110:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2304              	 .loc 1 1110 0
 2305 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2306              	.LVL352:
 2307 0008 0546     	 mov r5,r0
 2308              	.LVL353:
1111:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         UBaseType_t uxReturn;
1112:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1113:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         uxReturn = uxTimerGetReloadMode( xTimer );
 2309              	 .loc 1 1113 0
 2310 000a 2046     	 mov r0,r4
 2311              	.LVL354:
 2312 000c FFF7FEFF 	 bl uxTimerGetReloadMode
 2313              	.LVL355:
 2314 0010 0446     	 mov r4,r0
 2315              	.LVL356:
1114:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2316              	 .loc 1 1114 0
 2317 0012 2846     	 mov r0,r5
 2318              	.LVL357:
 2319 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2320              	.LVL358:
1115:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return uxReturn;
1116:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2321              	 .loc 1 1116 0
 2322 0018 2046     	 mov r0,r4
 2323 001a 38BD     	 pop {r3,r4,r5,pc}
 2324              	 .cfi_endproc
 2325              	.LFE56:
 2327              	 .section .text.MPU_pcTimerGetName,"ax",%progbits
 2328              	 .align 2
 2329              	 .global MPU_pcTimerGetName
 2330              	 .thumb
 2331              	 .thumb_func
 2333              	MPU_pcTimerGetName:
 2334              	.LFB57:
1117:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif
1118:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1119:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1120:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1121:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     const char * MPU_pcTimerGetName( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1122:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2335              	 .loc 1 1122 0
 2336              	 .cfi_startproc
 2337              	 
 2338              	 
 2339              	.LVL359:
 2340 0000 38B5     	 push {r3,r4,r5,lr}
 2341              	.LCFI61:
 2342              	 .cfi_def_cfa_offset 16
 2343              	 .cfi_offset 3,-16
 2344              	 .cfi_offset 4,-12
 2345              	 .cfi_offset 5,-8
 2346              	 .cfi_offset 14,-4
 2347 0002 0446     	 mov r4,r0
1123:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         const char * pcReturn;
1124:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2348              	 .loc 1 1124 0
 2349 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2350              	.LVL360:
 2351 0008 0546     	 mov r5,r0
 2352              	.LVL361:
1125:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1126:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         pcReturn = pcTimerGetName( xTimer );
 2353              	 .loc 1 1126 0
 2354 000a 2046     	 mov r0,r4
 2355              	.LVL362:
 2356 000c FFF7FEFF 	 bl pcTimerGetName
 2357              	.LVL363:
 2358 0010 0446     	 mov r4,r0
 2359              	.LVL364:
1127:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2360              	 .loc 1 1127 0
 2361 0012 2846     	 mov r0,r5
 2362              	.LVL365:
 2363 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2364              	.LVL366:
1128:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1129:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return pcReturn;
1130:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2365              	 .loc 1 1130 0
 2366 0018 2046     	 mov r0,r4
 2367 001a 38BD     	 pop {r3,r4,r5,pc}
 2368              	 .cfi_endproc
 2369              	.LFE57:
 2371              	 .section .text.MPU_xTimerGetPeriod,"ax",%progbits
 2372              	 .align 2
 2373              	 .global MPU_xTimerGetPeriod
 2374              	 .thumb
 2375              	 .thumb_func
 2377              	MPU_xTimerGetPeriod:
 2378              	.LFB58:
1131:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1132:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1133:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1134:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1135:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TickType_t MPU_xTimerGetPeriod( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1136:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2379              	 .loc 1 1136 0
 2380              	 .cfi_startproc
 2381              	 
 2382              	 
 2383              	.LVL367:
 2384 0000 38B5     	 push {r3,r4,r5,lr}
 2385              	.LCFI62:
 2386              	 .cfi_def_cfa_offset 16
 2387              	 .cfi_offset 3,-16
 2388              	 .cfi_offset 4,-12
 2389              	 .cfi_offset 5,-8
 2390              	 .cfi_offset 14,-4
 2391 0002 0446     	 mov r4,r0
1137:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TickType_t xReturn;
1138:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2392              	 .loc 1 1138 0
 2393 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2394              	.LVL368:
 2395 0008 0546     	 mov r5,r0
 2396              	.LVL369:
1139:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1140:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerGetPeriod( xTimer );
 2397              	 .loc 1 1140 0
 2398 000a 2046     	 mov r0,r4
 2399              	.LVL370:
 2400 000c FFF7FEFF 	 bl xTimerGetPeriod
 2401              	.LVL371:
 2402 0010 0446     	 mov r4,r0
 2403              	.LVL372:
1141:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2404              	 .loc 1 1141 0
 2405 0012 2846     	 mov r0,r5
 2406              	.LVL373:
 2407 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2408              	.LVL374:
1142:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1143:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1144:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2409              	 .loc 1 1144 0
 2410 0018 2046     	 mov r0,r4
 2411 001a 38BD     	 pop {r3,r4,r5,pc}
 2412              	 .cfi_endproc
 2413              	.LFE58:
 2415              	 .section .text.MPU_xTimerGetExpiryTime,"ax",%progbits
 2416              	 .align 2
 2417              	 .global MPU_xTimerGetExpiryTime
 2418              	 .thumb
 2419              	 .thumb_func
 2421              	MPU_xTimerGetExpiryTime:
 2422              	.LFB59:
1145:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1146:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1147:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1148:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1149:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     TickType_t MPU_xTimerGetExpiryTime( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1150:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2423              	 .loc 1 1150 0
 2424              	 .cfi_startproc
 2425              	 
 2426              	 
 2427              	.LVL375:
 2428 0000 38B5     	 push {r3,r4,r5,lr}
 2429              	.LCFI63:
 2430              	 .cfi_def_cfa_offset 16
 2431              	 .cfi_offset 3,-16
 2432              	 .cfi_offset 4,-12
 2433              	 .cfi_offset 5,-8
 2434              	 .cfi_offset 14,-4
 2435 0002 0446     	 mov r4,r0
1151:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         TickType_t xReturn;
1152:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2436              	 .loc 1 1152 0
 2437 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2438              	.LVL376:
 2439 0008 0546     	 mov r5,r0
 2440              	.LVL377:
1153:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1154:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerGetExpiryTime( xTimer );
 2441              	 .loc 1 1154 0
 2442 000a 2046     	 mov r0,r4
 2443              	.LVL378:
 2444 000c FFF7FEFF 	 bl xTimerGetExpiryTime
 2445              	.LVL379:
 2446 0010 0446     	 mov r4,r0
 2447              	.LVL380:
1155:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2448              	 .loc 1 1155 0
 2449 0012 2846     	 mov r0,r5
 2450              	.LVL381:
 2451 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2452              	.LVL382:
1156:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1157:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1158:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2453              	 .loc 1 1158 0
 2454 0018 2046     	 mov r0,r4
 2455 001a 38BD     	 pop {r3,r4,r5,pc}
 2456              	 .cfi_endproc
 2457              	.LFE59:
 2459              	 .section .text.MPU_xTimerGenericCommand,"ax",%progbits
 2460              	 .align 2
 2461              	 .global MPU_xTimerGenericCommand
 2462              	 .thumb
 2463              	 .thumb_func
 2465              	MPU_xTimerGenericCommand:
 2466              	.LFB60:
1159:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1160:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1161:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1162:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TIMERS == 1 )
1163:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t MPU_xTimerGenericCommand( TimerHandle_t xTimer,
1164:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                          const BaseType_t xCommandID,
1165:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                          const TickType_t xOptionalValue,
1166:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                          BaseType_t * const pxHigherPriorityTaskWoken,
1167:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                          const TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
1168:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2467              	 .loc 1 1168 0
 2468              	 .cfi_startproc
 2469              	 
 2470              	 
 2471              	.LVL383:
 2472 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 2473              	.LCFI64:
 2474              	 .cfi_def_cfa_offset 24
 2475              	 .cfi_offset 4,-24
 2476              	 .cfi_offset 5,-20
 2477              	 .cfi_offset 6,-16
 2478              	 .cfi_offset 7,-12
 2479              	 .cfi_offset 8,-8
 2480              	 .cfi_offset 14,-4
 2481 0004 82B0     	 sub sp,sp,#8
 2482              	.LCFI65:
 2483              	 .cfi_def_cfa_offset 32
 2484 0006 8046     	 mov r8,r0
 2485 0008 0F46     	 mov r7,r1
 2486 000a 1646     	 mov r6,r2
 2487 000c 1C46     	 mov r4,r3
1169:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xReturn;
1170:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2488              	 .loc 1 1170 0
 2489 000e FFF7FEFF 	 bl xPortRaisePrivilege
 2490              	.LVL384:
 2491 0012 0546     	 mov r5,r0
 2492              	.LVL385:
1171:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1172:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xTimerGenericCommand( xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWok
 2493              	 .loc 1 1172 0
 2494 0014 089B     	 ldr r3,[sp,#32]
 2495 0016 0093     	 str r3,[sp]
 2496 0018 4046     	 mov r0,r8
 2497              	.LVL386:
 2498 001a 3946     	 mov r1,r7
 2499 001c 3246     	 mov r2,r6
 2500 001e 2346     	 mov r3,r4
 2501 0020 FFF7FEFF 	 bl xTimerGenericCommand
 2502              	.LVL387:
 2503 0024 0446     	 mov r4,r0
 2504              	.LVL388:
1173:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2505              	 .loc 1 1173 0
 2506 0026 2846     	 mov r0,r5
 2507              	.LVL389:
 2508 0028 FFF7FEFF 	 bl vPortResetPrivilege
 2509              	.LVL390:
1174:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1175:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1176:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2510              	 .loc 1 1176 0
 2511 002c 2046     	 mov r0,r4
 2512 002e 02B0     	 add sp,sp,#8
 2513              	.LCFI66:
 2514              	 .cfi_def_cfa_offset 24
 2515              	 
 2516 0030 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 2517              	 .cfi_endproc
 2518              	.LFE60:
 2520              	 .section .text.MPU_xEventGroupCreate,"ax",%progbits
 2521              	 .align 2
 2522              	 .global MPU_xEventGroupCreate
 2523              	 .thumb
 2524              	 .thumb_func
 2526              	MPU_xEventGroupCreate:
 2527              	.LFB61:
1177:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configUSE_TIMERS == 1 ) */
1178:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1179:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1180:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1181:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     EventGroupHandle_t MPU_xEventGroupCreate( void ) /* FREERTOS_SYSTEM_CALL */
1182:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 2528              	 .loc 1 1182 0
 2529              	 .cfi_startproc
 2530              	 
 2531              	 
 2532 0000 38B5     	 push {r3,r4,r5,lr}
 2533              	.LCFI67:
 2534              	 .cfi_def_cfa_offset 16
 2535              	 .cfi_offset 3,-16
 2536              	 .cfi_offset 4,-12
 2537              	 .cfi_offset 5,-8
 2538              	 .cfi_offset 14,-4
1183:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         EventGroupHandle_t xReturn;
1184:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2539              	 .loc 1 1184 0
 2540 0002 FFF7FEFF 	 bl xPortRaisePrivilege
 2541              	.LVL391:
 2542 0006 0546     	 mov r5,r0
 2543              	.LVL392:
1185:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1186:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xEventGroupCreate();
 2544              	 .loc 1 1186 0
 2545 0008 FFF7FEFF 	 bl xEventGroupCreate
 2546              	.LVL393:
 2547 000c 0446     	 mov r4,r0
 2548              	.LVL394:
1187:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 2549              	 .loc 1 1187 0
 2550 000e 2846     	 mov r0,r5
 2551              	.LVL395:
 2552 0010 FFF7FEFF 	 bl vPortResetPrivilege
 2553              	.LVL396:
1188:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1189:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1190:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 2554              	 .loc 1 1190 0
 2555 0014 2046     	 mov r0,r4
 2556 0016 38BD     	 pop {r3,r4,r5,pc}
 2557              	 .cfi_endproc
 2558              	.LFE61:
 2560              	 .section .text.MPU_xEventGroupWaitBits,"ax",%progbits
 2561              	 .align 2
 2562              	 .global MPU_xEventGroupWaitBits
 2563              	 .thumb
 2564              	 .thumb_func
 2566              	MPU_xEventGroupWaitBits:
 2567              	.LFB62:
1191:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
1192:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1193:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1194:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1195:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     EventGroupHandle_t MPU_xEventGroupCreateStatic( StaticEventGroup_t * pxEventGroupBuffer ) /* FR
1196:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
1197:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         EventGroupHandle_t xReturn;
1198:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1199:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1200:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xEventGroupCreateStatic( pxEventGroupBuffer );
1201:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
1202:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1203:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1204:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
1205:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
1206:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1207:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1208:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupWaitBits( EventGroupHandle_t xEventGroup,
1209:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                      const EventBits_t uxBitsToWaitFor,
1210:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                      const BaseType_t xClearOnExit,
1211:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                      const BaseType_t xWaitForAllBits,
1212:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                      TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
1213:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2568              	 .loc 1 1213 0
 2569              	 .cfi_startproc
 2570              	 
 2571              	 
 2572              	.LVL397:
 2573 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 2574              	.LCFI68:
 2575              	 .cfi_def_cfa_offset 24
 2576              	 .cfi_offset 4,-24
 2577              	 .cfi_offset 5,-20
 2578              	 .cfi_offset 6,-16
 2579              	 .cfi_offset 7,-12
 2580              	 .cfi_offset 8,-8
 2581              	 .cfi_offset 14,-4
 2582 0004 82B0     	 sub sp,sp,#8
 2583              	.LCFI69:
 2584              	 .cfi_def_cfa_offset 32
 2585 0006 8046     	 mov r8,r0
 2586 0008 0F46     	 mov r7,r1
 2587 000a 1646     	 mov r6,r2
 2588 000c 1C46     	 mov r4,r3
1214:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     EventBits_t xReturn;
1215:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2589              	 .loc 1 1215 0
 2590 000e FFF7FEFF 	 bl xPortRaisePrivilege
 2591              	.LVL398:
 2592 0012 0546     	 mov r5,r0
 2593              	.LVL399:
1216:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1217:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xEventGroupWaitBits( xEventGroup, uxBitsToWaitFor, xClearOnExit, xWaitForAllBits, xTi
 2594              	 .loc 1 1217 0
 2595 0014 089B     	 ldr r3,[sp,#32]
 2596 0016 0093     	 str r3,[sp]
 2597 0018 4046     	 mov r0,r8
 2598              	.LVL400:
 2599 001a 3946     	 mov r1,r7
 2600 001c 3246     	 mov r2,r6
 2601 001e 2346     	 mov r3,r4
 2602 0020 FFF7FEFF 	 bl xEventGroupWaitBits
 2603              	.LVL401:
 2604 0024 0446     	 mov r4,r0
 2605              	.LVL402:
1218:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2606              	 .loc 1 1218 0
 2607 0026 2846     	 mov r0,r5
 2608              	.LVL403:
 2609 0028 FFF7FEFF 	 bl vPortResetPrivilege
 2610              	.LVL404:
1219:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1220:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1221:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2611              	 .loc 1 1221 0
 2612 002c 2046     	 mov r0,r4
 2613 002e 02B0     	 add sp,sp,#8
 2614              	.LCFI70:
 2615              	 .cfi_def_cfa_offset 24
 2616              	 
 2617 0030 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 2618              	 .cfi_endproc
 2619              	.LFE62:
 2621              	 .section .text.MPU_xEventGroupClearBits,"ax",%progbits
 2622              	 .align 2
 2623              	 .global MPU_xEventGroupClearBits
 2624              	 .thumb
 2625              	 .thumb_func
 2627              	MPU_xEventGroupClearBits:
 2628              	.LFB63:
1222:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1223:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1224:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupClearBits( EventGroupHandle_t xEventGroup,
1225:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                       const EventBits_t uxBitsToClear ) /* FREERTOS_SYSTEM_CALL */
1226:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2629              	 .loc 1 1226 0
 2630              	 .cfi_startproc
 2631              	 
 2632              	 
 2633              	.LVL405:
 2634 0000 70B5     	 push {r4,r5,r6,lr}
 2635              	.LCFI71:
 2636              	 .cfi_def_cfa_offset 16
 2637              	 .cfi_offset 4,-16
 2638              	 .cfi_offset 5,-12
 2639              	 .cfi_offset 6,-8
 2640              	 .cfi_offset 14,-4
 2641 0002 0646     	 mov r6,r0
 2642 0004 0C46     	 mov r4,r1
1227:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     EventBits_t xReturn;
1228:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2643              	 .loc 1 1228 0
 2644 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 2645              	.LVL406:
 2646 000a 0546     	 mov r5,r0
 2647              	.LVL407:
1229:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1230:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xEventGroupClearBits( xEventGroup, uxBitsToClear );
 2648              	 .loc 1 1230 0
 2649 000c 3046     	 mov r0,r6
 2650              	.LVL408:
 2651 000e 2146     	 mov r1,r4
 2652 0010 FFF7FEFF 	 bl xEventGroupClearBits
 2653              	.LVL409:
 2654 0014 0446     	 mov r4,r0
 2655              	.LVL410:
1231:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2656              	 .loc 1 1231 0
 2657 0016 2846     	 mov r0,r5
 2658              	.LVL411:
 2659 0018 FFF7FEFF 	 bl vPortResetPrivilege
 2660              	.LVL412:
1232:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1233:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1234:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2661              	 .loc 1 1234 0
 2662 001c 2046     	 mov r0,r4
 2663 001e 70BD     	 pop {r4,r5,r6,pc}
 2664              	 .cfi_endproc
 2665              	.LFE63:
 2667              	 .section .text.MPU_xEventGroupSetBits,"ax",%progbits
 2668              	 .align 2
 2669              	 .global MPU_xEventGroupSetBits
 2670              	 .thumb
 2671              	 .thumb_func
 2673              	MPU_xEventGroupSetBits:
 2674              	.LFB64:
1235:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1236:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1237:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupSetBits( EventGroupHandle_t xEventGroup,
1238:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                     const EventBits_t uxBitsToSet ) /* FREERTOS_SYSTEM_CALL */
1239:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2675              	 .loc 1 1239 0
 2676              	 .cfi_startproc
 2677              	 
 2678              	 
 2679              	.LVL413:
 2680 0000 70B5     	 push {r4,r5,r6,lr}
 2681              	.LCFI72:
 2682              	 .cfi_def_cfa_offset 16
 2683              	 .cfi_offset 4,-16
 2684              	 .cfi_offset 5,-12
 2685              	 .cfi_offset 6,-8
 2686              	 .cfi_offset 14,-4
 2687 0002 0646     	 mov r6,r0
 2688 0004 0C46     	 mov r4,r1
1240:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     EventBits_t xReturn;
1241:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2689              	 .loc 1 1241 0
 2690 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 2691              	.LVL414:
 2692 000a 0546     	 mov r5,r0
 2693              	.LVL415:
1242:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1243:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xEventGroupSetBits( xEventGroup, uxBitsToSet );
 2694              	 .loc 1 1243 0
 2695 000c 3046     	 mov r0,r6
 2696              	.LVL416:
 2697 000e 2146     	 mov r1,r4
 2698 0010 FFF7FEFF 	 bl xEventGroupSetBits
 2699              	.LVL417:
 2700 0014 0446     	 mov r4,r0
 2701              	.LVL418:
1244:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2702              	 .loc 1 1244 0
 2703 0016 2846     	 mov r0,r5
 2704              	.LVL419:
 2705 0018 FFF7FEFF 	 bl vPortResetPrivilege
 2706              	.LVL420:
1245:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1246:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1247:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2707              	 .loc 1 1247 0
 2708 001c 2046     	 mov r0,r4
 2709 001e 70BD     	 pop {r4,r5,r6,pc}
 2710              	 .cfi_endproc
 2711              	.LFE64:
 2713              	 .section .text.MPU_xEventGroupSync,"ax",%progbits
 2714              	 .align 2
 2715              	 .global MPU_xEventGroupSync
 2716              	 .thumb
 2717              	 .thumb_func
 2719              	MPU_xEventGroupSync:
 2720              	.LFB65:
1248:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1249:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1250:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupSync( EventGroupHandle_t xEventGroup,
1251:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                  const EventBits_t uxBitsToSet,
1252:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                  const EventBits_t uxBitsToWaitFor,
1253:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                  TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
1254:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2721              	 .loc 1 1254 0
 2722              	 .cfi_startproc
 2723              	 
 2724              	 
 2725              	.LVL421:
 2726 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 2727              	.LCFI73:
 2728              	 .cfi_def_cfa_offset 24
 2729              	 .cfi_offset 4,-24
 2730              	 .cfi_offset 5,-20
 2731              	 .cfi_offset 6,-16
 2732              	 .cfi_offset 7,-12
 2733              	 .cfi_offset 8,-8
 2734              	 .cfi_offset 14,-4
 2735 0004 8046     	 mov r8,r0
 2736 0006 0F46     	 mov r7,r1
 2737 0008 1646     	 mov r6,r2
 2738 000a 1C46     	 mov r4,r3
1255:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     EventBits_t xReturn;
1256:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2739              	 .loc 1 1256 0
 2740 000c FFF7FEFF 	 bl xPortRaisePrivilege
 2741              	.LVL422:
 2742 0010 0546     	 mov r5,r0
 2743              	.LVL423:
1257:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1258:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xEventGroupSync( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTicksToWait );
 2744              	 .loc 1 1258 0
 2745 0012 4046     	 mov r0,r8
 2746              	.LVL424:
 2747 0014 3946     	 mov r1,r7
 2748 0016 3246     	 mov r2,r6
 2749 0018 2346     	 mov r3,r4
 2750 001a FFF7FEFF 	 bl xEventGroupSync
 2751              	.LVL425:
 2752 001e 0446     	 mov r4,r0
 2753              	.LVL426:
1259:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2754              	 .loc 1 1259 0
 2755 0020 2846     	 mov r0,r5
 2756              	.LVL427:
 2757 0022 FFF7FEFF 	 bl vPortResetPrivilege
 2758              	.LVL428:
1260:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1261:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1262:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2759              	 .loc 1 1262 0
 2760 0026 2046     	 mov r0,r4
 2761 0028 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 2762              	 .cfi_endproc
 2763              	.LFE65:
 2765              	 .section .text.MPU_vEventGroupDelete,"ax",%progbits
 2766              	 .align 2
 2767              	 .global MPU_vEventGroupDelete
 2768              	 .thumb
 2769              	 .thumb_func
 2771              	MPU_vEventGroupDelete:
 2772              	.LFB66:
1263:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1264:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1265:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void MPU_vEventGroupDelete( EventGroupHandle_t xEventGroup ) /* FREERTOS_SYSTEM_CALL */
1266:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2773              	 .loc 1 1266 0
 2774              	 .cfi_startproc
 2775              	 
 2776              	 
 2777              	.LVL429:
 2778 0000 38B5     	 push {r3,r4,r5,lr}
 2779              	.LCFI74:
 2780              	 .cfi_def_cfa_offset 16
 2781              	 .cfi_offset 3,-16
 2782              	 .cfi_offset 4,-12
 2783              	 .cfi_offset 5,-8
 2784              	 .cfi_offset 14,-4
 2785 0002 0546     	 mov r5,r0
1267:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2786              	 .loc 1 1267 0
 2787 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2788              	.LVL430:
 2789 0008 0446     	 mov r4,r0
 2790              	.LVL431:
1268:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1269:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vEventGroupDelete( xEventGroup );
 2791              	 .loc 1 1269 0
 2792 000a 2846     	 mov r0,r5
 2793              	.LVL432:
 2794 000c FFF7FEFF 	 bl vEventGroupDelete
 2795              	.LVL433:
1270:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2796              	 .loc 1 1270 0
 2797 0010 2046     	 mov r0,r4
 2798 0012 FFF7FEFF 	 bl vPortResetPrivilege
 2799              	.LVL434:
 2800 0016 38BD     	 pop {r3,r4,r5,pc}
 2801              	 .cfi_endproc
 2802              	.LFE66:
 2804              	 .section .text.MPU_xStreamBufferSend,"ax",%progbits
 2805              	 .align 2
 2806              	 .global MPU_xStreamBufferSend
 2807              	 .thumb
 2808              	 .thumb_func
 2810              	MPU_xStreamBufferSend:
 2811              	.LFB67:
1271:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
1272:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1273:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1274:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** size_t MPU_xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
1275:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                               const void * pvTxData,
1276:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                               size_t xDataLengthBytes,
1277:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                               TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
1278:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2812              	 .loc 1 1278 0
 2813              	 .cfi_startproc
 2814              	 
 2815              	 
 2816              	.LVL435:
 2817 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 2818              	.LCFI75:
 2819              	 .cfi_def_cfa_offset 24
 2820              	 .cfi_offset 4,-24
 2821              	 .cfi_offset 5,-20
 2822              	 .cfi_offset 6,-16
 2823              	 .cfi_offset 7,-12
 2824              	 .cfi_offset 8,-8
 2825              	 .cfi_offset 14,-4
 2826 0004 8046     	 mov r8,r0
 2827 0006 0F46     	 mov r7,r1
 2828 0008 1646     	 mov r6,r2
 2829 000a 1C46     	 mov r4,r3
1279:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     size_t xReturn;
1280:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2830              	 .loc 1 1280 0
 2831 000c FFF7FEFF 	 bl xPortRaisePrivilege
 2832              	.LVL436:
 2833 0010 0546     	 mov r5,r0
 2834              	.LVL437:
1281:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1282:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferSend( xStreamBuffer, pvTxData, xDataLengthBytes, xTicksToWait );
 2835              	 .loc 1 1282 0
 2836 0012 4046     	 mov r0,r8
 2837              	.LVL438:
 2838 0014 3946     	 mov r1,r7
 2839 0016 3246     	 mov r2,r6
 2840 0018 2346     	 mov r3,r4
 2841 001a FFF7FEFF 	 bl xStreamBufferSend
 2842              	.LVL439:
 2843 001e 0446     	 mov r4,r0
 2844              	.LVL440:
1283:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2845              	 .loc 1 1283 0
 2846 0020 2846     	 mov r0,r5
 2847              	.LVL441:
 2848 0022 FFF7FEFF 	 bl vPortResetPrivilege
 2849              	.LVL442:
1284:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1285:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1286:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2850              	 .loc 1 1286 0
 2851 0026 2046     	 mov r0,r4
 2852 0028 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 2853              	 .cfi_endproc
 2854              	.LFE67:
 2856              	 .section .text.MPU_xStreamBufferNextMessageLengthBytes,"ax",%progbits
 2857              	 .align 2
 2858              	 .global MPU_xStreamBufferNextMessageLengthBytes
 2859              	 .thumb
 2860              	 .thumb_func
 2862              	MPU_xStreamBufferNextMessageLengthBytes:
 2863              	.LFB68:
1287:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1288:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1289:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** size_t MPU_xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SY
1290:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2864              	 .loc 1 1290 0
 2865              	 .cfi_startproc
 2866              	 
 2867              	 
 2868              	.LVL443:
 2869 0000 38B5     	 push {r3,r4,r5,lr}
 2870              	.LCFI76:
 2871              	 .cfi_def_cfa_offset 16
 2872              	 .cfi_offset 3,-16
 2873              	 .cfi_offset 4,-12
 2874              	 .cfi_offset 5,-8
 2875              	 .cfi_offset 14,-4
 2876 0002 0446     	 mov r4,r0
1291:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     size_t xReturn;
1292:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2877              	 .loc 1 1292 0
 2878 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2879              	.LVL444:
 2880 0008 0546     	 mov r5,r0
 2881              	.LVL445:
1293:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1294:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferNextMessageLengthBytes( xStreamBuffer );
 2882              	 .loc 1 1294 0
 2883 000a 2046     	 mov r0,r4
 2884              	.LVL446:
 2885 000c FFF7FEFF 	 bl xStreamBufferNextMessageLengthBytes
 2886              	.LVL447:
 2887 0010 0446     	 mov r4,r0
 2888              	.LVL448:
1295:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2889              	 .loc 1 1295 0
 2890 0012 2846     	 mov r0,r5
 2891              	.LVL449:
 2892 0014 FFF7FEFF 	 bl vPortResetPrivilege
 2893              	.LVL450:
1296:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1297:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1298:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2894              	 .loc 1 1298 0
 2895 0018 2046     	 mov r0,r4
 2896 001a 38BD     	 pop {r3,r4,r5,pc}
 2897              	 .cfi_endproc
 2898              	.LFE68:
 2900              	 .section .text.MPU_xStreamBufferReceive,"ax",%progbits
 2901              	 .align 2
 2902              	 .global MPU_xStreamBufferReceive
 2903              	 .thumb
 2904              	 .thumb_func
 2906              	MPU_xStreamBufferReceive:
 2907              	.LFB69:
1299:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1300:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1301:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** size_t MPU_xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
1302:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                  void * pvRxData,
1303:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                  size_t xBufferLengthBytes,
1304:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                  TickType_t xTicksToWait ) /* FREERTOS_SYSTEM_CALL */
1305:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2908              	 .loc 1 1305 0
 2909              	 .cfi_startproc
 2910              	 
 2911              	 
 2912              	.LVL451:
 2913 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 2914              	.LCFI77:
 2915              	 .cfi_def_cfa_offset 24
 2916              	 .cfi_offset 4,-24
 2917              	 .cfi_offset 5,-20
 2918              	 .cfi_offset 6,-16
 2919              	 .cfi_offset 7,-12
 2920              	 .cfi_offset 8,-8
 2921              	 .cfi_offset 14,-4
 2922 0004 8046     	 mov r8,r0
 2923 0006 0F46     	 mov r7,r1
 2924 0008 1646     	 mov r6,r2
 2925 000a 1C46     	 mov r4,r3
1306:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     size_t xReturn;
1307:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2926              	 .loc 1 1307 0
 2927 000c FFF7FEFF 	 bl xPortRaisePrivilege
 2928              	.LVL452:
 2929 0010 0546     	 mov r5,r0
 2930              	.LVL453:
1308:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1309:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferReceive( xStreamBuffer, pvRxData, xBufferLengthBytes, xTicksToWait );
 2931              	 .loc 1 1309 0
 2932 0012 4046     	 mov r0,r8
 2933              	.LVL454:
 2934 0014 3946     	 mov r1,r7
 2935 0016 3246     	 mov r2,r6
 2936 0018 2346     	 mov r3,r4
 2937 001a FFF7FEFF 	 bl xStreamBufferReceive
 2938              	.LVL455:
 2939 001e 0446     	 mov r4,r0
 2940              	.LVL456:
1310:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2941              	 .loc 1 1310 0
 2942 0020 2846     	 mov r0,r5
 2943              	.LVL457:
 2944 0022 FFF7FEFF 	 bl vPortResetPrivilege
 2945              	.LVL458:
1311:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1312:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1313:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 2946              	 .loc 1 1313 0
 2947 0026 2046     	 mov r0,r4
 2948 0028 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 2949              	 .cfi_endproc
 2950              	.LFE69:
 2952              	 .section .text.MPU_vStreamBufferDelete,"ax",%progbits
 2953              	 .align 2
 2954              	 .global MPU_vStreamBufferDelete
 2955              	 .thumb
 2956              	 .thumb_func
 2958              	MPU_vStreamBufferDelete:
 2959              	.LFB70:
1314:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1315:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1316:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** void MPU_vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL */
1317:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2960              	 .loc 1 1317 0
 2961              	 .cfi_startproc
 2962              	 
 2963              	 
 2964              	.LVL459:
 2965 0000 38B5     	 push {r3,r4,r5,lr}
 2966              	.LCFI78:
 2967              	 .cfi_def_cfa_offset 16
 2968              	 .cfi_offset 3,-16
 2969              	 .cfi_offset 4,-12
 2970              	 .cfi_offset 5,-8
 2971              	 .cfi_offset 14,-4
 2972 0002 0546     	 mov r5,r0
1318:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2973              	 .loc 1 1318 0
 2974 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 2975              	.LVL460:
 2976 0008 0446     	 mov r4,r0
 2977              	.LVL461:
1319:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1320:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vStreamBufferDelete( xStreamBuffer );
 2978              	 .loc 1 1320 0
 2979 000a 2846     	 mov r0,r5
 2980              	.LVL462:
 2981 000c FFF7FEFF 	 bl vStreamBufferDelete
 2982              	.LVL463:
1321:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 2983              	 .loc 1 1321 0
 2984 0010 2046     	 mov r0,r4
 2985 0012 FFF7FEFF 	 bl vPortResetPrivilege
 2986              	.LVL464:
 2987 0016 38BD     	 pop {r3,r4,r5,pc}
 2988              	 .cfi_endproc
 2989              	.LFE70:
 2991              	 .section .text.MPU_xStreamBufferIsFull,"ax",%progbits
 2992              	 .align 2
 2993              	 .global MPU_xStreamBufferIsFull
 2994              	 .thumb
 2995              	 .thumb_func
 2997              	MPU_xStreamBufferIsFull:
 2998              	.LFB71:
1322:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
1323:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1324:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1325:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL */
1326:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 2999              	 .loc 1 1326 0
 3000              	 .cfi_startproc
 3001              	 
 3002              	 
 3003              	.LVL465:
 3004 0000 38B5     	 push {r3,r4,r5,lr}
 3005              	.LCFI79:
 3006              	 .cfi_def_cfa_offset 16
 3007              	 .cfi_offset 3,-16
 3008              	 .cfi_offset 4,-12
 3009              	 .cfi_offset 5,-8
 3010              	 .cfi_offset 14,-4
 3011 0002 0446     	 mov r4,r0
1327:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
1328:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3012              	 .loc 1 1328 0
 3013 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 3014              	.LVL466:
 3015 0008 0546     	 mov r5,r0
 3016              	.LVL467:
1329:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1330:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferIsFull( xStreamBuffer );
 3017              	 .loc 1 1330 0
 3018 000a 2046     	 mov r0,r4
 3019              	.LVL468:
 3020 000c FFF7FEFF 	 bl xStreamBufferIsFull
 3021              	.LVL469:
 3022 0010 0446     	 mov r4,r0
 3023              	.LVL470:
1331:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 3024              	 .loc 1 1331 0
 3025 0012 2846     	 mov r0,r5
 3026              	.LVL471:
 3027 0014 FFF7FEFF 	 bl vPortResetPrivilege
 3028              	.LVL472:
1332:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1333:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1334:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 3029              	 .loc 1 1334 0
 3030 0018 2046     	 mov r0,r4
 3031 001a 38BD     	 pop {r3,r4,r5,pc}
 3032              	 .cfi_endproc
 3033              	.LFE71:
 3035              	 .section .text.MPU_xStreamBufferIsEmpty,"ax",%progbits
 3036              	 .align 2
 3037              	 .global MPU_xStreamBufferIsEmpty
 3038              	 .thumb
 3039              	 .thumb_func
 3041              	MPU_xStreamBufferIsEmpty:
 3042              	.LFB72:
1335:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1336:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1337:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL *
1338:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 3043              	 .loc 1 1338 0
 3044              	 .cfi_startproc
 3045              	 
 3046              	 
 3047              	.LVL473:
 3048 0000 38B5     	 push {r3,r4,r5,lr}
 3049              	.LCFI80:
 3050              	 .cfi_def_cfa_offset 16
 3051              	 .cfi_offset 3,-16
 3052              	 .cfi_offset 4,-12
 3053              	 .cfi_offset 5,-8
 3054              	 .cfi_offset 14,-4
 3055 0002 0446     	 mov r4,r0
1339:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
1340:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3056              	 .loc 1 1340 0
 3057 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 3058              	.LVL474:
 3059 0008 0546     	 mov r5,r0
 3060              	.LVL475:
1341:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1342:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferIsEmpty( xStreamBuffer );
 3061              	 .loc 1 1342 0
 3062 000a 2046     	 mov r0,r4
 3063              	.LVL476:
 3064 000c FFF7FEFF 	 bl xStreamBufferIsEmpty
 3065              	.LVL477:
 3066 0010 0446     	 mov r4,r0
 3067              	.LVL478:
1343:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 3068              	 .loc 1 1343 0
 3069 0012 2846     	 mov r0,r5
 3070              	.LVL479:
 3071 0014 FFF7FEFF 	 bl vPortResetPrivilege
 3072              	.LVL480:
1344:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1345:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1346:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 3073              	 .loc 1 1346 0
 3074 0018 2046     	 mov r0,r4
 3075 001a 38BD     	 pop {r3,r4,r5,pc}
 3076              	 .cfi_endproc
 3077              	.LFE72:
 3079              	 .section .text.MPU_xStreamBufferReset,"ax",%progbits
 3080              	 .align 2
 3081              	 .global MPU_xStreamBufferReset
 3082              	 .thumb
 3083              	 .thumb_func
 3085              	MPU_xStreamBufferReset:
 3086              	.LFB73:
1347:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1348:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1349:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferReset( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL */
1350:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 3087              	 .loc 1 1350 0
 3088              	 .cfi_startproc
 3089              	 
 3090              	 
 3091              	.LVL481:
 3092 0000 38B5     	 push {r3,r4,r5,lr}
 3093              	.LCFI81:
 3094              	 .cfi_def_cfa_offset 16
 3095              	 .cfi_offset 3,-16
 3096              	 .cfi_offset 4,-12
 3097              	 .cfi_offset 5,-8
 3098              	 .cfi_offset 14,-4
 3099 0002 0446     	 mov r4,r0
1351:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
1352:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3100              	 .loc 1 1352 0
 3101 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 3102              	.LVL482:
 3103 0008 0546     	 mov r5,r0
 3104              	.LVL483:
1353:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1354:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferReset( xStreamBuffer );
 3105              	 .loc 1 1354 0
 3106 000a 2046     	 mov r0,r4
 3107              	.LVL484:
 3108 000c FFF7FEFF 	 bl xStreamBufferReset
 3109              	.LVL485:
 3110 0010 0446     	 mov r4,r0
 3111              	.LVL486:
1355:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 3112              	 .loc 1 1355 0
 3113 0012 2846     	 mov r0,r5
 3114              	.LVL487:
 3115 0014 FFF7FEFF 	 bl vPortResetPrivilege
 3116              	.LVL488:
1356:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1357:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1358:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 3117              	 .loc 1 1358 0
 3118 0018 2046     	 mov r0,r4
 3119 001a 38BD     	 pop {r3,r4,r5,pc}
 3120              	 .cfi_endproc
 3121              	.LFE73:
 3123              	 .section .text.MPU_xStreamBufferSpacesAvailable,"ax",%progbits
 3124              	 .align 2
 3125              	 .global MPU_xStreamBufferSpacesAvailable
 3126              	 .thumb
 3127              	 .thumb_func
 3129              	MPU_xStreamBufferSpacesAvailable:
 3130              	.LFB74:
1359:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1360:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1361:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** size_t MPU_xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CA
1362:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 3131              	 .loc 1 1362 0
 3132              	 .cfi_startproc
 3133              	 
 3134              	 
 3135              	.LVL489:
 3136 0000 38B5     	 push {r3,r4,r5,lr}
 3137              	.LCFI82:
 3138              	 .cfi_def_cfa_offset 16
 3139              	 .cfi_offset 3,-16
 3140              	 .cfi_offset 4,-12
 3141              	 .cfi_offset 5,-8
 3142              	 .cfi_offset 14,-4
 3143 0002 0446     	 mov r4,r0
1363:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     size_t xReturn;
1364:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3144              	 .loc 1 1364 0
 3145 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 3146              	.LVL490:
 3147 0008 0546     	 mov r5,r0
 3148              	.LVL491:
1365:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1366:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferSpacesAvailable( xStreamBuffer );
 3149              	 .loc 1 1366 0
 3150 000a 2046     	 mov r0,r4
 3151              	.LVL492:
 3152 000c FFF7FEFF 	 bl xStreamBufferSpacesAvailable
 3153              	.LVL493:
 3154 0010 0446     	 mov r4,r0
 3155              	.LVL494:
1367:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 3156              	 .loc 1 1367 0
 3157 0012 2846     	 mov r0,r5
 3158              	.LVL495:
 3159 0014 FFF7FEFF 	 bl vPortResetPrivilege
 3160              	.LVL496:
1368:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1369:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1370:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 3161              	 .loc 1 1370 0
 3162 0018 2046     	 mov r0,r4
 3163 001a 38BD     	 pop {r3,r4,r5,pc}
 3164              	 .cfi_endproc
 3165              	.LFE74:
 3167              	 .section .text.MPU_xStreamBufferBytesAvailable,"ax",%progbits
 3168              	 .align 2
 3169              	 .global MPU_xStreamBufferBytesAvailable
 3170              	 .thumb
 3171              	 .thumb_func
 3173              	MPU_xStreamBufferBytesAvailable:
 3174              	.LFB75:
1371:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1372:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1373:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** size_t MPU_xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CAL
1374:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 3175              	 .loc 1 1374 0
 3176              	 .cfi_startproc
 3177              	 
 3178              	 
 3179              	.LVL497:
 3180 0000 38B5     	 push {r3,r4,r5,lr}
 3181              	.LCFI83:
 3182              	 .cfi_def_cfa_offset 16
 3183              	 .cfi_offset 3,-16
 3184              	 .cfi_offset 4,-12
 3185              	 .cfi_offset 5,-8
 3186              	 .cfi_offset 14,-4
 3187 0002 0446     	 mov r4,r0
1375:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     size_t xReturn;
1376:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3188              	 .loc 1 1376 0
 3189 0004 FFF7FEFF 	 bl xPortRaisePrivilege
 3190              	.LVL498:
 3191 0008 0546     	 mov r5,r0
 3192              	.LVL499:
1377:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1378:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferBytesAvailable( xStreamBuffer );
 3193              	 .loc 1 1378 0
 3194 000a 2046     	 mov r0,r4
 3195              	.LVL500:
 3196 000c FFF7FEFF 	 bl xStreamBufferBytesAvailable
 3197              	.LVL501:
 3198 0010 0446     	 mov r4,r0
 3199              	.LVL502:
1379:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 3200              	 .loc 1 1379 0
 3201 0012 2846     	 mov r0,r5
 3202              	.LVL503:
 3203 0014 FFF7FEFF 	 bl vPortResetPrivilege
 3204              	.LVL504:
1380:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1381:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1382:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 3205              	 .loc 1 1382 0
 3206 0018 2046     	 mov r0,r4
 3207 001a 38BD     	 pop {r3,r4,r5,pc}
 3208              	 .cfi_endproc
 3209              	.LFE75:
 3211              	 .section .text.MPU_xStreamBufferSetTriggerLevel,"ax",%progbits
 3212              	 .align 2
 3213              	 .global MPU_xStreamBufferSetTriggerLevel
 3214              	 .thumb
 3215              	 .thumb_func
 3217              	MPU_xStreamBufferSetTriggerLevel:
 3218              	.LFB76:
1383:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1384:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1385:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer,
1386:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                              size_t xTriggerLevel ) /* FREERTOS_SYSTEM_CALL */
1387:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** {
 3219              	 .loc 1 1387 0
 3220              	 .cfi_startproc
 3221              	 
 3222              	 
 3223              	.LVL505:
 3224 0000 70B5     	 push {r4,r5,r6,lr}
 3225              	.LCFI84:
 3226              	 .cfi_def_cfa_offset 16
 3227              	 .cfi_offset 4,-16
 3228              	 .cfi_offset 5,-12
 3229              	 .cfi_offset 6,-8
 3230              	 .cfi_offset 14,-4
 3231 0002 0646     	 mov r6,r0
 3232 0004 0C46     	 mov r4,r1
1388:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xReturn;
1389:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3233              	 .loc 1 1389 0
 3234 0006 FFF7FEFF 	 bl xPortRaisePrivilege
 3235              	.LVL506:
 3236 000a 0546     	 mov r5,r0
 3237              	.LVL507:
1390:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1391:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     xReturn = xStreamBufferSetTriggerLevel( xStreamBuffer, xTriggerLevel );
 3238              	 .loc 1 1391 0
 3239 000c 3046     	 mov r0,r6
 3240              	.LVL508:
 3241 000e 2146     	 mov r1,r4
 3242 0010 FFF7FEFF 	 bl xStreamBufferSetTriggerLevel
 3243              	.LVL509:
 3244 0014 0446     	 mov r4,r0
 3245              	.LVL510:
1392:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     vPortResetPrivilege( xRunningPrivileged );
 3246              	 .loc 1 1392 0
 3247 0016 2846     	 mov r0,r5
 3248              	.LVL511:
 3249 0018 FFF7FEFF 	 bl vPortResetPrivilege
 3250              	.LVL512:
1393:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1394:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     return xReturn;
1395:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** }
 3251              	 .loc 1 1395 0
 3252 001c 2046     	 mov r0,r4
 3253 001e 70BD     	 pop {r4,r5,r6,pc}
 3254              	 .cfi_endproc
 3255              	.LFE76:
 3257              	 .section .text.MPU_xStreamBufferGenericCreate,"ax",%progbits
 3258              	 .align 2
 3259              	 .global MPU_xStreamBufferGenericCreate
 3260              	 .thumb
 3261              	 .thumb_func
 3263              	MPU_xStreamBufferGenericCreate:
 3264              	.LFB77:
1396:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1397:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1398:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1399:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     StreamBufferHandle_t MPU_xStreamBufferGenericCreate( size_t xBufferSizeBytes,
1400:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                          size_t xTriggerLevelBytes,
1401:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****                                                          BaseType_t xIsMessageBuffer ) /* FREERTOS_
1402:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     {
 3265              	 .loc 1 1402 0
 3266              	 .cfi_startproc
 3267              	 
 3268              	 
 3269              	.LVL513:
 3270 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 3271              	.LCFI85:
 3272              	 .cfi_def_cfa_offset 24
 3273              	 .cfi_offset 3,-24
 3274              	 .cfi_offset 4,-20
 3275              	 .cfi_offset 5,-16
 3276              	 .cfi_offset 6,-12
 3277              	 .cfi_offset 7,-8
 3278              	 .cfi_offset 14,-4
 3279 0002 0746     	 mov r7,r0
 3280 0004 0E46     	 mov r6,r1
 3281 0006 1446     	 mov r4,r2
1403:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         StreamBufferHandle_t xReturn;
1404:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 3282              	 .loc 1 1404 0
 3283 0008 FFF7FEFF 	 bl xPortRaisePrivilege
 3284              	.LVL514:
 3285 000c 0546     	 mov r5,r0
 3286              	.LVL515:
1405:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1406:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         xReturn = xStreamBufferGenericCreate( xBufferSizeBytes, xTriggerLevelBytes, xIsMessageBuffe
 3287              	 .loc 1 1406 0
 3288 000e 3846     	 mov r0,r7
 3289              	.LVL516:
 3290 0010 3146     	 mov r1,r6
 3291 0012 2246     	 mov r2,r4
 3292 0014 FFF7FEFF 	 bl xStreamBufferGenericCreate
 3293              	.LVL517:
 3294 0018 0446     	 mov r4,r0
 3295              	.LVL518:
1407:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         vPortResetPrivilege( xRunningPrivileged );
 3296              	 .loc 1 1407 0
 3297 001a 2846     	 mov r0,r5
 3298              	.LVL519:
 3299 001c FFF7FEFF 	 bl vPortResetPrivilege
 3300              	.LVL520:
1408:../FreeRTOS/Source/portable/Common/mpu_wrappers.c **** 
1409:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****         return xReturn;
1410:../FreeRTOS/Source/portable/Common/mpu_wrappers.c ****     }
 3301              	 .loc 1 1410 0
 3302 0020 2046     	 mov r0,r4
 3303 0022 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3304              	 .cfi_endproc
 3305              	.LFE77:
 3307              	 .text
 3308              	.Letext0:
 3309              	 .file 2 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 3310              	 .file 3 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3311              	 .file 4 "e:\\embedded\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3312              	 .file 5 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/projdefs.h"
 3313              	 .file 6 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 3314              	 .file 7 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/task.h"
 3315              	 .file 8 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/queue.h"
 3316              	 .file 9 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/timers.h"
 3317              	 .file 10 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/event_groups.h"
 3318              	 .file 11 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/stream_buffer.h"
 3319              	 .file 12 "E:/Embedded/Projects/XMC4500/Ethernet_CAN_XMC4500/FreeRTOS/Source/include/portable.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mpu_wrappers.c
    {standard input}:19     .text.xPortRaisePrivilege:00000000 $t
    {standard input}:24     .text.xPortRaisePrivilege:00000000 xPortRaisePrivilege
    {standard input}:55     .text.vPortResetPrivilege:00000000 $t
    {standard input}:60     .text.vPortResetPrivilege:00000000 vPortResetPrivilege
    {standard input}:92     .text.MPU_xTaskCreateRestricted:00000000 $t
    {standard input}:97     .text.MPU_xTaskCreateRestricted:00000000 MPU_xTaskCreateRestricted
    {standard input}:138    .text.MPU_xTaskCreate:00000000 $t
    {standard input}:143    .text.MPU_xTaskCreate:00000000 MPU_xTaskCreate
    {standard input}:201    .text.MPU_vTaskAllocateMPURegions:00000000 $t
    {standard input}:206    .text.MPU_vTaskAllocateMPURegions:00000000 MPU_vTaskAllocateMPURegions
    {standard input}:242    .text.MPU_vTaskDelete:00000000 $t
    {standard input}:247    .text.MPU_vTaskDelete:00000000 MPU_vTaskDelete
    {standard input}:281    .text.MPU_vTaskDelayUntil:00000000 $t
    {standard input}:286    .text.MPU_vTaskDelayUntil:00000000 MPU_vTaskDelayUntil
    {standard input}:322    .text.MPU_vTaskDelay:00000000 $t
    {standard input}:327    .text.MPU_vTaskDelay:00000000 MPU_vTaskDelay
    {standard input}:361    .text.MPU_uxTaskPriorityGet:00000000 $t
    {standard input}:366    .text.MPU_uxTaskPriorityGet:00000000 MPU_uxTaskPriorityGet
    {standard input}:405    .text.MPU_vTaskPrioritySet:00000000 $t
    {standard input}:410    .text.MPU_vTaskPrioritySet:00000000 MPU_vTaskPrioritySet
    {standard input}:446    .text.MPU_vTaskGetInfo:00000000 $t
    {standard input}:451    .text.MPU_vTaskGetInfo:00000000 MPU_vTaskGetInfo
    {standard input}:493    .text.MPU_vTaskSuspend:00000000 $t
    {standard input}:498    .text.MPU_vTaskSuspend:00000000 MPU_vTaskSuspend
    {standard input}:532    .text.MPU_vTaskResume:00000000 $t
    {standard input}:537    .text.MPU_vTaskResume:00000000 MPU_vTaskResume
    {standard input}:571    .text.MPU_vTaskSuspendAll:00000000 $t
    {standard input}:576    .text.MPU_vTaskSuspendAll:00000000 MPU_vTaskSuspendAll
    {standard input}:604    .text.MPU_xTaskResumeAll:00000000 $t
    {standard input}:609    .text.MPU_xTaskResumeAll:00000000 MPU_xTaskResumeAll
    {standard input}:644    .text.MPU_xTaskGetTickCount:00000000 $t
    {standard input}:649    .text.MPU_xTaskGetTickCount:00000000 MPU_xTaskGetTickCount
    {standard input}:684    .text.MPU_uxTaskGetNumberOfTasks:00000000 $t
    {standard input}:689    .text.MPU_uxTaskGetNumberOfTasks:00000000 MPU_uxTaskGetNumberOfTasks
    {standard input}:724    .text.MPU_pcTaskGetName:00000000 $t
    {standard input}:729    .text.MPU_pcTaskGetName:00000000 MPU_pcTaskGetName
    {standard input}:768    .text.MPU_uxTaskGetSystemState:00000000 $t
    {standard input}:773    .text.MPU_uxTaskGetSystemState:00000000 MPU_uxTaskGetSystemState
    {standard input}:818    .text.MPU_xTaskCatchUpTicks:00000000 $t
    {standard input}:823    .text.MPU_xTaskCatchUpTicks:00000000 MPU_xTaskCatchUpTicks
    {standard input}:862    .text.MPU_vTaskSetTimeOutState:00000000 $t
    {standard input}:867    .text.MPU_vTaskSetTimeOutState:00000000 MPU_vTaskSetTimeOutState
    {standard input}:901    .text.MPU_xTaskCheckForTimeOut:00000000 $t
    {standard input}:906    .text.MPU_xTaskCheckForTimeOut:00000000 MPU_xTaskCheckForTimeOut
    {standard input}:947    .text.MPU_xTaskGenericNotify:00000000 $t
    {standard input}:952    .text.MPU_xTaskGenericNotify:00000000 MPU_xTaskGenericNotify
    {standard input}:1008   .text.MPU_xTaskGenericNotifyWait:00000000 $t
    {standard input}:1013   .text.MPU_xTaskGenericNotifyWait:00000000 MPU_xTaskGenericNotifyWait
    {standard input}:1069   .text.MPU_ulTaskGenericNotifyTake:00000000 $t
    {standard input}:1074   .text.MPU_ulTaskGenericNotifyTake:00000000 MPU_ulTaskGenericNotifyTake
    {standard input}:1119   .text.MPU_xTaskGenericNotifyStateClear:00000000 $t
    {standard input}:1124   .text.MPU_xTaskGenericNotifyStateClear:00000000 MPU_xTaskGenericNotifyStateClear
    {standard input}:1165   .text.MPU_ulTaskGenericNotifyValueClear:00000000 $t
    {standard input}:1170   .text.MPU_ulTaskGenericNotifyValueClear:00000000 MPU_ulTaskGenericNotifyValueClear
    {standard input}:1215   .text.MPU_xQueueGenericCreate:00000000 $t
    {standard input}:1220   .text.MPU_xQueueGenericCreate:00000000 MPU_xQueueGenericCreate
    {standard input}:1265   .text.MPU_xQueueGenericReset:00000000 $t
    {standard input}:1270   .text.MPU_xQueueGenericReset:00000000 MPU_xQueueGenericReset
    {standard input}:1311   .text.MPU_xQueueGenericSend:00000000 $t
    {standard input}:1316   .text.MPU_xQueueGenericSend:00000000 MPU_xQueueGenericSend
    {standard input}:1363   .text.MPU_uxQueueMessagesWaiting:00000000 $t
    {standard input}:1368   .text.MPU_uxQueueMessagesWaiting:00000000 MPU_uxQueueMessagesWaiting
    {standard input}:1407   .text.MPU_uxQueueSpacesAvailable:00000000 $t
    {standard input}:1412   .text.MPU_uxQueueSpacesAvailable:00000000 MPU_uxQueueSpacesAvailable
    {standard input}:1451   .text.MPU_xQueueReceive:00000000 $t
    {standard input}:1456   .text.MPU_xQueueReceive:00000000 MPU_xQueueReceive
    {standard input}:1501   .text.MPU_xQueuePeek:00000000 $t
    {standard input}:1506   .text.MPU_xQueuePeek:00000000 MPU_xQueuePeek
    {standard input}:1551   .text.MPU_xQueueSemaphoreTake:00000000 $t
    {standard input}:1556   .text.MPU_xQueueSemaphoreTake:00000000 MPU_xQueueSemaphoreTake
    {standard input}:1597   .text.MPU_xQueueCreateMutex:00000000 $t
    {standard input}:1602   .text.MPU_xQueueCreateMutex:00000000 MPU_xQueueCreateMutex
    {standard input}:1641   .text.MPU_xQueueCreateCountingSemaphore:00000000 $t
    {standard input}:1646   .text.MPU_xQueueCreateCountingSemaphore:00000000 MPU_xQueueCreateCountingSemaphore
    {standard input}:1687   .text.MPU_xQueueTakeMutexRecursive:00000000 $t
    {standard input}:1692   .text.MPU_xQueueTakeMutexRecursive:00000000 MPU_xQueueTakeMutexRecursive
    {standard input}:1733   .text.MPU_xQueueGiveMutexRecursive:00000000 $t
    {standard input}:1738   .text.MPU_xQueueGiveMutexRecursive:00000000 MPU_xQueueGiveMutexRecursive
    {standard input}:1777   .text.MPU_vQueueAddToRegistry:00000000 $t
    {standard input}:1782   .text.MPU_vQueueAddToRegistry:00000000 MPU_vQueueAddToRegistry
    {standard input}:1818   .text.MPU_vQueueUnregisterQueue:00000000 $t
    {standard input}:1823   .text.MPU_vQueueUnregisterQueue:00000000 MPU_vQueueUnregisterQueue
    {standard input}:1857   .text.MPU_pcQueueGetName:00000000 $t
    {standard input}:1862   .text.MPU_pcQueueGetName:00000000 MPU_pcQueueGetName
    {standard input}:1901   .text.MPU_vQueueDelete:00000000 $t
    {standard input}:1906   .text.MPU_vQueueDelete:00000000 MPU_vQueueDelete
    {standard input}:1940   .text.MPU_vPortInitialiseBlocks:00000000 $t
    {standard input}:1945   .text.MPU_vPortInitialiseBlocks:00000000 MPU_vPortInitialiseBlocks
    {standard input}:1973   .text.MPU_xPortGetFreeHeapSize:00000000 $t
    {standard input}:1978   .text.MPU_xPortGetFreeHeapSize:00000000 MPU_xPortGetFreeHeapSize
    {standard input}:2013   .text.MPU_xTimerCreate:00000000 $t
    {standard input}:2018   .text.MPU_xTimerCreate:00000000 MPU_xTimerCreate
    {standard input}:2074   .text.MPU_pvTimerGetTimerID:00000000 $t
    {standard input}:2079   .text.MPU_pvTimerGetTimerID:00000000 MPU_pvTimerGetTimerID
    {standard input}:2118   .text.MPU_vTimerSetTimerID:00000000 $t
    {standard input}:2123   .text.MPU_vTimerSetTimerID:00000000 MPU_vTimerSetTimerID
    {standard input}:2159   .text.MPU_xTimerIsTimerActive:00000000 $t
    {standard input}:2164   .text.MPU_xTimerIsTimerActive:00000000 MPU_xTimerIsTimerActive
    {standard input}:2203   .text.MPU_xTimerGetTimerDaemonTaskHandle:00000000 $t
    {standard input}:2208   .text.MPU_xTimerGetTimerDaemonTaskHandle:00000000 MPU_xTimerGetTimerDaemonTaskHandle
    {standard input}:2243   .text.MPU_vTimerSetReloadMode:00000000 $t
    {standard input}:2248   .text.MPU_vTimerSetReloadMode:00000000 MPU_vTimerSetReloadMode
    {standard input}:2284   .text.MPU_uxTimerGetReloadMode:00000000 $t
    {standard input}:2289   .text.MPU_uxTimerGetReloadMode:00000000 MPU_uxTimerGetReloadMode
    {standard input}:2328   .text.MPU_pcTimerGetName:00000000 $t
    {standard input}:2333   .text.MPU_pcTimerGetName:00000000 MPU_pcTimerGetName
    {standard input}:2372   .text.MPU_xTimerGetPeriod:00000000 $t
    {standard input}:2377   .text.MPU_xTimerGetPeriod:00000000 MPU_xTimerGetPeriod
    {standard input}:2416   .text.MPU_xTimerGetExpiryTime:00000000 $t
    {standard input}:2421   .text.MPU_xTimerGetExpiryTime:00000000 MPU_xTimerGetExpiryTime
    {standard input}:2460   .text.MPU_xTimerGenericCommand:00000000 $t
    {standard input}:2465   .text.MPU_xTimerGenericCommand:00000000 MPU_xTimerGenericCommand
    {standard input}:2521   .text.MPU_xEventGroupCreate:00000000 $t
    {standard input}:2526   .text.MPU_xEventGroupCreate:00000000 MPU_xEventGroupCreate
    {standard input}:2561   .text.MPU_xEventGroupWaitBits:00000000 $t
    {standard input}:2566   .text.MPU_xEventGroupWaitBits:00000000 MPU_xEventGroupWaitBits
    {standard input}:2622   .text.MPU_xEventGroupClearBits:00000000 $t
    {standard input}:2627   .text.MPU_xEventGroupClearBits:00000000 MPU_xEventGroupClearBits
    {standard input}:2668   .text.MPU_xEventGroupSetBits:00000000 $t
    {standard input}:2673   .text.MPU_xEventGroupSetBits:00000000 MPU_xEventGroupSetBits
    {standard input}:2714   .text.MPU_xEventGroupSync:00000000 $t
    {standard input}:2719   .text.MPU_xEventGroupSync:00000000 MPU_xEventGroupSync
    {standard input}:2766   .text.MPU_vEventGroupDelete:00000000 $t
    {standard input}:2771   .text.MPU_vEventGroupDelete:00000000 MPU_vEventGroupDelete
    {standard input}:2805   .text.MPU_xStreamBufferSend:00000000 $t
    {standard input}:2810   .text.MPU_xStreamBufferSend:00000000 MPU_xStreamBufferSend
    {standard input}:2857   .text.MPU_xStreamBufferNextMessageLengthBytes:00000000 $t
    {standard input}:2862   .text.MPU_xStreamBufferNextMessageLengthBytes:00000000 MPU_xStreamBufferNextMessageLengthBytes
    {standard input}:2901   .text.MPU_xStreamBufferReceive:00000000 $t
    {standard input}:2906   .text.MPU_xStreamBufferReceive:00000000 MPU_xStreamBufferReceive
    {standard input}:2953   .text.MPU_vStreamBufferDelete:00000000 $t
    {standard input}:2958   .text.MPU_vStreamBufferDelete:00000000 MPU_vStreamBufferDelete
    {standard input}:2992   .text.MPU_xStreamBufferIsFull:00000000 $t
    {standard input}:2997   .text.MPU_xStreamBufferIsFull:00000000 MPU_xStreamBufferIsFull
    {standard input}:3036   .text.MPU_xStreamBufferIsEmpty:00000000 $t
    {standard input}:3041   .text.MPU_xStreamBufferIsEmpty:00000000 MPU_xStreamBufferIsEmpty
    {standard input}:3080   .text.MPU_xStreamBufferReset:00000000 $t
    {standard input}:3085   .text.MPU_xStreamBufferReset:00000000 MPU_xStreamBufferReset
    {standard input}:3124   .text.MPU_xStreamBufferSpacesAvailable:00000000 $t
    {standard input}:3129   .text.MPU_xStreamBufferSpacesAvailable:00000000 MPU_xStreamBufferSpacesAvailable
    {standard input}:3168   .text.MPU_xStreamBufferBytesAvailable:00000000 $t
    {standard input}:3173   .text.MPU_xStreamBufferBytesAvailable:00000000 MPU_xStreamBufferBytesAvailable
    {standard input}:3212   .text.MPU_xStreamBufferSetTriggerLevel:00000000 $t
    {standard input}:3217   .text.MPU_xStreamBufferSetTriggerLevel:00000000 MPU_xStreamBufferSetTriggerLevel
    {standard input}:3258   .text.MPU_xStreamBufferGenericCreate:00000000 $t
    {standard input}:3263   .text.MPU_xStreamBufferGenericCreate:00000000 MPU_xStreamBufferGenericCreate
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3466fc6a3db32493c997d085de4c7a28
                           .group:00000000 wm4.stddef.h.39.c744ceb84abf2f8351653f0e2622da1c
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.FreeRTOSConfig.h.30.aa43eb1cb33228d5c7e359a94d48589b
                           .group:00000000 wm4.projdefs.h.28.d6a7c9061b707820f2fcf4c2ff5d9f24
                           .group:00000000 wm4.portmacro.h.30.2ddc2eaf2e032c76c597fb78c4365041
                           .group:00000000 wm4.portable.h.63.e9cc508c3850f44ce542149380c67812
                           .group:00000000 wm4.mpu_wrappers.h.28.163fb40577cf8d1578015ea3f2ff4cdb
                           .group:00000000 wm4.FreeRTOS.h.67.9945f39eea4ddeb224c0782392206292
                           .group:00000000 wm4.list.h.57.02ec67e07eacffe5ca7cfb7326896236
                           .group:00000000 wm4.task.h.47.2d3fe49a094b8ec1e3e6aac441e8db21
                           .group:00000000 wm4.queue.h.66.45d4a3cf5de24cde7e732f8dad25383c
                           .group:00000000 wm4.timers.h.29.025d268d6baf57298309e7b498ee1cc7
                           .group:00000000 wm4.stream_buffer.h.51.c86ec0f31498dd4967228969a7042057

UNDEFINED SYMBOLS
portIS_PRIVILEGED
portRAISE_PRIVILEGE
portRESET_PRIVILEGE
xTaskCreateRestricted
xTaskCreate
vTaskAllocateMPURegions
vTaskDelete
vTaskDelayUntil
vTaskDelay
uxTaskPriorityGet
vTaskPrioritySet
vTaskGetInfo
vTaskSuspend
vTaskResume
vTaskSuspendAll
xTaskResumeAll
xTaskGetTickCount
uxTaskGetNumberOfTasks
pcTaskGetName
uxTaskGetSystemState
xTaskCatchUpTicks
vTaskSetTimeOutState
xTaskCheckForTimeOut
xTaskGenericNotify
xTaskGenericNotifyWait
ulTaskGenericNotifyTake
xTaskGenericNotifyStateClear
ulTaskGenericNotifyValueClear
xQueueGenericCreate
xQueueGenericReset
xQueueGenericSend
uxQueueMessagesWaiting
uxQueueSpacesAvailable
xQueueReceive
xQueuePeek
xQueueSemaphoreTake
xQueueCreateMutex
xQueueCreateCountingSemaphore
xQueueTakeMutexRecursive
xQueueGiveMutexRecursive
vQueueAddToRegistry
vQueueUnregisterQueue
pcQueueGetName
vQueueDelete
vPortInitialiseBlocks
xPortGetFreeHeapSize
xTimerCreate
pvTimerGetTimerID
vTimerSetTimerID
xTimerIsTimerActive
xTimerGetTimerDaemonTaskHandle
vTimerSetReloadMode
uxTimerGetReloadMode
pcTimerGetName
xTimerGetPeriod
xTimerGetExpiryTime
xTimerGenericCommand
xEventGroupCreate
xEventGroupWaitBits
xEventGroupClearBits
xEventGroupSetBits
xEventGroupSync
vEventGroupDelete
xStreamBufferSend
xStreamBufferNextMessageLengthBytes
xStreamBufferReceive
vStreamBufferDelete
xStreamBufferIsFull
xStreamBufferIsEmpty
xStreamBufferReset
xStreamBufferSpacesAvailable
xStreamBufferBytesAvailable
xStreamBufferSetTriggerLevel
xStreamBufferGenericCreate
