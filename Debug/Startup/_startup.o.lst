   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .eabi_attribute 28,1
   5              	 .fpu fpv4-sp-d16
   6              	 .eabi_attribute 23,1
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "_startup.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.__libc_init_array,"ax",%progbits
  19              	 .align 2
  20              	 .global __libc_init_array
  21              	 .thumb
  22              	 .thumb_func
  24              	__libc_init_array:
  25              	.LFB0:
  26              	 .file 1 "../Startup/_startup.c"
   1:../Startup/_startup.c **** /******************************************************************************
   2:../Startup/_startup.c **** * Title:		Startup Source
   3:../Startup/_startup.c **** * Filename:		_startup.c
   4:../Startup/_startup.c **** * Author:
   5:../Startup/_startup.c **** * Origin Date:
   6:../Startup/_startup.c **** * Version:
   7:../Startup/_startup.c **** * Notes:
   8:../Startup/_startup.c **** *
   9:../Startup/_startup.c **** * Change History
  10:../Startup/_startup.c **** * --------------
  11:../Startup/_startup.c **** *
  12:../Startup/_startup.c **** *******************************************************************************/
  13:../Startup/_startup.c **** 
  14:../Startup/_startup.c **** /** @file:	_startup.c
  15:../Startup/_startup.c ****  *  @brief:	This source file contains libc functions for linking
  16:../Startup/_startup.c ****  */
  17:../Startup/_startup.c **** 
  18:../Startup/_startup.c **** /******************************************************************************
  19:../Startup/_startup.c **** * Functions
  20:../Startup/_startup.c **** *******************************************************************************/
  21:../Startup/_startup.c **** 
  22:../Startup/_startup.c **** // These magic symbols are provided by the linker.
  23:../Startup/_startup.c **** extern void
  24:../Startup/_startup.c **** (*__preinit_array_start[]) (void) __attribute__((weak));
  25:../Startup/_startup.c **** extern void
  26:../Startup/_startup.c **** (*__preinit_array_end[]) (void) __attribute__((weak));
  27:../Startup/_startup.c **** extern void
  28:../Startup/_startup.c **** (*__init_array_start[]) (void) __attribute__((weak));
  29:../Startup/_startup.c **** extern void
  30:../Startup/_startup.c **** (*__init_array_end[]) (void) __attribute__((weak));
  31:../Startup/_startup.c **** extern void
  32:../Startup/_startup.c **** (*__fini_array_start[]) (void) __attribute__((weak));
  33:../Startup/_startup.c **** extern void
  34:../Startup/_startup.c **** (*__fini_array_end[]) (void) __attribute__((weak));
  35:../Startup/_startup.c **** 
  36:../Startup/_startup.c **** // Iterate over all the preinit/init routines (mainly static constructors).
  37:../Startup/_startup.c **** void __libc_init_array( void );
  38:../Startup/_startup.c **** inline void
  39:../Startup/_startup.c **** __attribute__((always_inline))
  40:../Startup/_startup.c **** __libc_init_array (void)
  41:../Startup/_startup.c **** {
  27              	 .loc 1 41 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 70B5     	 push {r4,r5,r6,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 16
  34              	 .cfi_offset 4,-16
  35              	 .cfi_offset 5,-12
  36              	 .cfi_offset 6,-8
  37              	 .cfi_offset 14,-4
  42:../Startup/_startup.c ****   int count;
  43:../Startup/_startup.c ****   int i;
  44:../Startup/_startup.c **** 
  45:../Startup/_startup.c ****   count = __preinit_array_end - __preinit_array_start;
  38              	 .loc 1 45 0
  39 0002 0E4E     	 ldr r6,.L9
  40 0004 0E4B     	 ldr r3,.L9+4
  41 0006 9E1B     	 subs r6,r3,r6
  42 0008 B610     	 asrs r6,r6,#2
  43              	.LVL0:
  46:../Startup/_startup.c ****   for (i = 0; i < count; i++)
  44              	 .loc 1 46 0
  45 000a 002E     	 cmp r6,#0
  46 000c 07DD     	 ble .L2
  47 000e 0B4D     	 ldr r5,.L9
  48 0010 0024     	 movs r4,#0
  49              	.LVL1:
  50              	.L3:
  47:../Startup/_startup.c ****     __preinit_array_start[i] ();
  51              	 .loc 1 47 0 discriminator 3
  52 0012 55F8043B 	 ldr r3,[r5],#4
  53 0016 9847     	 blx r3
  54              	.LVL2:
  46:../Startup/_startup.c ****   for (i = 0; i < count; i++)
  55              	 .loc 1 46 0 discriminator 3
  56 0018 0134     	 adds r4,r4,#1
  57              	.LVL3:
  58 001a B442     	 cmp r4,r6
  59 001c F9D1     	 bne .L3
  60              	.LVL4:
  61              	.L2:
  48:../Startup/_startup.c **** 
  49:../Startup/_startup.c ****   /* If you need to run the code in the .init section, please use
  50:../Startup/_startup.c ****    * the startup files, since this requires the code in crti.o and crtn.o
  51:../Startup/_startup.c ****    * to add the function prologue/epilogue.
  52:../Startup/_startup.c ****    * _init(); // DO NOT ENABE THIS!
  53:../Startup/_startup.c ****    */
  54:../Startup/_startup.c ****   count = __init_array_end - __init_array_start;
  62              	 .loc 1 54 0
  63 001e 094E     	 ldr r6,.L9+8
  64              	.LVL5:
  65 0020 094B     	 ldr r3,.L9+12
  66 0022 9E1B     	 subs r6,r3,r6
  67 0024 B610     	 asrs r6,r6,#2
  68              	.LVL6:
  55:../Startup/_startup.c ****   for (i = 0; i < count; i++)
  69              	 .loc 1 55 0
  70 0026 002E     	 cmp r6,#0
  71 0028 07DD     	 ble .L1
  72 002a 064D     	 ldr r5,.L9+8
  73 002c 0024     	 movs r4,#0
  74              	.LVL7:
  75              	.L5:
  56:../Startup/_startup.c ****     __init_array_start[i] ();
  76              	 .loc 1 56 0 discriminator 3
  77 002e 55F8043B 	 ldr r3,[r5],#4
  78 0032 9847     	 blx r3
  79              	.LVL8:
  55:../Startup/_startup.c ****   for (i = 0; i < count; i++)
  80              	 .loc 1 55 0 discriminator 3
  81 0034 0134     	 adds r4,r4,#1
  82              	.LVL9:
  83 0036 B442     	 cmp r4,r6
  84 0038 F9D1     	 bne .L5
  85              	.LVL10:
  86              	.L1:
  87 003a 70BD     	 pop {r4,r5,r6,pc}
  88              	.LVL11:
  89              	.L10:
  90              	 .align 2
  91              	.L9:
  92 003c 00000000 	 .word __preinit_array_start
  93 0040 00000000 	 .word __preinit_array_end
  94 0044 00000000 	 .word __init_array_start
  95 0048 00000000 	 .word __init_array_end
  96              	 .cfi_endproc
  97              	.LFE0:
  99              	 .section .text.__libc_fini_array,"ax",%progbits
 100              	 .align 2
 101              	 .global __libc_fini_array
 102              	 .thumb
 103              	 .thumb_func
 105              	__libc_fini_array:
 106              	.LFB1:
  57:../Startup/_startup.c **** }
  58:../Startup/_startup.c **** 
  59:../Startup/_startup.c **** /* Run all the cleanup routines (mainly static destructors) */
  60:../Startup/_startup.c **** void __libc_fini_array( void );
  61:../Startup/_startup.c **** inline void
  62:../Startup/_startup.c **** __attribute__((always_inline))
  63:../Startup/_startup.c **** __libc_fini_array (void)
  64:../Startup/_startup.c **** {
 107              	 .loc 1 64 0
 108              	 .cfi_startproc
 109              	 
 110              	 
 111 0000 38B5     	 push {r3,r4,r5,lr}
 112              	.LCFI1:
 113              	 .cfi_def_cfa_offset 16
 114              	 .cfi_offset 3,-16
 115              	 .cfi_offset 4,-12
 116              	 .cfi_offset 5,-8
 117              	 .cfi_offset 14,-4
  65:../Startup/_startup.c ****   int count;
  66:../Startup/_startup.c ****   int i;
  67:../Startup/_startup.c **** 
  68:../Startup/_startup.c ****   count = __fini_array_end - __fini_array_start;
 118              	 .loc 1 68 0
 119 0002 074D     	 ldr r5,.L16
 120 0004 074B     	 ldr r3,.L16+4
 121 0006 5D1B     	 subs r5,r3,r5
 122 0008 AC10     	 asrs r4,r5,#2
 123              	.LVL12:
  69:../Startup/_startup.c ****   for (i = count; i > 0; i--)
 124              	 .loc 1 69 0
 125 000a 002C     	 cmp r4,#0
 126 000c 07DD     	 ble .L11
 127 000e 044B     	 ldr r3,.L16
 128 0010 1D44     	 add r5,r5,r3
 129              	.LVL13:
 130              	.L13:
  70:../Startup/_startup.c ****     __fini_array_start[i - 1] ();
 131              	 .loc 1 70 0 discriminator 3
 132 0012 013C     	 subs r4,r4,#1
 133              	.LVL14:
 134 0014 55F8043D 	 ldr r3,[r5,#-4]!
 135 0018 9847     	 blx r3
 136              	.LVL15:
  69:../Startup/_startup.c ****   for (i = count; i > 0; i--)
 137              	 .loc 1 69 0 discriminator 3
 138 001a 002C     	 cmp r4,#0
 139 001c F9D1     	 bne .L13
 140              	.L11:
 141 001e 38BD     	 pop {r3,r4,r5,pc}
 142              	.LVL16:
 143              	.L17:
 144              	 .align 2
 145              	.L16:
 146 0020 00000000 	 .word __fini_array_start
 147 0024 00000000 	 .word __fini_array_end
 148              	 .cfi_endproc
 149              	.LFE1:
 151              	 .weak __fini_array_end
 152              	 .weak __fini_array_start
 153              	 .weak __init_array_end
 154              	 .weak __init_array_start
 155              	 .weak __preinit_array_end
 156              	 .weak __preinit_array_start
 157              	 .text
 158              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 _startup.c
    {standard input}:19     .text.__libc_init_array:00000000 $t
    {standard input}:24     .text.__libc_init_array:00000000 __libc_init_array
    {standard input}:92     .text.__libc_init_array:0000003c $d
    {standard input}:100    .text.__libc_fini_array:00000000 $t
    {standard input}:105    .text.__libc_fini_array:00000000 __libc_fini_array
    {standard input}:146    .text.__libc_fini_array:00000020 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3466fc6a3db32493c997d085de4c7a28

UNDEFINED SYMBOLS
__preinit_array_start
__preinit_array_end
__init_array_start
__init_array_end
__fini_array_start
__fini_array_end
